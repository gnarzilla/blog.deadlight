{
  "version": 3,
  "sources": ["../bundle-cv7T01/checked-fetch.js", "../../../../../lib.deadlight/core/src/db/base.js", "../../../../../lib.deadlight/core/src/auth/password.js", "../../../../../lib.deadlight/core/src/auth/errors.js", "../../../../../lib.deadlight/core/src/auth/index.js", "../../../../../lib.deadlight/core/src/db/models/user.js", "../../../../../lib.deadlight/core/src/logging/logger.js", "../../../src/config.js", "../../../src/templates/base.js", "../../../src/templates/admin/dashboard.js", "../../../src/templates/admin/userManagement.js", "../../../src/templates/admin/settings.js", "../../../src/services/proxy.js", "../../../../../lib.deadlight/core/src/db/models/post.js", "../../../../../lib.deadlight/core/src/db/models/settings.js", "../../../../../lib.deadlight/core/src/db/models/index.js", "../../../src/services/config.js", "../../../src/services/outbox.js", "../../../../../lib.deadlight/node_modules/marked/src/defaults.ts", "../../../../../lib.deadlight/node_modules/marked/src/rules.ts", "../../../../../lib.deadlight/node_modules/marked/src/helpers.ts", "../../../../../lib.deadlight/node_modules/marked/src/Tokenizer.ts", "../../../../../lib.deadlight/node_modules/marked/src/Lexer.ts", "../../../../../lib.deadlight/node_modules/marked/src/Renderer.ts", "../../../../../lib.deadlight/node_modules/marked/src/TextRenderer.ts", "../../../../../lib.deadlight/node_modules/marked/src/Parser.ts", "../../../../../lib.deadlight/node_modules/marked/src/Hooks.ts", "../../../../../lib.deadlight/node_modules/marked/src/Instance.ts", "../../../../../lib.deadlight/node_modules/marked/src/marked.ts", "../../../../../lib.deadlight/node_modules/cssfilter/lib/default.js", "../../../../../lib.deadlight/node_modules/cssfilter/lib/util.js", "../../../../../lib.deadlight/node_modules/cssfilter/lib/parser.js", "../../../../../lib.deadlight/node_modules/cssfilter/lib/css.js", "../../../../../lib.deadlight/node_modules/cssfilter/lib/index.js", "../../../../../lib.deadlight/node_modules/xss/lib/util.js", "../../../../../lib.deadlight/node_modules/xss/lib/default.js", "../../../../../lib.deadlight/node_modules/xss/lib/parser.js", "../../../../../lib.deadlight/node_modules/xss/lib/xss.js", "../../../../../lib.deadlight/node_modules/xss/lib/index.js", "../../../../../lib.deadlight/core/src/markdown/processor.js", "../../../src/templates/user/profile.js", "../bundle-cv7T01/middleware-loader.entry.ts", "../bundle-cv7T01/middleware-insertion-facade.js", "../../../src/index.js", "../../../src/routes/index.js", "../../../src/routes/styles.js", "../../../src/routes/static.js", "../../../src/routes/auth.js", "../../../src/templates/auth/index.js", "../../../src/templates/auth/login.js", "../../../src/templates/auth/base.js", "../../../src/utils/auth.js", "../../../src/utils/jwt.js", "../../../../../lib.deadlight/core/src/security/validation.js", "../../../../../lib.deadlight/core/src/security/ratelimit.js", "../../../src/routes/admin.js", "../../../src/templates/admin/index.js", "../../../src/templates/admin/addPost.js", "../../../src/templates/admin/editPost.js", "../../../src/templates/admin/addUser.js", "../../../src/templates/admin/deletePost.js", "../../../src/routes/proxy.js", "../../../src/templates/admin/proxyDashboard.js", "../../../src/routes/blog.js", "../../../src/templates/blog/list.js", "../../../../../lib.deadlight/core/src/components/posts/index.js", "../../../../../lib.deadlight/core/src/components/posts/list.js", "../../../../../lib.deadlight/core/src/markdown/index.js", "../../../../../lib.deadlight/core/src/components/posts/pagination.js", "../../../src/templates/blog/single.js", "../../../src/utils/templates.js", "../../../src/routes/inbox.js", "../../../src/routes/user.js", "../../../src/middleware/error.js", "../../../src/middleware/logging.js", "../../../../../lib.deadlight/core/src/security/middleware.js", "../../../../../lib.deadlight/core/src/security/headers.js", "../../../../../.nvm/versions/node/v24.4.1/lib/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../../../.nvm/versions/node/v24.4.1/lib/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../../../../../.nvm/versions/node/v24.4.1/lib/node_modules/wrangler/templates/middleware/common.ts"],
  "sourceRoot": "/home/thatch/blog.deadlight/blog.deadlight/.wrangler/tmp/dev-haFpXE",
  "sourcesContent": ["const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t\t);\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "// core/src/db/base.js\n\n// Add the DatabaseError class definition\nexport class DatabaseError extends Error {\n  constructor(message, code) {\n    super(message);\n    this.name = 'DatabaseError';\n    this.code = code;\n  }\n}\n\n// Then the BaseModel class\nexport class BaseModel {\n  constructor(db) {\n    this.db = db;\n  }\n\n  async query(sql, params = []) {\n    try {\n      const stmt = params.length === 0\n        ? this.db.prepare(sql)\n        : this.db.prepare(sql).bind(...params);\n\n      const result = await stmt.all();\n\n      // D1 returns { results: [...], success: true, meta: {...} }\n      // Extract just the results array\n      return result.results || result;\n    } catch (error) {\n      throw new DatabaseError(`Query failed: ${error.message}`, 'QUERY_ERROR');\n    }\n  }\n\n  async queryFirst(sql, params = []) {\n    try {\n      const stmt = params.length === 0\n        ? this.db.prepare(sql)\n        : this.db.prepare(sql).bind(...params);\n\n      const result = await stmt.first();\n\n      // first() returns the row directly, not wrapped\n      return result;\n    } catch (error) {\n      throw new DatabaseError(`Query failed: ${error.message}`, 'QUERY_ERROR');\n    }\n  }\n\n  async execute(sql, params = []) {\n    try {\n      const stmt = params.length === 0\n        ? this.db.prepare(sql)\n        : this.db.prepare(sql).bind(...params);\n\n      const result = await stmt.run();\n\n      // run() returns the full result object with meta\n      return result;\n    } catch (error) {\n      throw new DatabaseError(`Execute failed: ${error.message}`, 'EXECUTE_ERROR');\n    }\n  }\n}", "// core/src/auth/password.js\nexport async function hashPassword(password, options = {}) {\n  const encoder = new TextEncoder();\n  const iterations = options.iterations || 100000;\n  const saltLength = options.saltLength || 16;\n  \n  const salt = crypto.getRandomValues(new Uint8Array(saltLength));\n\n  // Import the password as a key\n  const keyMaterial = await crypto.subtle.importKey(\n    'raw',\n    encoder.encode(password),\n    'PBKDF2',\n    false,\n    ['deriveBits']\n  );\n\n  // Use PBKDF2 to derive the key\n  const derivedBits = await crypto.subtle.deriveBits(\n    {\n      name: 'PBKDF2',\n      salt: salt,\n      iterations: iterations,\n      hash: 'SHA-256',\n    },\n    keyMaterial,\n    256 // Length in bits\n  );\n\n  // Convert to hex strings\n  const hashArray = Array.from(new Uint8Array(derivedBits));\n  const hashHex = hashArray.map(b => b.toString(16).padStart(2, '0')).join('');\n  const saltHex = Array.from(salt).map(b => b.toString(16).padStart(2, '0')).join('');\n\n  return { hash: hashHex, salt: saltHex, iterations };\n}\n\nexport async function verifyPassword(password, storedHash, storedSalt, iterations = 100000) {\n  const encoder = new TextEncoder();\n  const salt = Uint8Array.from(\n    storedSalt.match(/.{1,2}/g).map(byte => parseInt(byte, 16))\n  );\n\n  // Import the password as a key\n  const keyMaterial = await crypto.subtle.importKey(\n    'raw',\n    encoder.encode(password),\n    'PBKDF2',\n    false,\n    ['deriveBits']\n  );\n\n  // Use PBKDF2 to derive the key\n  const derivedBits = await crypto.subtle.deriveBits(\n    {\n      name: 'PBKDF2',\n      salt: salt,\n      iterations: iterations,\n      hash: 'SHA-256',\n    },\n    keyMaterial,\n    256 // Length in bits\n  );\n\n  // Convert to hex string for comparison\n  const hashArray = Array.from(new Uint8Array(derivedBits));\n  const hashHex = hashArray.map(b => b.toString(16).padStart(2, '0')).join('');\n\n  return hashHex === storedHash;\n}\n\nexport async function checkAuth(request, env) {\n  const cookies = request.headers.get('Cookie') || '';\n  const token = cookies.split(';')\n    .map(c => c.trim())\n    .find(c => c.startsWith('token='))\n    ?.split('=')[1];\n  \n  if (!token) {\n    return null;\n  }\n\n  try {\n    return await verifyJWT(token, env.JWT_SECRET);\n  } catch (error) {\n    console.warn('Auth check failed:', error.message);\n    return null;\n  }\n}", "// core/src/auth/errors.js\nexport class AuthError extends Error {\n  constructor(message, code, statusCode = 401) {\n    super(message);\n    this.name = 'AuthError';\n    this.code = code;\n    this.statusCode = statusCode;\n  }\n}\n\nexport class JWTError extends Error {\n  constructor(message, code) {\n    super(message);\n    this.name = 'JWTError';\n    this.code = code;\n  }\n}\n\nexport const AuthErrorCodes = {\n  MISSING_CREDENTIALS: 'MISSING_CREDENTIALS',\n  INVALID_CREDENTIALS: 'INVALID_CREDENTIALS',\n  USER_NOT_FOUND: 'USER_NOT_FOUND',\n  INVALID_PASSWORD: 'INVALID_PASSWORD',\n  TOKEN_EXPIRED: 'TOKEN_EXPIRED',\n  INVALID_TOKEN: 'INVALID_TOKEN',\n  ACCESS_DENIED: 'ACCESS_DENIED'\n}", "// deadlight-core/src/auth/index.js\n// Main auth module exports\n\nexport { hashPassword, verifyPassword, checkAuth } from './password.js';\nexport { AuthError, AuthErrorCodes } from './errors.js';\n/**\n * Base64 URL-safe encoding for JWT\n * @param {ArrayBuffer} arrayBuffer - Data to encode\n * @returns {string} Base64 URL-safe encoded string\n */\nfunction base64UrlEncode(arrayBuffer) {\n  const uint8Array = new Uint8Array(arrayBuffer);\n  let base64String = '';\n\n  for (let i = 0; i < uint8Array.length; i++) {\n    base64String += String.fromCharCode(uint8Array[i]);\n  }\n\n  return btoa(base64String)\n    .replace(/=/g, '')\n    .replace(/\\+/g, '-')\n    .replace(/\\//g, '_');\n}\n\n/**\n * Base64 URL-safe decoding for JWT\n * @param {string} base64UrlString - Base64 URL-safe encoded string\n * @returns {ArrayBuffer} Decoded data\n */\nfunction base64UrlDecode(base64UrlString) {\n  const base64String = base64UrlString\n    .replace(/-/g, '+')\n    .replace(/_/g, '/')\n    .padEnd(base64UrlString.length + (4 - (base64UrlString.length % 4)) % 4, '=');\n\n  const binaryString = atob(base64String);\n  const len = binaryString.length;\n  const bytes = new Uint8Array(len);\n\n  for (let i = 0; i < len; i++) {\n    bytes[i] = binaryString.charCodeAt(i);\n  }\n\n  return bytes.buffer;\n}\n\n/**\n * Create a JWT token with enhanced payload validation\n * @param {object} payload - JWT payload data\n * @param {string} secret - Secret key for signing\n * @param {object} options - Additional options (exp, iss, etc.)\n * @returns {Promise<string>} JWT token\n */\nexport async function createJWT(payload, secret, options = {}) {\n  const encoder = new TextEncoder();\n  \n  // Enhanced header with optional algorithm specification\n  const header = { \n    alg: options.algorithm || 'HS256', \n    typ: 'JWT' \n  };\n\n  // Enhanced payload with standard claims\n  const now = Math.floor(Date.now() / 1000);\n  const enhancedPayload = {\n    ...payload,\n    iat: now, // Issued at\n    ...(options.expiresIn && { exp: now + options.expiresIn }),\n    ...(options.issuer && { iss: options.issuer }),\n    ...(options.audience && { aud: options.audience })\n  };\n\n  const encodedHeader = base64UrlEncode(encoder.encode(JSON.stringify(header)));\n  const encodedPayload = base64UrlEncode(encoder.encode(JSON.stringify(enhancedPayload)));\n\n  const key = await crypto.subtle.importKey(\n    'raw',\n    encoder.encode(secret),\n    { name: 'HMAC', hash: 'SHA-256' },\n    false,\n    ['sign']\n  );\n\n  const data = `${encodedHeader}.${encodedPayload}`;\n  const signature = await crypto.subtle.sign('HMAC', key, encoder.encode(data));\n  const encodedSignature = base64UrlEncode(signature);\n\n  return `${encodedHeader}.${encodedPayload}.${encodedSignature}`;\n}\n\n/**\n * Verify JWT token with enhanced validation\n * @param {string} token - JWT token to verify\n * @param {string} secret - Secret key for verification\n * @param {object} options - Verification options\n * @returns {Promise<object|null>} Decoded payload or null if invalid\n */\nexport async function verifyJWT(token, secret, options = {}) {\n  try {\n    const encoder = new TextEncoder();\n    const [encodedHeader, encodedPayload, encodedSignature] = token.split('.');\n\n    if (!encodedHeader || !encodedPayload || !encodedSignature) {\n      return null;\n    }\n\n    // Verify signature\n    const key = await crypto.subtle.importKey(\n      'raw',\n      encoder.encode(secret),\n      { name: 'HMAC', hash: 'SHA-256' },\n      false,\n      ['verify']\n    );\n\n    const data = `${encodedHeader}.${encodedPayload}`;\n    const signature = base64UrlDecode(encodedSignature);\n\n    const isValid = await crypto.subtle.verify(\n      'HMAC', \n      key, \n      signature, \n      encoder.encode(data)\n    );\n\n    if (!isValid) {\n      return null;\n    }\n\n    // Decode payload\n    const decodedPayloadBytes = base64UrlDecode(encodedPayload);\n    const decodedPayloadString = new TextDecoder().decode(decodedPayloadBytes);\n    const payload = JSON.parse(decodedPayloadString);\n\n    // Enhanced validation\n    const now = Math.floor(Date.now() / 1000);\n    \n    // Check expiration\n    if (payload.exp && payload.exp < now) {\n      return null;\n    }\n\n    // Check not before\n    if (payload.nbf && payload.nbf > now) {\n      return null;\n    }\n\n    // Check issuer if specified\n    if (options.issuer && payload.iss !== options.issuer) {\n      return null;\n    }\n\n    // Check audience if specified\n    if (options.audience && payload.aud !== options.audience) {\n      return null;\n    }\n\n    return payload;\n  } catch (error) {\n    console.error('JWT verification error:', error);\n    return null;\n  }\n}", "// core/src/db/models/user.js\nimport { BaseModel, DatabaseError } from '../base.js';\nimport { hashPassword, verifyPassword } from '../../auth/index.js';\n\nexport class UserModel extends BaseModel {\n  async create({ username, password, role = 'user' }) {\n    try {\n      // Check if user already exists\n      const existing = await this.queryFirst(\n        'SELECT id FROM users WHERE username = ?', \n        [username]\n      );\n      \n      if (existing) {\n        throw new DatabaseError('Username already exists', 'DUPLICATE_USER');\n      }\n\n      // Hash password\n      const { hash, salt } = await hashPassword(password);\n\n      // Insert user\n      const result = await this.execute(\n        'INSERT INTO users (username, password, salt, role, created_at) VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP)',\n        [username, hash, salt, role]\n      );\n\n      // Return created user (without password/salt)\n      return await this.getById(result.meta.last_row_id);\n    } catch (error) {\n      if (error instanceof DatabaseError) throw error;\n      throw new DatabaseError(`Failed to create user: ${error.message}`, 'CREATE_ERROR');\n    }\n  }\n\n  async getById(id) {\n    const user = await this.queryFirst(\n      'SELECT id, username, role, created_at, last_login FROM users WHERE id = ?',\n      [id]\n    );\n    return user;\n  }\n\n  async getByUsername(username) {\n    const user = await this.queryFirst(\n      'SELECT id, username, role, created_at, last_login FROM users WHERE username = ?',\n      [username]\n    );\n    return user;\n  }\n\n  async authenticate(username, password) {\n    try {\n      // Get user with password/salt for verification\n      const user = await this.queryFirst(\n        'SELECT * FROM users WHERE username = ?',\n        [username]\n      );\n      \n      if (!user) {\n        return { success: false, error: 'USER_NOT_FOUND' };\n      }\n\n      const isValid = await verifyPassword(password, user.password, user.salt);\n      \n      if (!isValid) {\n        return { success: false, error: 'INVALID_PASSWORD' };\n      }\n\n      // Return user without sensitive data\n      const { password: _, salt: __, ...safeUser } = user;\n      return { success: true, user: safeUser };\n    } catch (error) {\n      return { success: false, error: 'DATABASE_ERROR', details: error.message };\n    }\n  }\n\n  async updateLastLogin(userId) {\n    return await this.execute(\n      'UPDATE users SET last_login = CURRENT_TIMESTAMP WHERE id = ?',\n      [userId]\n    );\n  }\n\n  async changePassword(userId, newPassword) {\n    const { hash, salt } = await hashPassword(newPassword);\n    return await this.execute(\n      'UPDATE users SET password = ?, salt = ? WHERE id = ?',\n      [hash, salt, userId]\n    );\n  }\n\n  async delete(userId) {\n    return await this.execute('DELETE FROM users WHERE id = ?', [userId]);\n  }\n\n  async list({ limit = 50, offset = 0 } = {}) {\n    return await this.query(\n      'SELECT id, username, role, created_at, last_login FROM users ORDER BY created_at DESC LIMIT ? OFFSET ?',\n      [limit, offset]\n    );\n  }\n\n  async count() {\n    const result = await this.queryFirst('SELECT COUNT(*) as total FROM users');\n    return result.total;\n  }\n}\n", "// core/src/logging/logger.js\nexport class Logger {\n  constructor(options = {}) {\n    this.context = options.context || 'app';\n    this.level = options.level || 'info';\n  }\n\n  info(message, data = {}) {\n    this.log('info', message, data);\n  }\n\n  warn(message, data = {}) {\n    this.log('warn', message, data);\n  }\n\n  error(message, data = {}) {\n    this.log('error', message, data);\n  }\n\n  log(level, message, data) {\n    const logEntry = {\n      timestamp: new Date().toISOString(),\n      level,\n      context: this.context,\n      message,\n      ...data\n    };\n    \n    console.log(JSON.stringify(logEntry));\n  }\n}\n", "// src/config.js\nexport const siteConfig = {\n  title: 'deadlight.boo',\n  description: 'A minimal blog framework',\n  postsPerPage: 10,\n  dateFormat: 'M/D/YYYY'\n};\n", "// src/templates/base.js\nimport { siteConfig } from '../config.js';\n\nexport function renderTemplate(title, bodyContent, user = null, config = null) {\n  const siteTitle = config?.title || 'deadlight';\n  const pageTitle = title === 'home' ? siteTitle : `${title} | ${siteTitle}`;\n  \n  const authLinks = user \n    ? `\n      <a href=\"/admin/add\">Create New Post</a> |\n      <a href=\"/admin\">Dashboard</a> |\n      <a href=\"/admin/proxy\">Proxy Server</a> |\n      <a href=\"/logout\">Logout</a>\n      `\n    : `<a href=\"/login\">Login</a>`;\n\n  return `\n    <!DOCTYPE html>\n    <html lang=\"en\" data-theme=\"dark\">\n    <head>\n      <meta charset=\"UTF-8\">\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n      <title>${pageTitle}</title>\n      <link rel=\"icon\" type=\"image/x-icon\" href=\"/favicon.ico\">\n      <link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"/favicon.ico\">\n      <link rel=\"apple-touch-icon\" href=\"/assets/apple-touch-icon.png\">\n      <link rel=\"stylesheet\" href=\"/styles/theme.css\">\n      <link rel=\"stylesheet\" href=\"/styles/dark_min.css\" id=\"theme-stylesheet\">\n    </head>\n    <body>\n      <header>\n        <h1><a href=\"/\">${siteTitle}</a></h1>\n        <nav>\n          ${authLinks}\n          <div class=\"theme-toggle-container\">\n            <button id=\"theme-toggle\" class=\"theme-toggle\" aria-label=\"Toggle theme\">\n              <span class=\"theme-icon\">\u2735</span>\n            </button>\n          </div>\n        </nav>\n      </header>\n      ${bodyContent}\n      <script>\n        document.addEventListener('DOMContentLoaded', () => {\n          const themeToggle = document.getElementById('theme-toggle');\n          const html = document.documentElement;\n          const stylesheet = document.getElementById('theme-stylesheet');\n          \n          // Load saved theme\n          let currentTheme = localStorage.getItem('theme') || 'dark';\n          html.setAttribute('data-theme', currentTheme);\n          stylesheet.href = '/styles/' + currentTheme + '_min.css';\n\n          // Update theme icon\n          const themeIcon = themeToggle.querySelector('.theme-icon');\n          themeIcon.textContent = currentTheme === 'dark' ? '\u2667' : '\u25C7';\n          \n          // Handle theme toggle\n          themeToggle.addEventListener('click', () => {\n            currentTheme = currentTheme === 'dark' ? 'light' : 'dark';\n            \n            // Update localStorage\n            localStorage.setItem('theme', currentTheme);\n            \n            // Update HTML attribute\n            html.setAttribute('data-theme', currentTheme);\n            \n            // Update stylesheet\n            stylesheet.href = '/styles/' + currentTheme + '_min.css';\n            \n            // Update icon\n            themeIcon.textContent = currentTheme === 'dark' ? '\u2661' : '\u2664';\n          });\n        });\n\n        // Keyboard navigation for pagination (moved outside of theme toggle)\n        document.addEventListener('keydown', (e) => {\n          // Don't interfere with form inputs\n          if (e.target.tagName === 'INPUT' || e.target.tagName === 'TEXTAREA') return;\n          \n          if (e.key === 'ArrowLeft') {\n            const prevLink = document.querySelector('.pagination-prev');\n            if (prevLink && !prevLink.classList.contains('pagination-disabled')) {\n              prevLink.click();\n            }\n          } else if (e.key === 'ArrowRight') {\n            const nextLink = document.querySelector('.pagination-next');\n            if (nextLink && !nextLink.classList.contains('pagination-disabled')) {\n              nextLink.click();\n            }\n          }\n        });\n      </script>\n    </body>\n    </html>\n  `;\n}", "// src/templates/admin/dashboard.js\nimport { renderTemplate } from '../base.js';\n\nexport function renderAdminDashboard(stats, posts, requestStats = [], user, config = null) { \n  // Prepare data for the simple chart\n  const chartData = requestStats && requestStats.length > 0 \n    ? requestStats.map(day => ({\n        day: new Date(day.day).toLocaleDateString('en-US', { weekday: 'short' }),\n        requests: day.requests\n      }))\n    : [];\n  \n  const maxRequests = chartData.length > 0 \n    ? Math.max(...chartData.map(d => d.requests), 1)\n    : 1;\n\n  // Build the dashboard content\n  const content = `\n    <div class=\"container\">\n      <div class=\"page-header\">\n        <h1>Dashboard</h1>\n      </div>\n      \n      <div class=\"admin-dashboard\">\n        <!-- Stats Grid -->\n        <div class=\"stats-grid\">\n          <div class=\"stat-card\">\n            <h3>TOTAL POSTS</h3>\n            <div class=\"stat-number\">${stats.totalPosts}</div>\n          </div>\n          <div class=\"stat-card\">\n            <h3>TOTAL USERS</h3>\n            <div class=\"stat-number\">${stats.totalUsers || 0}</div>\n          </div>\n          <div class=\"stat-card\">\n            <h3>POSTS TODAY</h3>\n            <div class=\"stat-number\">${stats.postsToday || 0}</div>\n          </div>\n          <div class=\"stat-card\">\n            <h3>PUBLISHED</h3>\n            <div class=\"stat-number\">${stats.publishedPosts || 0}</div>\n          </div>\n        </div>\n\n        <!-- Quick Actions -->\n        <div class=\"quick-actions\">\n          <h2>Quick Actions</h2>\n          <div class=\"action-buttons\">\n            <a href=\"/admin/add\" class=\"button\">Create New Post</a>\n            <a href=\"/admin/users\" class=\"button\">Manage Users</a>\n            <a href=\"/admin/settings\" class=\"button\">Settings</a>\n            <a href=\"/\" class=\"button\">View Blog</a>\n          </div>\n        </div>\n\n        <!-- Request Chart -->\n        ${chartData.length > 0 ? `\n          <div class=\"chart-section\">\n            <h2>Requests (Last 7 Days)</h2>\n            <div class=\"simple-chart\">\n              ${chartData.map(data => `\n                <div class=\"chart-bar\" style=\"--height: ${(data.requests / maxRequests) * 100}%\">\n                  <div class=\"bar\"></div>\n                  <div class=\"label\">${data.day}</div>\n                  <div class=\"value\">${data.requests}</div>\n                </div>\n              `).join('')}\n            </div>\n          </div>\n        ` : ''}\n\n        <!-- Recent Posts -->\n        <div class=\"recent-posts-section\">\n          <h2>Recent Posts</h2>\n          ${posts.length > 0 ? `\n            <table class=\"data-table\">\n              <thead>\n                <tr>\n                  <th>TITLE</th>\n                  <th>AUTHOR</th>\n                  <th>DATE</th>\n                  <th>STATUS</th>\n                  <th>ACTIONS</th>\n                </tr>\n              </thead>\n              <tbody>\n                ${posts.map(post => `\n                  <tr>\n                    <td>\n                      <a href=\"/post/${post.slug || post.id}\" class=\"post-title-link\">${post.title}</a>\n                    </td>\n                    <td>${post.author_username || 'Unknown'}</td>\n                    <td>${new Date(post.created_at).toLocaleDateString()}</td>\n                    <td>${post.published ? '<span class=\"badge\">Published</span>' : 'Draft'}</td>\n                    <td class=\"action-cell\">\n                      <a href=\"/admin/edit/${post.id}\" class=\"button small-button edit-button\">Edit</a>\n                      <form action=\"/admin/delete/${post.id}\" method=\"POST\" style=\"display: inline;\">\n                        <button type=\"submit\" class=\"button small-button delete-button\" \n                                onclick=\"return confirm('Delete this post?')\">Delete</button>\n                      </form>\n                    </td>\n                  </tr>\n                `).join('')}\n              </tbody>\n            </table>\n          ` : `\n            <div class=\"empty-state\">\n              <p>No posts yet.</p>\n              <a href=\"/admin/add\" class=\"button\">Create your first post</a>\n            </div>\n          `}\n        </div>\n      </div>\n    </div>\n  `;\n\n  // Use renderTemplate to get consistent header with dynamic title\n  return renderTemplate('Dashboard', content, user, config);\n}", "// src/templates/admin/userManagement.js\nimport { renderTemplate } from '../base.js';\n\nexport function renderUserManagement(users, currentUser, config = null) {\n  const content = `\n    <div class=\"user-management\">\n      <div class=\"page-header\">\n        <h1>User Management</h1>\n        <a href=\"/admin/users/add\" class=\"button\">Add New User</a>\n      </div>\n      \n      <div class=\"user-stats\">\n        <p>Total Users: ${users.length}</p>\n      </div>\n\n      <table class=\"data-table\">\n        <thead>\n          <tr>\n            <th>Username</th>\n            <th>Posts</th>\n            <th>Last Active</th>\n            <th>Joined</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          ${users.map(user => `\n            <tr>\n              <td>\n                <strong>${user.username}</strong>\n                ${user.id === currentUser.id ? '<span class=\"badge\">You</span>' : ''}\n              </td>\n              <td>${user.post_count || 0}</td>\n              <td>${user.last_post ? new Date(user.last_post).toLocaleDateString() : 'Never'}</td>\n              <td>${new Date(user.created_at).toLocaleDateString()}</td>\n              <td>\n                ${user.id !== currentUser.id ? `\n                  <form action=\"/admin/users/delete/${user.id}\" method=\"POST\" style=\"display: inline;\">\n                    <button type=\"submit\" class=\"small-button delete-button\" \n                            onclick=\"return confirm('Delete user ${user.username}? This will delete all their posts.')\">\n                      Delete\n                    </button>\n                  </form>\n                ` : '<span class=\"muted\">-</span>'}\n              </td>\n            </tr>\n          `).join('')}\n        </tbody>\n      </table>\n\n      <div class=\"info-box\">\n        <p><strong>Note:</strong> Deleting a user will delete all their posts. You cannot delete your own account while logged in.</p>\n      </div>\n    </div>\n  `;\n\n  return renderTemplate('User Management', content, currentUser, config);\n}", "// src/templates/admin/settings.js - Updated with proper checkbox styling\nimport { renderTemplate } from '../base.js';\n\nexport function renderSettings(settings, user) {\n  const content = `\n    <div class=\"settings-page\">\n      <h1>Site Settings</h1>\n      \n      <form method=\"POST\" action=\"/admin/settings\" class=\"settings-form\">\n        <div class=\"settings-grid\">\n          <div class=\"setting-group\">\n            <h3>General Settings</h3>\n            \n            <div class=\"setting-item\">\n              <label for=\"site_title\">Site Title</label>\n              <input type=\"text\" id=\"site_title\" name=\"site_title\" \n                     value=\"${settings.site_title || ''}\" required>\n              <small>The name of your site, shown in header and page titles</small>\n            </div>\n            \n            <div class=\"setting-item\">\n              <label for=\"site_description\">Site Description</label>\n              <textarea id=\"site_description\" name=\"site_description\" rows=\"3\">${settings.site_description || ''}</textarea>\n              <small>Brief description for SEO and social sharing</small>\n            </div>\n          </div>\n\n          <div class=\"setting-group\">\n            <h3>Display Settings</h3>\n            \n            <div class=\"setting-item\">\n              <label for=\"posts_per_page\">Posts Per Page</label>\n              <input type=\"number\" id=\"posts_per_page\" name=\"posts_per_page\" \n                     value=\"${settings.posts_per_page || 10}\" min=\"1\" max=\"50\">\n              <small>How many posts to show on the home page</small>\n            </div>\n            \n            <div class=\"setting-item\">\n              <label for=\"date_format\">Date Format</label>\n              <select id=\"date_format\" name=\"date_format\">\n                <option value=\"M/D/YYYY\" ${settings.date_format === 'M/D/YYYY' ? 'selected' : ''}>M/D/YYYY (12/25/2024)</option>\n                <option value=\"D/M/YYYY\" ${settings.date_format === 'D/M/YYYY' ? 'selected' : ''}>D/M/YYYY (25/12/2024)</option>\n                <option value=\"YYYY-MM-DD\" ${settings.date_format === 'YYYY-MM-DD' ? 'selected' : ''}>YYYY-MM-DD (2024-12-25)</option>\n                <option value=\"MMM D, YYYY\" ${settings.date_format === 'MMM D, YYYY' ? 'selected' : ''}>MMM D, YYYY (Dec 25, 2024)</option>\n              </select>\n            </div>\n            \n            <div class=\"setting-item\">\n              <label for=\"timezone\">Timezone</label>\n              <input type=\"text\" id=\"timezone\" name=\"timezone\" \n                     value=\"${settings.timezone || 'UTC'}\" placeholder=\"UTC\">\n              <small>Timezone for post timestamps</small>\n            </div>\n          </div>\n\n          <div class=\"setting-group\">\n            <h3>Access Control</h3>\n            \n          <div class=\"checkbox-group\">\n            <label class=\"checkbox-label\">\n              <input type=\"checkbox\" name=\"enable_registration\" ${settings.enable_registration ? 'checked' : ''}>\n              <span>Enable User Registration</span>\n            </label>\n            <small>Allow visitors to create new accounts (currently placeholder)</small>\n          </div>\n            \n            <div class=\"checkbox-group\">\n              <label class=\"checkbox-label\">\n                <input type=\"checkbox\" name=\"require_login_to_read\" \n                       ${settings.require_login_to_read ? 'checked' : ''}>\n                <span>Require Login to Read Posts</span>\n              </label>\n            </div>\n            \n            <div class=\"checkbox-group\">\n              <label class=\"checkbox-label\">\n                <input type=\"checkbox\" name=\"maintenance_mode\" \n                       ${settings.maintenance_mode ? 'checked' : ''}>\n                <span>Maintenance Mode</span>\n              </label>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"form-actions\">\n          <button type=\"submit\" class=\"button primary\">Save Settings</button>\n          <a href=\"/admin\" class=\"button secondary\">Cancel</a>\n        </div>\n      </form>\n    </div>\n  `;\n\n  return renderTemplate('Settings', content, user);\n}", "// src/services/proxy.js\nexport class ProxyService {\n    constructor(config) {\n        this.baseUrl = config.PROXY_URL || 'http://localhost:8080';  // Your proxy server\n        this.timeout = 5000; // 5 second timeout\n    }\n\n    async makeRequest(endpoint, options = {}) {\n        const url = `${this.baseUrl}${endpoint}`;\n        \n        try {\n            const response = await fetch(url, {\n                timeout: this.timeout,\n                headers: {\n                    'Content-Type': 'application/json',\n                    'User-Agent': 'Deadlight-Blog/4.0',\n                },\n                ...options\n            });\n\n            if (!response.ok) {\n                throw new Error(`Proxy API error: ${response.status} ${response.statusText}`);\n            }\n\n            return await response.json();\n        } catch (error) {\n            console.error(`Proxy API request failed: ${error.message}`);\n            throw error;\n        }\n    }\n\n    // Blog API endpoints\n    async getBlogStatus() {\n        return await this.makeRequest('/api/blog/status');\n    }\n\n    async getBlogPosts() {\n        return await this.makeRequest('/api/blog/posts');\n    }\n\n    async publishPost(postData) {\n        return await this.makeRequest('/api/blog/publish', {\n            method: 'POST',\n            body: JSON.stringify(postData)\n        });\n    }\n\n    // Email API endpoints  \n    async getEmailStatus() {\n        return await this.makeRequest('/api/email/status');\n    }\n\n    async sendEmail(emailData) {\n        return await this.makeRequest('/api/email/send', {\n            method: 'POST', \n            body: JSON.stringify(emailData)\n        });\n    }\n\n    // Federation API endpoints (for decentralized social media)\n    async sendFederatedPost(postData) {\n        return await this.makeRequest('/api/federation/send', {\n            method: 'POST',\n            body: JSON.stringify(postData)\n        });\n    }\n\n    async receiveFederatedPost(postData) {\n        return await this.makeRequest('/api/federation/receive', {\n            method: 'POST',\n            body: JSON.stringify(postData)\n        });\n    }\n\n    // Health check\n    async healthCheck() {\n        try {\n            const [blogStatus, emailStatus] = await Promise.allSettled([\n                this.getBlogStatus(),\n                this.getEmailStatus()\n            ]);\n            \n            return {\n                proxy_connected: true,\n                blog_api: blogStatus.status === 'fulfilled',\n                email_api: emailStatus.status === 'fulfilled',\n                timestamp: new Date().toISOString()\n            };\n        } catch (error) {\n            return {\n                proxy_connected: false,\n                error: error.message,\n                timestamp: new Date().toISOString()\n            };\n        }\n    }\n}\n", "// core/src/db/models/post.js\nimport { BaseModel, DatabaseError } from '../base.js';\n\nexport class PostModel extends BaseModel {\n  // Helper to generate slug from title\n  generateSlug(title) {\n    return title\n      .toLowerCase()\n      .replace(/[^a-z0-9]+/g, '-')\n      .replace(/^-+|-+$/g, '')\n      .slice(0, 200);\n  }\n\n  async create({ title, content, slug, excerpt, author_id, published = false }) {\n    try {\n      // Generate slug if not provided\n      const finalSlug = slug || this.generateSlug(title);\n      \n      // Check if slug already exists\n      const existing = await this.queryFirst('SELECT id FROM posts WHERE slug = ?', [finalSlug]);\n      if (existing) {\n        // Append timestamp to make it unique\n        const uniqueSlug = `${finalSlug}-${Date.now()}`;\n        return this.create({ title, content, slug: uniqueSlug, excerpt, author_id, published });\n      }\n      \n      const result = await this.execute(\n        'INSERT INTO posts (title, content, slug, excerpt, author_id, published, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)',\n        [title, content, finalSlug, excerpt || null, author_id, published ? 1 : 0]\n      );\n\n      return await this.getById(result.meta.last_row_id);\n    } catch (error) {\n      throw new DatabaseError(`Failed to create post: ${error.message}`, 'CREATE_ERROR');\n    }\n  }\n\n  async getById(id, options = {}) {\n    let query = 'SELECT posts.*';\n    if (options.includeAuthor) {\n      query += ', users.username as author_username';\n    }\n    query += ' FROM posts';\n    if (options.includeAuthor) {\n      query += ' LEFT JOIN users ON posts.author_id = users.id';\n    }\n    query += ' WHERE posts.id = ?';\n    \n    return await this.queryFirst(query, [id]);\n  }\n\n  async getBySlug(slug, options = {}) {\n    let query = 'SELECT posts.*';\n    if (options.includeAuthor) {\n      query += ', users.username as author_username';\n    }\n    query += ' FROM posts';\n    if (options.includeAuthor) {\n      query += ' LEFT JOIN users ON posts.author_id = users.id';\n    }\n    query += ' WHERE posts.slug = ?';\n    \n    return await this.queryFirst(query, [slug]);\n  }\n\n  async update(id, { title, content, slug, excerpt, published }) {\n    const updates = [];\n    const values = [];\n    \n    if (title !== undefined) {\n      updates.push('title = ?');\n      values.push(title);\n    }\n    if (content !== undefined) {\n      updates.push('content = ?');\n      values.push(content);\n    }\n    if (slug !== undefined) {\n      updates.push('slug = ?');\n      values.push(slug);\n    }\n    if (excerpt !== undefined) {\n      updates.push('excerpt = ?');\n      values.push(excerpt);\n    }\n    if (published !== undefined) {\n      updates.push('published = ?');\n      values.push(published ? 1 : 0);\n    }\n    \n    if (updates.length === 0) {\n      throw new DatabaseError('No fields to update', 'INVALID_UPDATE');\n    }\n    \n    updates.push('updated_at = CURRENT_TIMESTAMP');\n    values.push(id);\n    \n    const result = await this.execute(\n      `UPDATE posts SET ${updates.join(', ')} WHERE id = ?`,\n      values\n    );\n    \n    if (result.changes === 0) {\n      throw new DatabaseError('Post not found', 'NOT_FOUND');\n    }\n    \n    return await this.getById(id);\n  }\n\n  async delete(id) {\n    const result = await this.execute('DELETE FROM posts WHERE id = ?', [id]);\n    \n    if (result.changes === 0) {\n      throw new DatabaseError('Post not found', 'NOT_FOUND');\n    }\n    \n    return { success: true };\n  }\n\n  async getPaginated({ \n    page = 1, \n    limit = 10, \n    includeAuthor = false, \n    orderBy = 'created_at', \n    orderDirection = 'DESC',\n    publishedOnly = true \n  }) {\n    const offset = (page - 1) * limit;\n    \n    // Build where clause\n    const whereClause = publishedOnly ? ' WHERE posts.published = 1' : '';\n    \n    // Get total count\n    const countResult = await this.queryFirst(`SELECT COUNT(*) as total FROM posts${whereClause}`);\n    const totalPosts = countResult.total;\n    const totalPages = Math.ceil(totalPosts / limit);\n    \n    // Build query\n    let query = 'SELECT posts.*';\n    if (includeAuthor) {\n      query += ', users.username as author_username';\n    }\n    query += ' FROM posts';\n    if (includeAuthor) {\n      query += ' LEFT JOIN users ON posts.author_id = users.id';\n    }\n    query += whereClause;\n    query += ` ORDER BY posts.${orderBy} ${orderDirection} LIMIT ? OFFSET ?`;\n    \n    const result = await this.query(query, [limit, offset]);\n    \n    const pagination = {\n      currentPage: page,\n      totalPages,\n      totalPosts,\n      postsPerPage: limit,\n      hasPrevious: page > 1,\n      hasNext: page < totalPages,\n      previousPage: page - 1,\n      nextPage: page + 1\n    };\n    \n    return {\n      posts: result.results || result,\n      pagination\n    };\n  }\n\n  async getNavigation(currentId, publishedOnly = true) {\n    const whereClause = publishedOnly ? ' AND published = 1' : '';\n    \n    return await this.queryFirst(`\n      SELECT \n        (SELECT id FROM posts WHERE id < ?${whereClause} ORDER BY id DESC LIMIT 1) as prev_id,\n        (SELECT title FROM posts WHERE id < ?${whereClause} ORDER BY id DESC LIMIT 1) as prev_title,\n        (SELECT slug FROM posts WHERE id < ?${whereClause} ORDER BY id DESC LIMIT 1) as prev_slug,\n        (SELECT id FROM posts WHERE id > ?${whereClause} ORDER BY id ASC LIMIT 1) as next_id,\n        (SELECT title FROM posts WHERE id > ?${whereClause} ORDER BY id ASC LIMIT 1) as next_title,\n        (SELECT slug FROM posts WHERE id > ?${whereClause} ORDER BY id ASC LIMIT 1) as next_slug\n    `, [currentId, currentId, currentId, currentId, currentId, currentId]);\n  }\n\n  async getByAuthorId(authorId, options = {}) {\n    const { limit = 50, offset = 0, publishedOnly = false } = options;\n    \n    let query = 'SELECT posts.*';\n    if (options.includeAuthor) {\n      query += ', users.username as author_username';\n    }\n    query += ' FROM posts';\n    if (options.includeAuthor) {\n      query += ' LEFT JOIN users ON posts.author_id = users.id';\n    }\n    query += ' WHERE posts.author_id = ?';\n    if (publishedOnly) {\n      query += ' AND posts.published = 1';\n    }\n    query += ' ORDER BY created_at DESC LIMIT ? OFFSET ?';\n    \n    return await this.query(query, [authorId, limit, offset]);\n  }\n\n  async count(publishedOnly = false) {\n    const whereClause = publishedOnly ? ' WHERE published = 1' : '';\n    const result = await this.queryFirst(`SELECT COUNT(*) as total FROM posts${whereClause}`);\n    return result.total;\n  }\n\n  async togglePublished(id) {\n    const result = await this.execute(\n      'UPDATE posts SET published = NOT published, updated_at = CURRENT_TIMESTAMP WHERE id = ?',\n      [id]\n    );\n    \n    if (result.changes === 0) {\n      throw new DatabaseError('Post not found', 'NOT_FOUND');\n    }\n    \n    return await this.getById(id);\n  }\n}", "// lib.deadlight/core/src/db/models/settings.js\nimport { BaseModel, DatabaseError } from '../base.js';\n\nexport class SettingsModel extends BaseModel {\n  async get(key, defaultValue = null) {\n    try {\n      const result = await this.queryFirst('SELECT value, type FROM settings WHERE key = ?', [key]);\n      if (!result) return defaultValue;\n      \n      return this.convertValue(result.value, result.type);\n    } catch (error) {\n      throw new DatabaseError(`Failed to get setting ${key}: ${error.message}`, 'GET_ERROR');\n    }\n  }\n\n  async getAll() {\n    try {\n      const result = await this.query('SELECT key, value, type FROM settings ORDER BY key');\n      const results = result.results || result;\n      \n      const settings = {};\n      results.forEach(row => {\n        settings[row.key] = this.convertValue(row.value, row.type);\n      });\n      \n      return settings;\n    } catch (error) {\n      throw new DatabaseError(`Failed to get all settings: ${error.message}`, 'GET_ALL_ERROR');\n    }\n  }\n\n  async set(key, value, type = 'string') {\n    try {\n      const stringValue = String(value);\n      await this.execute(\n        'INSERT OR REPLACE INTO settings (key, value, type, updated_at) VALUES (?, ?, ?, CURRENT_TIMESTAMP)',\n        [key, stringValue, type]\n      );\n      \n      return { key, value, type };\n    } catch (error) {\n      throw new DatabaseError(`Failed to set setting ${key}: ${error.message}`, 'SET_ERROR');\n    }\n  }\n\n  async delete(key) {\n    try {\n      const result = await this.execute('DELETE FROM settings WHERE key = ?', [key]);\n      if (result.changes === 0) {\n        throw new DatabaseError('Setting not found', 'NOT_FOUND');\n      }\n      return { success: true };\n    } catch (error) {\n      throw new DatabaseError(`Failed to delete setting ${key}: ${error.message}`, 'DELETE_ERROR');\n    }\n  }\n\n  // Added method for getting multiple settings efficiently\n  async getMany(keys) {\n    try {\n      const placeholders = keys.map(() => '?').join(',');\n      const result = await this.query(\n        `SELECT key, value, type FROM settings WHERE key IN (${placeholders})`,\n        keys\n      );\n      const results = result.results || result;\n      \n      const settings = {};\n      results.forEach(row => {\n        settings[row.key] = this.convertValue(row.value, row.type);\n      });\n      \n      return settings;\n    } catch (error) {\n      throw new DatabaseError(`Failed to get multiple settings: ${error.message}`, 'GET_MANY_ERROR');\n    }\n  }\n\n  convertValue(value, type) {\n    switch (type) {\n      case 'number': return parseInt(value);\n      case 'boolean': return value === 'true';\n      case 'float': return parseFloat(value);\n      default: return value;\n    }\n  }\n}", "// core/src/db/models/index.js\nexport { UserModel } from './user.js';\nexport { PostModel } from './post.js';\nexport { SettingsModel } from './settings.js';\nexport { BaseModel, DatabaseError } from '../base.js';\n", "// src/services/config.js - Update with better error handling\nimport { SettingsModel } from '../../../../lib.deadlight/core/src/db/models/index.js';\n\nclass ConfigService {\n  constructor() {\n    this.cache = new Map();\n    this.cacheExpiry = new Map();\n    this.CACHE_TTL = 5 * 60 * 1000; // 5 minutes\n  }\n\n  async getConfig(db) {\n    const cacheKey = 'site_config';\n    const now = Date.now();\n    \n    // Return cached config if still valid\n    if (this.cache.has(cacheKey) && this.cacheExpiry.get(cacheKey) > now) {\n      return this.cache.get(cacheKey);\n    }\n\n    try {\n      const settingsModel = new SettingsModel(db);\n      const dbSettings = await settingsModel.getAll();\n      \n      console.log('Retrieved settings from DB:', dbSettings); // Debug log\n      \n      // Merge with defaults - ensure no undefined values\n      const config = {\n        title: dbSettings.site_title || 'deadlight.boo',\n        description: dbSettings.site_description || 'A minimal blog framework',\n        postsPerPage: parseInt(dbSettings.posts_per_page) || 10, // Ensure it's a number\n        dateFormat: dbSettings.date_format || 'M/D/YYYY',\n        timezone: dbSettings.timezone || 'UTC',\n        enableRegistration: dbSettings.enable_registration || false,\n        requireLoginToRead: dbSettings.require_login_to_read || false,\n        maintenanceMode: dbSettings.maintenance_mode || false\n      };\n\n      console.log('Final config object:', config); // Debug log\n\n      // Cache the result\n      this.cache.set(cacheKey, config);\n      this.cacheExpiry.set(cacheKey, now + this.CACHE_TTL);\n      \n      return config;\n    } catch (error) {\n      console.error('Error loading config from database:', error);\n      \n      // Return static fallback config with guaranteed values\n      return {\n        title: 'deadlight.boo',\n        description: 'A minimal blog framework',\n        postsPerPage: 10,\n        dateFormat: 'M/D/YYYY',\n        timezone: 'UTC',\n        enableRegistration: false,\n        requireLoginToRead: false,\n        maintenanceMode: false\n      };\n    }\n  }\n\n  // Clear cache when settings are updated\n  clearCache() {\n    this.cache.clear();\n    this.cacheExpiry.clear();\n  }\n\n  // Get a single setting with caching\n  async getSetting(db, key, defaultValue = null) {\n    try {\n      const settingsModel = new SettingsModel(db);\n      return await settingsModel.get(key, defaultValue);\n    } catch (error) {\n      console.error(`Error getting setting ${key}:`, error);\n      return defaultValue;\n    }\n  }\n}\n\n// Export singleton\nexport const configService = new ConfigService();", "// src/services/outbox.js - Complete outbox queue management\r\nimport { ProxyService } from './proxy.js';\r\nimport { Logger } from '../../../../lib.deadlight/core/src/logging/logger.js';\r\n\r\nexport class OutboxService {\r\n    constructor(env) {\r\n        this.env = env;\r\n        this.logger = new Logger({ context: 'outbox' });\r\n        this.proxyService = new ProxyService({ PROXY_URL: env.PROXY_URL });\r\n    }\r\n\r\n    // Main queue processing method\r\n    async processQueue() {\r\n        try {\r\n            this.logger.info('Starting outbox queue processing');\r\n\r\n            // Check if proxy is available\r\n            const healthCheck = await this.proxyService.healthCheck();\r\n            if (!healthCheck.proxy_connected) {\r\n                this.logger.info('Proxy offline, keeping operations queued');\r\n                return { \r\n                    processed: 0, \r\n                    queued: await this.getQueuedCount(), \r\n                    status: 'proxy_offline',\r\n                    message: 'Proxy is offline - operations remain queued'\r\n                };\r\n            }\r\n\r\n            this.logger.info('Proxy is online, processing queued operations');\r\n\r\n            // Process different types of queued operations\r\n            const results = await Promise.allSettled([\r\n                this.processPendingReplies(),\r\n                this.processPendingFederatedPosts(),\r\n                // Future: this.processPendingNewsletters(),\r\n                // Future: this.processPendingNotifications(),\r\n            ]);\r\n\r\n            // Calculate total processed\r\n            const totalProcessed = results.reduce((sum, result) => {\r\n                if (result.status === 'fulfilled') {\r\n                    return sum + (result.value || 0);\r\n                }\r\n                return sum;\r\n            }, 0);\r\n\r\n            // Log any failures\r\n            results.forEach((result, index) => {\r\n                if (result.status === 'rejected') {\r\n                    this.logger.error(`Queue processor ${index} failed`, { \r\n                        error: result.reason?.message \r\n                    });\r\n                }\r\n            });\r\n\r\n            const remainingQueued = await this.getQueuedCount();\r\n            \r\n            this.logger.info('Outbox processing completed', { \r\n                processed: totalProcessed, \r\n                queued: remainingQueued \r\n            });\r\n\r\n            return { \r\n                processed: totalProcessed, \r\n                queued: remainingQueued,\r\n                status: 'success',\r\n                message: `Successfully processed ${totalProcessed} operations`\r\n            };\r\n\r\n        } catch (error) {\r\n            this.logger.error('Outbox processing failed', { error: error.message });\r\n            return { \r\n                processed: 0, \r\n                error: error.message, \r\n                status: 'error',\r\n                message: `Processing failed: ${error.message}`\r\n            };\r\n        }\r\n    }\r\n\r\n    // Process pending email replies\r\n    async processPendingReplies() {\r\n        this.logger.info('Processing pending email replies');\r\n\r\n        const pendingReplies = await this.getPendingReplies();\r\n        let processed = 0;\r\n\r\n        for (const reply of pendingReplies) {\r\n            try {\r\n                const metadata = JSON.parse(reply.email_metadata || '{}');\r\n                \r\n                // Prepare email data for proxy\r\n                const emailData = {\r\n                    to: metadata.to,\r\n                    from: metadata.from || 'noreply@deadlight.boo',\r\n                    subject: reply.title,\r\n                    body: reply.content\r\n                };\r\n\r\n                this.logger.info('Sending queued reply', { \r\n                    replyId: reply.id, \r\n                    to: emailData.to, \r\n                    subject: emailData.subject \r\n                });\r\n\r\n                // Send via proxy\r\n                const result = await this.proxyService.sendEmail(emailData);\r\n                \r\n                // Mark as sent\r\n                await this.markReplySent(reply.id, result);\r\n                processed++;\r\n                \r\n                this.logger.info('Successfully sent queued reply', { \r\n                    replyId: reply.id, \r\n                    to: emailData.to \r\n                });\r\n\r\n            } catch (error) {\r\n                this.logger.error('Failed to send queued reply', { \r\n                    replyId: reply.id, \r\n                    error: error.message \r\n                });\r\n                \r\n                // Update retry count\r\n                await this.incrementRetryCount(reply.id, error.message);\r\n            }\r\n        }\r\n\r\n        return processed;\r\n    }\r\n\r\n    // Process federated posts (for decentralized social media)\r\n    async processPendingFederatedPosts() {\r\n        this.logger.info('Processing pending federated posts');\r\n\r\n        const federatedPosts = await this.getPendingFederatedPosts();\r\n        let processed = 0;\r\n\r\n        for (const post of federatedPosts) {\r\n            try {\r\n                const federationData = JSON.parse(post.federation_metadata || '{}');\r\n                \r\n                // Send to each target domain\r\n                for (const domain of federationData.target_domains || []) {\r\n                    const federationPayload = {\r\n                        to: `blog@${domain}`,\r\n                        from: `blog@${this.getBlogDomain()}`,\r\n                        post: {\r\n                            id: post.id,\r\n                            title: post.title,\r\n                            content: post.content,\r\n                            author: federationData.author || 'Anonymous',\r\n                            published_at: post.created_at,\r\n                            source_url: `${this.getBlogUrl()}/post/${post.slug}`,\r\n                            federation_type: 'new_post'\r\n                        }\r\n                    };\r\n\r\n                    this.logger.info('Sending federated post', { \r\n                        postId: post.id, \r\n                        targetDomain: domain \r\n                    });\r\n\r\n                    await this.proxyService.sendFederatedPost(federationPayload);\r\n                }\r\n\r\n                // Mark federation as sent\r\n                await this.markFederationSent(post.id);\r\n                processed++;\r\n\r\n                this.logger.info('Successfully sent federated post', { \r\n                    postId: post.id,\r\n                    domains: federationData.target_domains?.length || 0\r\n                });\r\n\r\n            } catch (error) {\r\n                this.logger.error('Failed to send federated post', { \r\n                    postId: post.id, \r\n                    error: error.message \r\n                });\r\n            }\r\n        }\r\n\r\n        return processed;\r\n    }\r\n\r\n    // Database query helpers\r\n    async getPendingReplies() {\r\n        const result = await this.env.DB.prepare(`\r\n            SELECT * FROM posts \r\n            WHERE is_reply_draft = 1 \r\n            AND email_metadata LIKE '%\"sent\":false%'\r\n            AND (retry_count IS NULL OR retry_count < 3)\r\n            ORDER BY created_at ASC\r\n            LIMIT 50\r\n        `).all();\r\n        \r\n        return result.results || [];\r\n    }\r\n\r\n    async getPendingFederatedPosts() {\r\n        try {\r\n            const result = await this.env.DB.prepare(`\r\n                SELECT * FROM posts \r\n                WHERE federation_pending = 1 \r\n                AND published = 1\r\n                ORDER BY created_at ASC\r\n                LIMIT 20\r\n            `).all();\r\n            \r\n            return result.results || [];\r\n        } catch (error) {\r\n            // Handle case where federation columns don't exist yet\r\n            this.logger.info('Federation columns not found - skipping federated posts');\r\n            return [];\r\n        }\r\n    }\r\n\r\n    async markReplySent(replyId, sendResult = null) {\r\n        const reply = await this.env.DB.prepare(\r\n            'SELECT email_metadata FROM posts WHERE id = ?'\r\n        ).bind(replyId).first();\r\n        \r\n        if (!reply) return;\r\n\r\n        const metadata = JSON.parse(reply.email_metadata || '{}');\r\n        metadata.sent = true;\r\n        metadata.date_sent = new Date().toISOString();\r\n        metadata.send_result = sendResult;\r\n\r\n        await this.env.DB.prepare(`\r\n            UPDATE posts \r\n            SET email_metadata = ?, updated_at = ? \r\n            WHERE id = ?\r\n        `).bind(\r\n            JSON.stringify(metadata),\r\n            new Date().toISOString(),\r\n            replyId\r\n        ).run();\r\n    }\r\n\r\n    async markFederationSent(postId) {\r\n        try {\r\n            await this.env.DB.prepare(`\r\n                UPDATE posts \r\n                SET federation_pending = 0, federation_sent_at = ? \r\n                WHERE id = ?\r\n            `).bind(new Date().toISOString(), postId).run();\r\n        } catch (error) {\r\n            this.logger.info('Federation columns not found - skipping federation update');\r\n        }\r\n    }\r\n\r\n    async incrementRetryCount(replyId, errorMessage) {\r\n        try {\r\n            // First, try to add retry_count column if it doesn't exist\r\n            await this.env.DB.prepare(`\r\n                ALTER TABLE posts ADD COLUMN retry_count INTEGER DEFAULT 0\r\n            `).run().catch(() => {}); // Ignore if column exists\r\n\r\n            await this.env.DB.prepare(`\r\n                UPDATE posts \r\n                SET retry_count = COALESCE(retry_count, 0) + 1,\r\n                    last_error = ?,\r\n                    updated_at = ?\r\n                WHERE id = ?\r\n            `).bind(errorMessage, new Date().toISOString(), replyId).run();\r\n        } catch (error) {\r\n            this.logger.error('Failed to update retry count', { error: error.message });\r\n        }\r\n    }\r\n\r\n    async getQueuedCount() {\r\n        try {\r\n            // Count pending replies\r\n            const replies = await this.env.DB.prepare(`\r\n                SELECT COUNT(*) as count FROM posts \r\n                WHERE is_reply_draft = 1 \r\n                AND email_metadata LIKE '%\"sent\":false%'\r\n                AND (retry_count IS NULL OR retry_count < 3)\r\n            `).first();\r\n\r\n            // Count pending federated posts (handle if columns don't exist)\r\n            let federatedCount = 0;\r\n            try {\r\n                const federated = await this.env.DB.prepare(`\r\n                    SELECT COUNT(*) as count FROM posts \r\n                    WHERE federation_pending = 1 \r\n                    AND published = 1\r\n                `).first();\r\n                federatedCount = federated?.count || 0;\r\n            } catch (error) {\r\n                // Federation columns don't exist yet\r\n                federatedCount = 0;\r\n            }\r\n\r\n            return (replies?.count || 0) + federatedCount;\r\n        } catch (error) {\r\n            this.logger.error('Error getting queue count', { error: error.message });\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    // Queue new operations\r\n    async queueEmailReply(replyData) {\r\n        this.logger.info('Queuing email reply', { to: replyData.to });\r\n        \r\n        const metadata = {\r\n            to: replyData.to,\r\n            from: replyData.from,\r\n            original_id: replyData.originalId,\r\n            date_queued: new Date().toISOString(),\r\n            sent: false\r\n        };\r\n\r\n        // This integrates with your existing inbox reply system\r\n        // The reply is already stored as a draft - we just ensure metadata is correct\r\n        return metadata;\r\n    }\r\n\r\n    async queueFederatedPost(postId, targetDomains, author) {\r\n        this.logger.info('Queuing federated post', { postId, domains: targetDomains.length });\r\n        \r\n        try {\r\n            const federationMetadata = {\r\n                target_domains: targetDomains,\r\n                author: author,\r\n                date_queued: new Date().toISOString(),\r\n                sent: false\r\n            };\r\n\r\n            await this.env.DB.prepare(`\r\n                UPDATE posts \r\n                SET federation_pending = 1, federation_metadata = ? \r\n                WHERE id = ?\r\n            `).bind(JSON.stringify(federationMetadata), postId).run();\r\n\r\n            return { success: true, queued: targetDomains.length };\r\n        } catch (error) {\r\n            this.logger.error('Failed to queue federated post', { error: error.message });\r\n            return { success: false, error: error.message };\r\n        }\r\n    }\r\n\r\n    // Helper methods\r\n    getBlogDomain() {\r\n        try {\r\n            return new URL(this.env.SITE_URL || 'https://deadlight.boo').hostname;\r\n        } catch {\r\n            return 'deadlight.boo';\r\n        }\r\n    }\r\n\r\n    getBlogUrl() {\r\n        return this.env.SITE_URL || 'https://deadlight.boo';\r\n    }\r\n\r\n    // Health check for the outbox system\r\n    async getStatus() {\r\n        const queuedCount = await this.getQueuedCount();\r\n        const proxyHealth = await this.proxyService.healthCheck();\r\n        \r\n        return {\r\n            queued_operations: queuedCount,\r\n            proxy_connected: proxyHealth.proxy_connected,\r\n            last_check: new Date().toISOString(),\r\n            status: queuedCount > 0 ? 'pending' : 'clear'\r\n        };\r\n    }\r\n}", "import type { MarkedOptions } from './MarkedOptions.ts';\n\n/**\n * Gets the original marked default options.\n */\nexport function _getDefaults<ParserOutput = string, RendererOutput = string>(): MarkedOptions<ParserOutput, RendererOutput> {\n  return {\n    async: false,\n    breaks: false,\n    extensions: null,\n    gfm: true,\n    hooks: null,\n    pedantic: false,\n    renderer: null,\n    silent: false,\n    tokenizer: null,\n    walkTokens: null,\n  };\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport let _defaults: MarkedOptions<any, any> = _getDefaults();\n\nexport function changeDefaults<ParserOutput = string, RendererOutput = string>(newDefaults: MarkedOptions<ParserOutput, RendererOutput>) {\n  _defaults = newDefaults;\n}\n", "const noopTest = { exec: () => null } as unknown as RegExp;\n\nfunction edit(regex: string | RegExp, opt = '') {\n  let source = typeof regex === 'string' ? regex : regex.source;\n  const obj = {\n    replace: (name: string | RegExp, val: string | RegExp) => {\n      let valSource = typeof val === 'string' ? val : val.source;\n      valSource = valSource.replace(other.caret, '$1');\n      source = source.replace(name, valSource);\n      return obj;\n    },\n    getRegex: () => {\n      return new RegExp(source, opt);\n    },\n  };\n  return obj;\n}\n\nexport const other = {\n  codeRemoveIndent: /^(?: {1,4}| {0,3}\\t)/gm,\n  outputLinkReplace: /\\\\([\\[\\]])/g,\n  indentCodeCompensation: /^(\\s+)(?:```)/,\n  beginningSpace: /^\\s+/,\n  endingHash: /#$/,\n  startingSpaceChar: /^ /,\n  endingSpaceChar: / $/,\n  nonSpaceChar: /[^ ]/,\n  newLineCharGlobal: /\\n/g,\n  tabCharGlobal: /\\t/g,\n  multipleSpaceGlobal: /\\s+/g,\n  blankLine: /^[ \\t]*$/,\n  doubleBlankLine: /\\n[ \\t]*\\n[ \\t]*$/,\n  blockquoteStart: /^ {0,3}>/,\n  blockquoteSetextReplace: /\\n {0,3}((?:=+|-+) *)(?=\\n|$)/g,\n  blockquoteSetextReplace2: /^ {0,3}>[ \\t]?/gm,\n  listReplaceTabs: /^\\t+/,\n  listReplaceNesting: /^ {1,4}(?=( {4})*[^ ])/g,\n  listIsTask: /^\\[[ xX]\\] /,\n  listReplaceTask: /^\\[[ xX]\\] +/,\n  anyLine: /\\n.*\\n/,\n  hrefBrackets: /^<(.*)>$/,\n  tableDelimiter: /[:|]/,\n  tableAlignChars: /^\\||\\| *$/g,\n  tableRowBlankLine: /\\n[ \\t]*$/,\n  tableAlignRight: /^ *-+: *$/,\n  tableAlignCenter: /^ *:-+: *$/,\n  tableAlignLeft: /^ *:-+ *$/,\n  startATag: /^<a /i,\n  endATag: /^<\\/a>/i,\n  startPreScriptTag: /^<(pre|code|kbd|script)(\\s|>)/i,\n  endPreScriptTag: /^<\\/(pre|code|kbd|script)(\\s|>)/i,\n  startAngleBracket: /^</,\n  endAngleBracket: />$/,\n  pedanticHrefTitle: /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/,\n  unicodeAlphaNumeric: /[\\p{L}\\p{N}]/u,\n  escapeTest: /[&<>\"']/,\n  escapeReplace: /[&<>\"']/g,\n  escapeTestNoEncode: /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/,\n  escapeReplaceNoEncode: /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/g,\n  unescapeTest: /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig,\n  caret: /(^|[^\\[])\\^/g,\n  percentDecode: /%25/g,\n  findPipe: /\\|/g,\n  splitPipe: / \\|/,\n  slashPipe: /\\\\\\|/g,\n  carriageReturn: /\\r\\n|\\r/g,\n  spaceLine: /^ +$/gm,\n  notSpaceStart: /^\\S*/,\n  endingNewline: /\\n$/,\n  listItemRegex: (bull: string) => new RegExp(`^( {0,3}${bull})((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))`),\n  nextBulletRegex: (indent: number) => new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:[*+-]|\\\\d{1,9}[.)])((?:[ \\t][^\\\\n]*)?(?:\\\\n|$))`),\n  hrRegex: (indent: number) => new RegExp(`^ {0,${Math.min(3, indent - 1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)`),\n  fencesBeginRegex: (indent: number) => new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:\\`\\`\\`|~~~)`),\n  headingBeginRegex: (indent: number) => new RegExp(`^ {0,${Math.min(3, indent - 1)}}#`),\n  htmlBeginRegex: (indent: number) => new RegExp(`^ {0,${Math.min(3, indent - 1)}}<(?:[a-z].*>|!--)`, 'i'),\n};\n\n/**\n * Block-Level Grammar\n */\n\nconst newline = /^(?:[ \\t]*(?:\\n|$))+/;\nconst blockCode = /^((?: {4}| {0,3}\\t)[^\\n]+(?:\\n(?:[ \\t]*(?:\\n|$))*)?)+/;\nconst fences = /^ {0,3}(`{3,}(?=[^`\\n]*(?:\\n|$))|~{3,})([^\\n]*)(?:\\n|$)(?:|([\\s\\S]*?)(?:\\n|$))(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/;\nconst hr = /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/;\nconst heading = /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/;\nconst bullet = /(?:[*+-]|\\d{1,9}[.)])/;\nconst lheadingCore = /^(?!bull |blockCode|fences|blockquote|heading|html|table)((?:.|\\n(?!\\s*?\\n|bull |blockCode|fences|blockquote|heading|html|table))+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/;\nconst lheading = edit(lheadingCore)\n  .replace(/bull/g, bullet) // lists can interrupt\n  .replace(/blockCode/g, /(?: {4}| {0,3}\\t)/) // indented code blocks can interrupt\n  .replace(/fences/g, / {0,3}(?:`{3,}|~{3,})/) // fenced code blocks can interrupt\n  .replace(/blockquote/g, / {0,3}>/) // blockquote can interrupt\n  .replace(/heading/g, / {0,3}#{1,6}/) // ATX heading can interrupt\n  .replace(/html/g, / {0,3}<[^\\n>]+>\\n/) // block html can interrupt\n  .replace(/\\|table/g, '') // table not in commonmark\n  .getRegex();\nconst lheadingGfm = edit(lheadingCore)\n  .replace(/bull/g, bullet) // lists can interrupt\n  .replace(/blockCode/g, /(?: {4}| {0,3}\\t)/) // indented code blocks can interrupt\n  .replace(/fences/g, / {0,3}(?:`{3,}|~{3,})/) // fenced code blocks can interrupt\n  .replace(/blockquote/g, / {0,3}>/) // blockquote can interrupt\n  .replace(/heading/g, / {0,3}#{1,6}/) // ATX heading can interrupt\n  .replace(/html/g, / {0,3}<[^\\n>]+>\\n/) // block html can interrupt\n  .replace(/table/g, / {0,3}\\|?(?:[:\\- ]*\\|)+[\\:\\- ]*\\n/) // table can interrupt\n  .getRegex();\nconst _paragraph = /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/;\nconst blockText = /^[^\\n]+/;\nconst _blockLabel = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\nconst def = edit(/^ {0,3}\\[(label)\\]: *(?:\\n[ \\t]*)?([^<\\s][^\\s]*|<.*?>)(?:(?: +(?:\\n[ \\t]*)?| *\\n[ \\t]*)(title))? *(?:\\n+|$)/)\n  .replace('label', _blockLabel)\n  .replace('title', /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/)\n  .getRegex();\n\nconst list = edit(/^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/)\n  .replace(/bull/g, bullet)\n  .getRegex();\n\nconst _tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|search|section|summary|table|tbody|td|tfoot|th|thead|title'\n  + '|tr|track|ul';\nconst _comment = /<!--(?:-?>|[\\s\\S]*?(?:-->|$))/;\nconst html = edit(\n  '^ {0,3}(?:' // optional indentation\n+ '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n+ '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n+ '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n+ '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n+ '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n+ '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n[ \\t]*)+\\\\n|$)' // (6)\n+ '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n[ \\t]*)+\\\\n|$)' // (7) open tag\n+ '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n[ \\t]*)+\\\\n|$)' // (7) closing tag\n+ ')', 'i')\n  .replace('comment', _comment)\n  .replace('tag', _tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nconst paragraph = edit(_paragraph)\n  .replace('hr', hr)\n  .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n  .replace('|lheading', '') // setext headings don't interrupt commonmark paragraphs\n  .replace('|table', '')\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', _tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nconst blockquote = edit(/^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/)\n  .replace('paragraph', paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nconst blockNormal = {\n  blockquote,\n  code: blockCode,\n  def,\n  fences,\n  heading,\n  hr,\n  html,\n  lheading,\n  list,\n  newline,\n  paragraph,\n  table: noopTest,\n  text: blockText,\n};\n\ntype BlockKeys = keyof typeof blockNormal;\n\n/**\n * GFM Block Grammar\n */\n\nconst gfmTable = edit(\n  '^ *([^\\\\n ].*)\\\\n' // Header\n+ ' {0,3}((?:\\\\| *)?:?-+:? *(?:\\\\| *:?-+:? *)*(?:\\\\| *)?)' // Align\n+ '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)') // Cells\n  .replace('hr', hr)\n  .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n  .replace('blockquote', ' {0,3}>')\n  .replace('code', '(?: {4}| {0,3}\\t)[^\\\\n]')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', _tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n\nconst blockGfm: Record<BlockKeys, RegExp> = {\n  ...blockNormal,\n  lheading: lheadingGfm,\n  table: gfmTable,\n  paragraph: edit(_paragraph)\n    .replace('hr', hr)\n    .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n    .replace('|lheading', '') // setext headings don't interrupt commonmark paragraphs\n    .replace('table', gfmTable) // interrupt paragraphs with table\n    .replace('blockquote', ' {0,3}>')\n    .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n    .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n    .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n    .replace('tag', _tag) // pars can be interrupted by type (6) html blocks\n    .getRegex(),\n};\n\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\n\nconst blockPedantic: Record<BlockKeys, RegExp> = {\n  ...blockNormal,\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', _comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n  heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n  fences: noopTest, // fences not supported\n  lheading: /^(.+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  paragraph: edit(_paragraph)\n    .replace('hr', hr)\n    .replace('heading', ' *#{1,6} *[^\\n]')\n    .replace('lheading', lheading)\n    .replace('|table', '')\n    .replace('blockquote', ' {0,3}>')\n    .replace('|fences', '')\n    .replace('|list', '')\n    .replace('|html', '')\n    .replace('|tag', '')\n    .getRegex(),\n};\n\n/**\n * Inline-Level Grammar\n */\n\nconst escape = /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/;\nconst inlineCode = /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/;\nconst br = /^( {2,}|\\\\)\\n(?!\\s*$)/;\nconst inlineText = /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/;\n\n// list of unicode punctuation marks, plus any missing characters from CommonMark spec\nconst _punctuation = /[\\p{P}\\p{S}]/u;\nconst _punctuationOrSpace = /[\\s\\p{P}\\p{S}]/u;\nconst _notPunctuationOrSpace = /[^\\s\\p{P}\\p{S}]/u;\nconst punctuation = edit(/^((?![*_])punctSpace)/, 'u')\n  .replace(/punctSpace/g, _punctuationOrSpace).getRegex();\n\n// GFM allows ~ inside strong and em for strikethrough\nconst _punctuationGfmStrongEm = /(?!~)[\\p{P}\\p{S}]/u;\nconst _punctuationOrSpaceGfmStrongEm = /(?!~)[\\s\\p{P}\\p{S}]/u;\nconst _notPunctuationOrSpaceGfmStrongEm = /(?:[^\\s\\p{P}\\p{S}]|~)/u;\n\n// sequences em should skip over [title](link), `code`, <html>\nconst blockSkip = /\\[[^[\\]]*?\\]\\((?:\\\\.|[^\\\\\\(\\)]|\\((?:\\\\.|[^\\\\\\(\\)])*\\))*\\)|`[^`]*?`|<(?! )[^<>]*?>/g;\n\nconst emStrongLDelimCore = /^(?:\\*+(?:((?!\\*)punct)|[^\\s*]))|^_+(?:((?!_)punct)|([^\\s_]))/;\n\nconst emStrongLDelim = edit(emStrongLDelimCore, 'u')\n  .replace(/punct/g, _punctuation)\n  .getRegex();\n\nconst emStrongLDelimGfm = edit(emStrongLDelimCore, 'u')\n  .replace(/punct/g, _punctuationGfmStrongEm)\n  .getRegex();\n\nconst emStrongRDelimAstCore =\n  '^[^_*]*?__[^_*]*?\\\\*[^_*]*?(?=__)' // Skip orphan inside strong\n+ '|[^*]+(?=[^*])' // Consume to delim\n+ '|(?!\\\\*)punct(\\\\*+)(?=[\\\\s]|$)' // (1) #*** can only be a Right Delimiter\n+ '|notPunctSpace(\\\\*+)(?!\\\\*)(?=punctSpace|$)' // (2) a***#, a*** can only be a Right Delimiter\n+ '|(?!\\\\*)punctSpace(\\\\*+)(?=notPunctSpace)' // (3) #***a, ***a can only be Left Delimiter\n+ '|[\\\\s](\\\\*+)(?!\\\\*)(?=punct)' // (4) ***# can only be Left Delimiter\n+ '|(?!\\\\*)punct(\\\\*+)(?!\\\\*)(?=punct)' // (5) #***# can be either Left or Right Delimiter\n+ '|notPunctSpace(\\\\*+)(?=notPunctSpace)'; // (6) a***a can be either Left or Right Delimiter\n\nconst emStrongRDelimAst = edit(emStrongRDelimAstCore, 'gu')\n  .replace(/notPunctSpace/g, _notPunctuationOrSpace)\n  .replace(/punctSpace/g, _punctuationOrSpace)\n  .replace(/punct/g, _punctuation)\n  .getRegex();\n\nconst emStrongRDelimAstGfm = edit(emStrongRDelimAstCore, 'gu')\n  .replace(/notPunctSpace/g, _notPunctuationOrSpaceGfmStrongEm)\n  .replace(/punctSpace/g, _punctuationOrSpaceGfmStrongEm)\n  .replace(/punct/g, _punctuationGfmStrongEm)\n  .getRegex();\n\n// (6) Not allowed for _\nconst emStrongRDelimUnd = edit(\n  '^[^_*]*?\\\\*\\\\*[^_*]*?_[^_*]*?(?=\\\\*\\\\*)' // Skip orphan inside strong\n+ '|[^_]+(?=[^_])' // Consume to delim\n+ '|(?!_)punct(_+)(?=[\\\\s]|$)' // (1) #___ can only be a Right Delimiter\n+ '|notPunctSpace(_+)(?!_)(?=punctSpace|$)' // (2) a___#, a___ can only be a Right Delimiter\n+ '|(?!_)punctSpace(_+)(?=notPunctSpace)' // (3) #___a, ___a can only be Left Delimiter\n+ '|[\\\\s](_+)(?!_)(?=punct)' // (4) ___# can only be Left Delimiter\n+ '|(?!_)punct(_+)(?!_)(?=punct)', 'gu') // (5) #___# can be either Left or Right Delimiter\n  .replace(/notPunctSpace/g, _notPunctuationOrSpace)\n  .replace(/punctSpace/g, _punctuationOrSpace)\n  .replace(/punct/g, _punctuation)\n  .getRegex();\n\nconst anyPunctuation = edit(/\\\\(punct)/, 'gu')\n  .replace(/punct/g, _punctuation)\n  .getRegex();\n\nconst autolink = edit(/^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/)\n  .replace('scheme', /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/)\n  .replace('email', /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/)\n  .getRegex();\n\nconst _inlineComment = edit(_comment).replace('(?:-->|$)', '-->').getRegex();\nconst tag = edit(\n  '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>') // CDATA section\n  .replace('comment', _inlineComment)\n  .replace('attribute', /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nconst _inlineLabel = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\n\nconst link = edit(/^!?\\[(label)\\]\\(\\s*(href)(?:(?:[ \\t]*(?:\\n[ \\t]*)?)(title))?\\s*\\)/)\n  .replace('label', _inlineLabel)\n  .replace('href', /<(?:\\\\.|[^\\n<>\\\\])+>|[^ \\t\\n\\x00-\\x1f]*/)\n  .replace('title', /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/)\n  .getRegex();\n\nconst reflink = edit(/^!?\\[(label)\\]\\[(ref)\\]/)\n  .replace('label', _inlineLabel)\n  .replace('ref', _blockLabel)\n  .getRegex();\n\nconst nolink = edit(/^!?\\[(ref)\\](?:\\[\\])?/)\n  .replace('ref', _blockLabel)\n  .getRegex();\n\nconst reflinkSearch = edit('reflink|nolink(?!\\\\()', 'g')\n  .replace('reflink', reflink)\n  .replace('nolink', nolink)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\nconst inlineNormal = {\n  _backpedal: noopTest, // only used for GFM url\n  anyPunctuation,\n  autolink,\n  blockSkip,\n  br,\n  code: inlineCode,\n  del: noopTest,\n  emStrongLDelim,\n  emStrongRDelimAst,\n  emStrongRDelimUnd,\n  escape,\n  link,\n  nolink,\n  punctuation,\n  reflink,\n  reflinkSearch,\n  tag,\n  text: inlineText,\n  url: noopTest,\n};\n\ntype InlineKeys = keyof typeof inlineNormal;\n\n/**\n * Pedantic Inline Grammar\n */\n\nconst inlinePedantic: Record<InlineKeys, RegExp> = {\n  ...inlineNormal,\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', _inlineLabel)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', _inlineLabel)\n    .getRegex(),\n};\n\n/**\n * GFM Inline Grammar\n */\n\nconst inlineGfm: Record<InlineKeys, RegExp> = {\n  ...inlineNormal,\n  emStrongRDelimAst: emStrongRDelimAstGfm,\n  emStrongLDelim: emStrongLDelimGfm,\n  url: edit(/^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/, 'i')\n    .replace('email', /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/)\n    .getRegex(),\n  _backpedal: /(?:[^?!.,:;*_'\"~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'\"~)]+(?!$))+/,\n  del: /^(~~?)(?=[^\\s~])((?:\\\\.|[^\\\\])*?(?:\\\\.|[^\\s~\\\\]))\\1(?=[^~]|$)/,\n  text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/,\n};\n\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\nconst inlineBreaks: Record<InlineKeys, RegExp> = {\n  ...inlineGfm,\n  br: edit(br).replace('{2,}', '*').getRegex(),\n  text: edit(inlineGfm.text)\n    .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n    .replace(/\\{2,\\}/g, '*')\n    .getRegex(),\n};\n\n/**\n * exports\n */\n\nexport const block = {\n  normal: blockNormal,\n  gfm: blockGfm,\n  pedantic: blockPedantic,\n};\n\nexport const inline = {\n  normal: inlineNormal,\n  gfm: inlineGfm,\n  breaks: inlineBreaks,\n  pedantic: inlinePedantic,\n};\n\nexport interface Rules {\n  other: typeof other\n  block: Record<BlockKeys, RegExp>\n  inline: Record<InlineKeys, RegExp>\n}\n", "import { other } from './rules.ts';\n\n/**\n * Helpers\n */\nconst escapeReplacements: { [index: string]: string } = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n};\nconst getEscapeReplacement = (ch: string) => escapeReplacements[ch];\n\nexport function escape(html: string, encode?: boolean) {\n  if (encode) {\n    if (other.escapeTest.test(html)) {\n      return html.replace(other.escapeReplace, getEscapeReplacement);\n    }\n  } else {\n    if (other.escapeTestNoEncode.test(html)) {\n      return html.replace(other.escapeReplaceNoEncode, getEscapeReplacement);\n    }\n  }\n\n  return html;\n}\n\nexport function unescape(html: string) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(other.unescapeTest, (_, n) => {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nexport function cleanUrl(href: string) {\n  try {\n    href = encodeURI(href).replace(other.percentDecode, '%');\n  } catch {\n    return null;\n  }\n  return href;\n}\n\nexport function splitCells(tableRow: string, count?: number) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  const row = tableRow.replace(other.findPipe, (match, offset, str) => {\n      let escaped = false;\n      let curr = offset;\n      while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n    cells = row.split(other.splitPipe);\n  let i = 0;\n\n  // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n  if (!cells[0].trim()) {\n    cells.shift();\n  }\n  if (cells.length > 0 && !cells.at(-1)?.trim()) {\n    cells.pop();\n  }\n\n  if (count) {\n    if (cells.length > count) {\n      cells.splice(count);\n    } else {\n      while (cells.length < count) cells.push('');\n    }\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(other.slashPipe, '|');\n  }\n  return cells;\n}\n\n/**\n * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n * /c*$/ is vulnerable to REDOS.\n *\n * @param str\n * @param c\n * @param invert Remove suffix of non-c chars instead. Default falsey.\n */\nexport function rtrim(str: string, c: string, invert?: boolean) {\n  const l = str.length;\n  if (l === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  let suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < l) {\n    const currChar = str.charAt(l - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.slice(0, l - suffLen);\n}\n\nexport function findClosingBracket(str: string, b: string) {\n  if (str.indexOf(b[1]) === -1) {\n    return -1;\n  }\n\n  let level = 0;\n  for (let i = 0; i < str.length; i++) {\n    if (str[i] === '\\\\') {\n      i++;\n    } else if (str[i] === b[0]) {\n      level++;\n    } else if (str[i] === b[1]) {\n      level--;\n      if (level < 0) {\n        return i;\n      }\n    }\n  }\n  if (level > 0) {\n    return -2;\n  }\n\n  return -1;\n}\n", "import { _defaults } from './defaults.ts';\nimport {\n  rtrim,\n  splitCells,\n  findClosingBracket,\n} from './helpers.ts';\nimport type { Rules } from './rules.ts';\nimport type { _Lexer } from './Lexer.ts';\nimport type { Links, Tokens, Token } from './Tokens.ts';\nimport type { MarkedOptions } from './MarkedOptions.ts';\n\nfunction outputLink(cap: string[], link: Pick<Tokens.Link, 'href' | 'title'>, raw: string, lexer: _Lexer, rules: Rules): Tokens.Link | Tokens.Image {\n  const href = link.href;\n  const title = link.title || null;\n  const text = cap[1].replace(rules.other.outputLinkReplace, '$1');\n\n  lexer.state.inLink = true;\n  const token: Tokens.Link | Tokens.Image = {\n    type: cap[0].charAt(0) === '!' ? 'image' : 'link',\n    raw,\n    href,\n    title,\n    text,\n    tokens: lexer.inlineTokens(text),\n  };\n  lexer.state.inLink = false;\n  return token;\n}\n\nfunction indentCodeCompensation(raw: string, text: string, rules: Rules) {\n  const matchIndentToCode = raw.match(rules.other.indentCodeCompensation);\n\n  if (matchIndentToCode === null) {\n    return text;\n  }\n\n  const indentToCode = matchIndentToCode[1];\n\n  return text\n    .split('\\n')\n    .map(node => {\n      const matchIndentInNode = node.match(rules.other.beginningSpace);\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      const [indentInNode] = matchIndentInNode;\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    })\n    .join('\\n');\n}\n\n/**\n * Tokenizer\n */\nexport class _Tokenizer<ParserOutput = string, RendererOutput = string> {\n  options: MarkedOptions<ParserOutput, RendererOutput>;\n  rules!: Rules; // set by the lexer\n  lexer!: _Lexer<ParserOutput, RendererOutput>; // set by the lexer\n\n  constructor(options?: MarkedOptions<ParserOutput, RendererOutput>) {\n    this.options = options || _defaults;\n  }\n\n  space(src: string): Tokens.Space | undefined {\n    const cap = this.rules.block.newline.exec(src);\n    if (cap && cap[0].length > 0) {\n      return {\n        type: 'space',\n        raw: cap[0],\n      };\n    }\n  }\n\n  code(src: string): Tokens.Code | undefined {\n    const cap = this.rules.block.code.exec(src);\n    if (cap) {\n      const text = cap[0].replace(this.rules.other.codeRemoveIndent, '');\n      return {\n        type: 'code',\n        raw: cap[0],\n        codeBlockStyle: 'indented',\n        text: !this.options.pedantic\n          ? rtrim(text, '\\n')\n          : text,\n      };\n    }\n  }\n\n  fences(src: string): Tokens.Code | undefined {\n    const cap = this.rules.block.fences.exec(src);\n    if (cap) {\n      const raw = cap[0];\n      const text = indentCodeCompensation(raw, cap[3] || '', this.rules);\n\n      return {\n        type: 'code',\n        raw,\n        lang: cap[2] ? cap[2].trim().replace(this.rules.inline.anyPunctuation, '$1') : cap[2],\n        text,\n      };\n    }\n  }\n\n  heading(src: string): Tokens.Heading | undefined {\n    const cap = this.rules.block.heading.exec(src);\n    if (cap) {\n      let text = cap[2].trim();\n\n      // remove trailing #s\n      if (this.rules.other.endingHash.test(text)) {\n        const trimmed = rtrim(text, '#');\n        if (this.options.pedantic) {\n          text = trimmed.trim();\n        } else if (!trimmed || this.rules.other.endingSpaceChar.test(trimmed)) {\n          // CommonMark requires space before trailing #s\n          text = trimmed.trim();\n        }\n      }\n\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[1].length,\n        text,\n        tokens: this.lexer.inline(text),\n      };\n    }\n  }\n\n  hr(src: string): Tokens.Hr | undefined {\n    const cap = this.rules.block.hr.exec(src);\n    if (cap) {\n      return {\n        type: 'hr',\n        raw: rtrim(cap[0], '\\n'),\n      };\n    }\n  }\n\n  blockquote(src: string): Tokens.Blockquote | undefined {\n    const cap = this.rules.block.blockquote.exec(src);\n    if (cap) {\n      let lines = rtrim(cap[0], '\\n').split('\\n');\n      let raw = '';\n      let text = '';\n      const tokens: Token[] = [];\n\n      while (lines.length > 0) {\n        let inBlockquote = false;\n        const currentLines = [];\n\n        let i;\n        for (i = 0; i < lines.length; i++) {\n          // get lines up to a continuation\n          if (this.rules.other.blockquoteStart.test(lines[i])) {\n            currentLines.push(lines[i]);\n            inBlockquote = true;\n          } else if (!inBlockquote) {\n            currentLines.push(lines[i]);\n          } else {\n            break;\n          }\n        }\n        lines = lines.slice(i);\n\n        const currentRaw = currentLines.join('\\n');\n        const currentText = currentRaw\n          // precede setext continuation with 4 spaces so it isn't a setext\n          .replace(this.rules.other.blockquoteSetextReplace, '\\n    $1')\n          .replace(this.rules.other.blockquoteSetextReplace2, '');\n        raw = raw ? `${raw}\\n${currentRaw}` : currentRaw;\n        text = text ? `${text}\\n${currentText}` : currentText;\n\n        // parse blockquote lines as top level tokens\n        // merge paragraphs if this is a continuation\n        const top = this.lexer.state.top;\n        this.lexer.state.top = true;\n        this.lexer.blockTokens(currentText, tokens, true);\n        this.lexer.state.top = top;\n\n        // if there is no continuation then we are done\n        if (lines.length === 0) {\n          break;\n        }\n\n        const lastToken = tokens.at(-1);\n\n        if (lastToken?.type === 'code') {\n          // blockquote continuation cannot be preceded by a code block\n          break;\n        } else if (lastToken?.type === 'blockquote') {\n          // include continuation in nested blockquote\n          const oldToken = lastToken as Tokens.Blockquote;\n          const newText = oldToken.raw + '\\n' + lines.join('\\n');\n          const newToken = this.blockquote(newText)!;\n          tokens[tokens.length - 1] = newToken;\n\n          raw = raw.substring(0, raw.length - oldToken.raw.length) + newToken.raw;\n          text = text.substring(0, text.length - oldToken.text.length) + newToken.text;\n          break;\n        } else if (lastToken?.type === 'list') {\n          // include continuation in nested list\n          const oldToken = lastToken as Tokens.List;\n          const newText = oldToken.raw + '\\n' + lines.join('\\n');\n          const newToken = this.list(newText)!;\n          tokens[tokens.length - 1] = newToken;\n\n          raw = raw.substring(0, raw.length - lastToken.raw.length) + newToken.raw;\n          text = text.substring(0, text.length - oldToken.raw.length) + newToken.raw;\n          lines = newText.substring(tokens.at(-1)!.raw.length).split('\\n');\n          continue;\n        }\n      }\n\n      return {\n        type: 'blockquote',\n        raw,\n        tokens,\n        text,\n      };\n    }\n  }\n\n  list(src: string): Tokens.List | undefined {\n    let cap = this.rules.block.list.exec(src);\n    if (cap) {\n      let bull = cap[1].trim();\n      const isordered = bull.length > 1;\n\n      const list: Tokens.List = {\n        type: 'list',\n        raw: '',\n        ordered: isordered,\n        start: isordered ? +bull.slice(0, -1) : '',\n        loose: false,\n        items: [],\n      };\n\n      bull = isordered ? `\\\\d{1,9}\\\\${bull.slice(-1)}` : `\\\\${bull}`;\n\n      if (this.options.pedantic) {\n        bull = isordered ? bull : '[*+-]';\n      }\n\n      // Get next list item\n      const itemRegex = this.rules.other.listItemRegex(bull);\n      let endsWithBlankLine = false;\n      // Check if current bullet point can start a new List Item\n      while (src) {\n        let endEarly = false;\n        let raw = '';\n        let itemContents = '';\n        if (!(cap = itemRegex.exec(src))) {\n          break;\n        }\n\n        if (this.rules.block.hr.test(src)) { // End list if bullet was actually HR (possibly move into itemRegex?)\n          break;\n        }\n\n        raw = cap[0];\n        src = src.substring(raw.length);\n\n        let line = cap[2].split('\\n', 1)[0].replace(this.rules.other.listReplaceTabs, (t: string) => ' '.repeat(3 * t.length));\n        let nextLine = src.split('\\n', 1)[0];\n        let blankLine = !line.trim();\n\n        let indent = 0;\n        if (this.options.pedantic) {\n          indent = 2;\n          itemContents = line.trimStart();\n        } else if (blankLine) {\n          indent = cap[1].length + 1;\n        } else {\n          indent = cap[2].search(this.rules.other.nonSpaceChar); // Find first non-space char\n          indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n          itemContents = line.slice(indent);\n          indent += cap[1].length;\n        }\n\n        if (blankLine && this.rules.other.blankLine.test(nextLine)) { // Items begin with at most one blank line\n          raw += nextLine + '\\n';\n          src = src.substring(nextLine.length + 1);\n          endEarly = true;\n        }\n\n        if (!endEarly) {\n          const nextBulletRegex = this.rules.other.nextBulletRegex(indent);\n          const hrRegex = this.rules.other.hrRegex(indent);\n          const fencesBeginRegex = this.rules.other.fencesBeginRegex(indent);\n          const headingBeginRegex = this.rules.other.headingBeginRegex(indent);\n          const htmlBeginRegex = this.rules.other.htmlBeginRegex(indent);\n\n          // Check if following lines should be included in List Item\n          while (src) {\n            const rawLine = src.split('\\n', 1)[0];\n            let nextLineWithoutTabs;\n            nextLine = rawLine;\n\n            // Re-align to follow commonmark nesting rules\n            if (this.options.pedantic) {\n              nextLine = nextLine.replace(this.rules.other.listReplaceNesting, '  ');\n              nextLineWithoutTabs = nextLine;\n            } else {\n              nextLineWithoutTabs = nextLine.replace(this.rules.other.tabCharGlobal, '    ');\n            }\n\n            // End list item if found code fences\n            if (fencesBeginRegex.test(nextLine)) {\n              break;\n            }\n\n            // End list item if found start of new heading\n            if (headingBeginRegex.test(nextLine)) {\n              break;\n            }\n\n            // End list item if found start of html block\n            if (htmlBeginRegex.test(nextLine)) {\n              break;\n            }\n\n            // End list item if found start of new bullet\n            if (nextBulletRegex.test(nextLine)) {\n              break;\n            }\n\n            // Horizontal rule found\n            if (hrRegex.test(nextLine)) {\n              break;\n            }\n\n            if (nextLineWithoutTabs.search(this.rules.other.nonSpaceChar) >= indent || !nextLine.trim()) { // Dedent if possible\n              itemContents += '\\n' + nextLineWithoutTabs.slice(indent);\n            } else {\n              // not enough indentation\n              if (blankLine) {\n                break;\n              }\n\n              // paragraph continuation unless last line was a different block level element\n              if (line.replace(this.rules.other.tabCharGlobal, '    ').search(this.rules.other.nonSpaceChar) >= 4) { // indented code block\n                break;\n              }\n              if (fencesBeginRegex.test(line)) {\n                break;\n              }\n              if (headingBeginRegex.test(line)) {\n                break;\n              }\n              if (hrRegex.test(line)) {\n                break;\n              }\n\n              itemContents += '\\n' + nextLine;\n            }\n\n            if (!blankLine && !nextLine.trim()) { // Check if current line is blank\n              blankLine = true;\n            }\n\n            raw += rawLine + '\\n';\n            src = src.substring(rawLine.length + 1);\n            line = nextLineWithoutTabs.slice(indent);\n          }\n        }\n\n        if (!list.loose) {\n          // If the previous item ended with a blank line, the list is loose\n          if (endsWithBlankLine) {\n            list.loose = true;\n          } else if (this.rules.other.doubleBlankLine.test(raw)) {\n            endsWithBlankLine = true;\n          }\n        }\n\n        let istask: RegExpExecArray | null = null;\n        let ischecked: boolean | undefined;\n        // Check for task list items\n        if (this.options.gfm) {\n          istask = this.rules.other.listIsTask.exec(itemContents);\n          if (istask) {\n            ischecked = istask[0] !== '[ ] ';\n            itemContents = itemContents.replace(this.rules.other.listReplaceTask, '');\n          }\n        }\n\n        list.items.push({\n          type: 'list_item',\n          raw,\n          task: !!istask,\n          checked: ischecked,\n          loose: false,\n          text: itemContents,\n          tokens: [],\n        });\n\n        list.raw += raw;\n      }\n\n      // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n      const lastItem = list.items.at(-1);\n      if (lastItem) {\n        lastItem.raw = lastItem.raw.trimEnd();\n        lastItem.text = lastItem.text.trimEnd();\n      } else {\n        // not a list since there were no items\n        return;\n      }\n      list.raw = list.raw.trimEnd();\n\n      // Item child tokens handled here at end because we needed to have the final item to trim it first\n      for (let i = 0; i < list.items.length; i++) {\n        this.lexer.state.top = false;\n        list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n\n        if (!list.loose) {\n          // Check if list should be loose\n          const spacers = list.items[i].tokens.filter(t => t.type === 'space');\n          const hasMultipleLineBreaks = spacers.length > 0 && spacers.some(t => this.rules.other.anyLine.test(t.raw));\n\n          list.loose = hasMultipleLineBreaks;\n        }\n      }\n\n      // Set all items to loose if list is loose\n      if (list.loose) {\n        for (let i = 0; i < list.items.length; i++) {\n          list.items[i].loose = true;\n        }\n      }\n\n      return list;\n    }\n  }\n\n  html(src: string): Tokens.HTML | undefined {\n    const cap = this.rules.block.html.exec(src);\n    if (cap) {\n      const token: Tokens.HTML = {\n        type: 'html',\n        block: true,\n        raw: cap[0],\n        pre: cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style',\n        text: cap[0],\n      };\n      return token;\n    }\n  }\n\n  def(src: string): Tokens.Def | undefined {\n    const cap = this.rules.block.def.exec(src);\n    if (cap) {\n      const tag = cap[1].toLowerCase().replace(this.rules.other.multipleSpaceGlobal, ' ');\n      const href = cap[2] ? cap[2].replace(this.rules.other.hrefBrackets, '$1').replace(this.rules.inline.anyPunctuation, '$1') : '';\n      const title = cap[3] ? cap[3].substring(1, cap[3].length - 1).replace(this.rules.inline.anyPunctuation, '$1') : cap[3];\n      return {\n        type: 'def',\n        tag,\n        raw: cap[0],\n        href,\n        title,\n      };\n    }\n  }\n\n  table(src: string): Tokens.Table | undefined {\n    const cap = this.rules.block.table.exec(src);\n    if (!cap) {\n      return;\n    }\n\n    if (!this.rules.other.tableDelimiter.test(cap[2])) {\n      // delimiter row must have a pipe (|) or colon (:) otherwise it is a setext heading\n      return;\n    }\n\n    const headers = splitCells(cap[1]);\n    const aligns = cap[2].replace(this.rules.other.tableAlignChars, '').split('|');\n    const rows = cap[3]?.trim() ? cap[3].replace(this.rules.other.tableRowBlankLine, '').split('\\n') : [];\n\n    const item: Tokens.Table = {\n      type: 'table',\n      raw: cap[0],\n      header: [],\n      align: [],\n      rows: [],\n    };\n\n    if (headers.length !== aligns.length) {\n      // header and align columns must be equal, rows can be different.\n      return;\n    }\n\n    for (const align of aligns) {\n      if (this.rules.other.tableAlignRight.test(align)) {\n        item.align.push('right');\n      } else if (this.rules.other.tableAlignCenter.test(align)) {\n        item.align.push('center');\n      } else if (this.rules.other.tableAlignLeft.test(align)) {\n        item.align.push('left');\n      } else {\n        item.align.push(null);\n      }\n    }\n\n    for (let i = 0; i < headers.length; i++) {\n      item.header.push({\n        text: headers[i],\n        tokens: this.lexer.inline(headers[i]),\n        header: true,\n        align: item.align[i],\n      });\n    }\n\n    for (const row of rows) {\n      item.rows.push(splitCells(row, item.header.length).map((cell, i) => {\n        return {\n          text: cell,\n          tokens: this.lexer.inline(cell),\n          header: false,\n          align: item.align[i],\n        };\n      }));\n    }\n\n    return item;\n  }\n\n  lheading(src: string): Tokens.Heading | undefined {\n    const cap = this.rules.block.lheading.exec(src);\n    if (cap) {\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[2].charAt(0) === '=' ? 1 : 2,\n        text: cap[1],\n        tokens: this.lexer.inline(cap[1]),\n      };\n    }\n  }\n\n  paragraph(src: string): Tokens.Paragraph | undefined {\n    const cap = this.rules.block.paragraph.exec(src);\n    if (cap) {\n      const text = cap[1].charAt(cap[1].length - 1) === '\\n'\n        ? cap[1].slice(0, -1)\n        : cap[1];\n      return {\n        type: 'paragraph',\n        raw: cap[0],\n        text,\n        tokens: this.lexer.inline(text),\n      };\n    }\n  }\n\n  text(src: string): Tokens.Text | undefined {\n    const cap = this.rules.block.text.exec(src);\n    if (cap) {\n      return {\n        type: 'text',\n        raw: cap[0],\n        text: cap[0],\n        tokens: this.lexer.inline(cap[0]),\n      };\n    }\n  }\n\n  escape(src: string): Tokens.Escape | undefined {\n    const cap = this.rules.inline.escape.exec(src);\n    if (cap) {\n      return {\n        type: 'escape',\n        raw: cap[0],\n        text: cap[1],\n      };\n    }\n  }\n\n  tag(src: string): Tokens.Tag | undefined {\n    const cap = this.rules.inline.tag.exec(src);\n    if (cap) {\n      if (!this.lexer.state.inLink && this.rules.other.startATag.test(cap[0])) {\n        this.lexer.state.inLink = true;\n      } else if (this.lexer.state.inLink && this.rules.other.endATag.test(cap[0])) {\n        this.lexer.state.inLink = false;\n      }\n      if (!this.lexer.state.inRawBlock && this.rules.other.startPreScriptTag.test(cap[0])) {\n        this.lexer.state.inRawBlock = true;\n      } else if (this.lexer.state.inRawBlock && this.rules.other.endPreScriptTag.test(cap[0])) {\n        this.lexer.state.inRawBlock = false;\n      }\n\n      return {\n        type: 'html',\n        raw: cap[0],\n        inLink: this.lexer.state.inLink,\n        inRawBlock: this.lexer.state.inRawBlock,\n        block: false,\n        text: cap[0],\n      };\n    }\n  }\n\n  link(src: string): Tokens.Link | Tokens.Image | undefined {\n    const cap = this.rules.inline.link.exec(src);\n    if (cap) {\n      const trimmedUrl = cap[2].trim();\n      if (!this.options.pedantic && this.rules.other.startAngleBracket.test(trimmedUrl)) {\n        // commonmark requires matching angle brackets\n        if (!(this.rules.other.endAngleBracket.test(trimmedUrl))) {\n          return;\n        }\n\n        // ending angle bracket cannot be escaped\n        const rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n        if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n          return;\n        }\n      } else {\n        // find closing parenthesis\n        const lastParenIndex = findClosingBracket(cap[2], '()');\n        if (lastParenIndex === -2) {\n          // more open parens than closed\n          return;\n        }\n\n        if (lastParenIndex > -1) {\n          const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n          const linkLen = start + cap[1].length + lastParenIndex;\n          cap[2] = cap[2].substring(0, lastParenIndex);\n          cap[0] = cap[0].substring(0, linkLen).trim();\n          cap[3] = '';\n        }\n      }\n      let href = cap[2];\n      let title = '';\n      if (this.options.pedantic) {\n        // split pedantic href and title\n        const link = this.rules.other.pedanticHrefTitle.exec(href);\n\n        if (link) {\n          href = link[1];\n          title = link[3];\n        }\n      } else {\n        title = cap[3] ? cap[3].slice(1, -1) : '';\n      }\n\n      href = href.trim();\n      if (this.rules.other.startAngleBracket.test(href)) {\n        if (this.options.pedantic && !(this.rules.other.endAngleBracket.test(trimmedUrl))) {\n          // pedantic allows starting angle bracket without ending angle bracket\n          href = href.slice(1);\n        } else {\n          href = href.slice(1, -1);\n        }\n      }\n      return outputLink(cap, {\n        href: href ? href.replace(this.rules.inline.anyPunctuation, '$1') : href,\n        title: title ? title.replace(this.rules.inline.anyPunctuation, '$1') : title,\n      }, cap[0], this.lexer, this.rules);\n    }\n  }\n\n  reflink(src: string, links: Links): Tokens.Link | Tokens.Image | Tokens.Text | undefined {\n    let cap;\n    if ((cap = this.rules.inline.reflink.exec(src))\n      || (cap = this.rules.inline.nolink.exec(src))) {\n      const linkString = (cap[2] || cap[1]).replace(this.rules.other.multipleSpaceGlobal, ' ');\n      const link = links[linkString.toLowerCase()];\n      if (!link) {\n        const text = cap[0].charAt(0);\n        return {\n          type: 'text',\n          raw: text,\n          text,\n        };\n      }\n      return outputLink(cap, link, cap[0], this.lexer, this.rules);\n    }\n  }\n\n  emStrong(src: string, maskedSrc: string, prevChar = ''): Tokens.Em | Tokens.Strong | undefined {\n    let match = this.rules.inline.emStrongLDelim.exec(src);\n    if (!match) return;\n\n    // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n    if (match[3] && prevChar.match(this.rules.other.unicodeAlphaNumeric)) return;\n\n    const nextChar = match[1] || match[2] || '';\n\n    if (!nextChar || !prevChar || this.rules.inline.punctuation.exec(prevChar)) {\n      // unicode Regex counts emoji as 1 char; spread into array for proper count (used multiple times below)\n      const lLength = [...match[0]].length - 1;\n      let rDelim, rLength, delimTotal = lLength, midDelimTotal = 0;\n\n      const endReg = match[0][0] === '*' ? this.rules.inline.emStrongRDelimAst : this.rules.inline.emStrongRDelimUnd;\n      endReg.lastIndex = 0;\n\n      // Clip maskedSrc to same section of string as src (move to lexer?)\n      maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n\n      while ((match = endReg.exec(maskedSrc)) != null) {\n        rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n\n        if (!rDelim) continue; // skip single * in __abc*abc__\n\n        rLength = [...rDelim].length;\n\n        if (match[3] || match[4]) { // found another Left Delim\n          delimTotal += rLength;\n          continue;\n        } else if (match[5] || match[6]) { // either Left or Right Delim\n          if (lLength % 3 && !((lLength + rLength) % 3)) {\n            midDelimTotal += rLength;\n            continue; // CommonMark Emphasis Rules 9-10\n          }\n        }\n\n        delimTotal -= rLength;\n\n        if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n\n        // Remove extra characters. *a*** -> *a*\n        rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n        // char length can be >1 for unicode characters;\n        const lastCharLength = [...match[0]][0].length;\n        const raw = src.slice(0, lLength + match.index + lastCharLength + rLength);\n\n        // Create `em` if smallest delimiter has odd char count. *a***\n        if (Math.min(lLength, rLength) % 2) {\n          const text = raw.slice(1, -1);\n          return {\n            type: 'em',\n            raw,\n            text,\n            tokens: this.lexer.inlineTokens(text),\n          };\n        }\n\n        // Create 'strong' if smallest delimiter has even char count. **a***\n        const text = raw.slice(2, -2);\n        return {\n          type: 'strong',\n          raw,\n          text,\n          tokens: this.lexer.inlineTokens(text),\n        };\n      }\n    }\n  }\n\n  codespan(src: string): Tokens.Codespan | undefined {\n    const cap = this.rules.inline.code.exec(src);\n    if (cap) {\n      let text = cap[2].replace(this.rules.other.newLineCharGlobal, ' ');\n      const hasNonSpaceChars = this.rules.other.nonSpaceChar.test(text);\n      const hasSpaceCharsOnBothEnds = this.rules.other.startingSpaceChar.test(text) && this.rules.other.endingSpaceChar.test(text);\n      if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n        text = text.substring(1, text.length - 1);\n      }\n      return {\n        type: 'codespan',\n        raw: cap[0],\n        text,\n      };\n    }\n  }\n\n  br(src: string): Tokens.Br | undefined {\n    const cap = this.rules.inline.br.exec(src);\n    if (cap) {\n      return {\n        type: 'br',\n        raw: cap[0],\n      };\n    }\n  }\n\n  del(src: string): Tokens.Del | undefined {\n    const cap = this.rules.inline.del.exec(src);\n    if (cap) {\n      return {\n        type: 'del',\n        raw: cap[0],\n        text: cap[2],\n        tokens: this.lexer.inlineTokens(cap[2]),\n      };\n    }\n  }\n\n  autolink(src: string): Tokens.Link | undefined {\n    const cap = this.rules.inline.autolink.exec(src);\n    if (cap) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = cap[1];\n        href = 'mailto:' + text;\n      } else {\n        text = cap[1];\n        href = text;\n      }\n\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text,\n          },\n        ],\n      };\n    }\n  }\n\n  url(src: string): Tokens.Link | undefined {\n    let cap;\n    if (cap = this.rules.inline.url.exec(src)) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = cap[0];\n        href = 'mailto:' + text;\n      } else {\n        // do extended autolink path validation\n        let prevCapZero;\n        do {\n          prevCapZero = cap[0];\n          cap[0] = this.rules.inline._backpedal.exec(cap[0])?.[0] ?? '';\n        } while (prevCapZero !== cap[0]);\n        text = cap[0];\n        if (cap[1] === 'www.') {\n          href = 'http://' + cap[0];\n        } else {\n          href = cap[0];\n        }\n      }\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text,\n          },\n        ],\n      };\n    }\n  }\n\n  inlineText(src: string): Tokens.Text | undefined {\n    const cap = this.rules.inline.text.exec(src);\n    if (cap) {\n      const escaped = this.lexer.state.inRawBlock;\n      return {\n        type: 'text',\n        raw: cap[0],\n        text: cap[0],\n        escaped,\n      };\n    }\n  }\n}\n", "import { _Tokenizer } from './Tokenizer.ts';\nimport { _defaults } from './defaults.ts';\nimport { other, block, inline } from './rules.ts';\nimport type { Token, TokensList, Tokens } from './Tokens.ts';\nimport type { MarkedOptions } from './MarkedOptions.ts';\n\n/**\n * Block Lexer\n */\nexport class _Lexer<ParserOutput = string, RendererOutput = string> {\n  tokens: TokensList;\n  options: MarkedOptions<ParserOutput, RendererOutput>;\n  state: {\n    inLink: boolean;\n    inRawBlock: boolean;\n    top: boolean;\n  };\n\n  private tokenizer: _Tokenizer<ParserOutput, RendererOutput>;\n  private inlineQueue: { src: string, tokens: Token[] }[];\n\n  constructor(options?: MarkedOptions<ParserOutput, RendererOutput>) {\n    // TokenList cannot be created in one go\n    this.tokens = [] as unknown as TokensList;\n    this.tokens.links = Object.create(null);\n    this.options = options || _defaults;\n    this.options.tokenizer = this.options.tokenizer || new _Tokenizer<ParserOutput, RendererOutput>();\n    this.tokenizer = this.options.tokenizer;\n    this.tokenizer.options = this.options;\n    this.tokenizer.lexer = this;\n    this.inlineQueue = [];\n    this.state = {\n      inLink: false,\n      inRawBlock: false,\n      top: true,\n    };\n\n    const rules = {\n      other,\n      block: block.normal,\n      inline: inline.normal,\n    };\n\n    if (this.options.pedantic) {\n      rules.block = block.pedantic;\n      rules.inline = inline.pedantic;\n    } else if (this.options.gfm) {\n      rules.block = block.gfm;\n      if (this.options.breaks) {\n        rules.inline = inline.breaks;\n      } else {\n        rules.inline = inline.gfm;\n      }\n    }\n    this.tokenizer.rules = rules;\n  }\n\n  /**\n   * Expose Rules\n   */\n  static get rules() {\n    return {\n      block,\n      inline,\n    };\n  }\n\n  /**\n   * Static Lex Method\n   */\n  static lex<ParserOutput = string, RendererOutput = string>(src: string, options?: MarkedOptions<ParserOutput, RendererOutput>) {\n    const lexer = new _Lexer<ParserOutput, RendererOutput>(options);\n    return lexer.lex(src);\n  }\n\n  /**\n   * Static Lex Inline Method\n   */\n  static lexInline<ParserOutput = string, RendererOutput = string>(src: string, options?: MarkedOptions<ParserOutput, RendererOutput>) {\n    const lexer = new _Lexer<ParserOutput, RendererOutput>(options);\n    return lexer.inlineTokens(src);\n  }\n\n  /**\n   * Preprocessing\n   */\n  lex(src: string) {\n    src = src.replace(other.carriageReturn, '\\n');\n\n    this.blockTokens(src, this.tokens);\n\n    for (let i = 0; i < this.inlineQueue.length; i++) {\n      const next = this.inlineQueue[i];\n      this.inlineTokens(next.src, next.tokens);\n    }\n    this.inlineQueue = [];\n\n    return this.tokens;\n  }\n\n  /**\n   * Lexing\n   */\n  blockTokens(src: string, tokens?: Token[], lastParagraphClipped?: boolean): Token[];\n  blockTokens(src: string, tokens?: TokensList, lastParagraphClipped?: boolean): TokensList;\n  blockTokens(src: string, tokens: Token[] = [], lastParagraphClipped = false) {\n    if (this.options.pedantic) {\n      src = src.replace(other.tabCharGlobal, '    ').replace(other.spaceLine, '');\n    }\n\n    while (src) {\n      let token: Tokens.Generic | undefined;\n\n      if (this.options.extensions?.block?.some((extTokenizer) => {\n        if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          return true;\n        }\n        return false;\n      })) {\n        continue;\n      }\n\n      // newline\n      if (token = this.tokenizer.space(src)) {\n        src = src.substring(token.raw.length);\n        const lastToken = tokens.at(-1);\n        if (token.raw.length === 1 && lastToken !== undefined) {\n          // if there's a single \\n as a spacer, it's terminating the last line,\n          // so move it there so that we don't get unnecessary paragraph tags\n          lastToken.raw += '\\n';\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.code(src)) {\n        src = src.substring(token.raw.length);\n        const lastToken = tokens.at(-1);\n        // An indented code block cannot interrupt a paragraph.\n        if (lastToken?.type === 'paragraph' || lastToken?.type === 'text') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.at(-1)!.src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // fences\n      if (token = this.tokenizer.fences(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // heading\n      if (token = this.tokenizer.heading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // hr\n      if (token = this.tokenizer.hr(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // blockquote\n      if (token = this.tokenizer.blockquote(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // list\n      if (token = this.tokenizer.list(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // html\n      if (token = this.tokenizer.html(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // def\n      if (token = this.tokenizer.def(src)) {\n        src = src.substring(token.raw.length);\n        const lastToken = tokens.at(-1);\n        if (lastToken?.type === 'paragraph' || lastToken?.type === 'text') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.raw;\n          this.inlineQueue.at(-1)!.src = lastToken.text;\n        } else if (!this.tokens.links[token.tag]) {\n          this.tokens.links[token.tag] = {\n            href: token.href,\n            title: token.title,\n          };\n        }\n        continue;\n      }\n\n      // table (gfm)\n      if (token = this.tokenizer.table(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // lheading\n      if (token = this.tokenizer.lheading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // top-level paragraph\n      // prevent paragraph consuming extensions by clipping 'src' to extension start\n      let cutSrc = src;\n      if (this.options.extensions?.startBlock) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startBlock.forEach((getStartIndex) => {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) {\n            startIndex = Math.min(startIndex, tempStart);\n          }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n        const lastToken = tokens.at(-1);\n        if (lastParagraphClipped && lastToken?.type === 'paragraph') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue.at(-1)!.src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        lastParagraphClipped = cutSrc.length !== src.length;\n        src = src.substring(token.raw.length);\n        continue;\n      }\n\n      // text\n      if (token = this.tokenizer.text(src)) {\n        src = src.substring(token.raw.length);\n        const lastToken = tokens.at(-1);\n        if (lastToken?.type === 'text') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue.at(-1)!.src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    this.state.top = true;\n    return tokens;\n  }\n\n  inline(src: string, tokens: Token[] = []) {\n    this.inlineQueue.push({ src, tokens });\n    return tokens;\n  }\n\n  /**\n   * Lexing/Compiling\n   */\n  inlineTokens(src: string, tokens: Token[] = []): Token[] {\n    // String with links masked to avoid interference with em and strong\n    let maskedSrc = src;\n    let match: RegExpExecArray | null = null;\n\n    // Mask out reflinks\n    if (this.tokens.links) {\n      const links = Object.keys(this.tokens.links);\n      if (links.length > 0) {\n        while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n          if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n            maskedSrc = maskedSrc.slice(0, match.index)\n              + '[' + 'a'.repeat(match[0].length - 2) + ']'\n              + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n          }\n        }\n      }\n    }\n\n    // Mask out escaped characters\n    while ((match = this.tokenizer.rules.inline.anyPunctuation.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.anyPunctuation.lastIndex);\n    }\n\n    // Mask out other blocks\n    while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index) + '[' + 'a'.repeat(match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n    }\n\n    let keepPrevChar = false;\n    let prevChar = '';\n    while (src) {\n      if (!keepPrevChar) {\n        prevChar = '';\n      }\n      keepPrevChar = false;\n\n      let token: Tokens.Generic | undefined;\n\n      // extensions\n      if (this.options.extensions?.inline?.some((extTokenizer) => {\n        if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          return true;\n        }\n        return false;\n      })) {\n        continue;\n      }\n\n      // escape\n      if (token = this.tokenizer.escape(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // tag\n      if (token = this.tokenizer.tag(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // link\n      if (token = this.tokenizer.link(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // reflink, nolink\n      if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n        src = src.substring(token.raw.length);\n        const lastToken = tokens.at(-1);\n        if (token.type === 'text' && lastToken?.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // em & strong\n      if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.codespan(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // br\n      if (token = this.tokenizer.br(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // del (gfm)\n      if (token = this.tokenizer.del(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // autolink\n      if (token = this.tokenizer.autolink(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // url (gfm)\n      if (!this.state.inLink && (token = this.tokenizer.url(src))) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // text\n      // prevent inlineText consuming extensions by clipping 'src' to extension start\n      let cutSrc = src;\n      if (this.options.extensions?.startInline) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startInline.forEach((getStartIndex) => {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) {\n            startIndex = Math.min(startIndex, tempStart);\n          }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (token = this.tokenizer.inlineText(cutSrc)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.slice(-1) !== '_') { // Track prevChar before string of ____ started\n          prevChar = token.raw.slice(-1);\n        }\n        keepPrevChar = true;\n        const lastToken = tokens.at(-1);\n        if (lastToken?.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    return tokens;\n  }\n}\n", "import { _defaults } from './defaults.ts';\nimport {\n  cleanUrl,\n  escape,\n} from './helpers.ts';\nimport { other } from './rules.ts';\nimport type { MarkedOptions } from './MarkedOptions.ts';\nimport type { Tokens } from './Tokens.ts';\nimport type { _Parser } from './Parser.ts';\n\n/**\n * Renderer\n */\nexport class _Renderer<ParserOutput = string, RendererOutput = string> {\n  options: MarkedOptions<ParserOutput, RendererOutput>;\n  parser!: _Parser<ParserOutput, RendererOutput>; // set by the parser\n  constructor(options?: MarkedOptions<ParserOutput, RendererOutput>) {\n    this.options = options || _defaults;\n  }\n\n  space(token: Tokens.Space): RendererOutput {\n    return '' as RendererOutput;\n  }\n\n  code({ text, lang, escaped }: Tokens.Code): RendererOutput {\n    const langString = (lang || '').match(other.notSpaceStart)?.[0];\n\n    const code = text.replace(other.endingNewline, '') + '\\n';\n\n    if (!langString) {\n      return '<pre><code>'\n        + (escaped ? code : escape(code, true))\n        + '</code></pre>\\n' as RendererOutput;\n    }\n\n    return '<pre><code class=\"language-'\n      + escape(langString)\n      + '\">'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>\\n' as RendererOutput;\n  }\n\n  blockquote({ tokens }: Tokens.Blockquote): RendererOutput {\n    const body = this.parser.parse(tokens);\n    return `<blockquote>\\n${body}</blockquote>\\n` as RendererOutput;\n  }\n\n  html({ text }: Tokens.HTML | Tokens.Tag): RendererOutput {\n    return text as RendererOutput;\n  }\n\n  heading({ tokens, depth }: Tokens.Heading): RendererOutput {\n    return `<h${depth}>${this.parser.parseInline(tokens)}</h${depth}>\\n` as RendererOutput;\n  }\n\n  hr(token: Tokens.Hr): RendererOutput {\n    return '<hr>\\n' as RendererOutput;\n  }\n\n  list(token: Tokens.List): RendererOutput {\n    const ordered = token.ordered;\n    const start = token.start;\n\n    let body = '';\n    for (let j = 0; j < token.items.length; j++) {\n      const item = token.items[j];\n      body += this.listitem(item);\n    }\n\n    const type = ordered ? 'ol' : 'ul';\n    const startAttr = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n    return '<' + type + startAttr + '>\\n' + body + '</' + type + '>\\n' as RendererOutput;\n  }\n\n  listitem(item: Tokens.ListItem): RendererOutput {\n    let itemBody = '';\n    if (item.task) {\n      const checkbox = this.checkbox({ checked: !!item.checked });\n      if (item.loose) {\n        if (item.tokens[0]?.type === 'paragraph') {\n          item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n          if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n            item.tokens[0].tokens[0].text = checkbox + ' ' + escape(item.tokens[0].tokens[0].text);\n            item.tokens[0].tokens[0].escaped = true;\n          }\n        } else {\n          item.tokens.unshift({\n            type: 'text',\n            raw: checkbox + ' ',\n            text: checkbox + ' ',\n            escaped: true,\n          });\n        }\n      } else {\n        itemBody += checkbox + ' ';\n      }\n    }\n\n    itemBody += this.parser.parse(item.tokens, !!item.loose);\n\n    return `<li>${itemBody}</li>\\n` as RendererOutput;\n  }\n\n  checkbox({ checked }: Tokens.Checkbox): RendererOutput {\n    return '<input '\n      + (checked ? 'checked=\"\" ' : '')\n      + 'disabled=\"\" type=\"checkbox\">' as RendererOutput;\n  }\n\n  paragraph({ tokens }: Tokens.Paragraph): RendererOutput {\n    return `<p>${this.parser.parseInline(tokens)}</p>\\n` as RendererOutput;\n  }\n\n  table(token: Tokens.Table): RendererOutput {\n    let header = '';\n\n    // header\n    let cell = '';\n    for (let j = 0; j < token.header.length; j++) {\n      cell += this.tablecell(token.header[j]);\n    }\n    header += this.tablerow({ text: cell as ParserOutput });\n\n    let body = '';\n    for (let j = 0; j < token.rows.length; j++) {\n      const row = token.rows[j];\n\n      cell = '';\n      for (let k = 0; k < row.length; k++) {\n        cell += this.tablecell(row[k]);\n      }\n\n      body += this.tablerow({ text: cell as ParserOutput });\n    }\n    if (body) body = `<tbody>${body}</tbody>`;\n\n    return '<table>\\n'\n      + '<thead>\\n'\n      + header\n      + '</thead>\\n'\n      + body\n      + '</table>\\n' as RendererOutput;\n  }\n\n  tablerow({ text }: Tokens.TableRow<ParserOutput>): RendererOutput {\n    return `<tr>\\n${text}</tr>\\n` as RendererOutput;\n  }\n\n  tablecell(token: Tokens.TableCell): RendererOutput {\n    const content = this.parser.parseInline(token.tokens);\n    const type = token.header ? 'th' : 'td';\n    const tag = token.align\n      ? `<${type} align=\"${token.align}\">`\n      : `<${type}>`;\n    return tag + content + `</${type}>\\n` as RendererOutput;\n  }\n\n  /**\n   * span level renderer\n   */\n  strong({ tokens }: Tokens.Strong): RendererOutput {\n    return `<strong>${this.parser.parseInline(tokens)}</strong>` as RendererOutput;\n  }\n\n  em({ tokens }: Tokens.Em): RendererOutput {\n    return `<em>${this.parser.parseInline(tokens)}</em>` as RendererOutput;\n  }\n\n  codespan({ text }: Tokens.Codespan): RendererOutput {\n    return `<code>${escape(text, true)}</code>` as RendererOutput;\n  }\n\n  br(token: Tokens.Br): RendererOutput {\n    return '<br>' as RendererOutput;\n  }\n\n  del({ tokens }: Tokens.Del): RendererOutput {\n    return `<del>${this.parser.parseInline(tokens)}</del>` as RendererOutput;\n  }\n\n  link({ href, title, tokens }: Tokens.Link): RendererOutput {\n    const text = this.parser.parseInline(tokens) as string;\n    const cleanHref = cleanUrl(href);\n    if (cleanHref === null) {\n      return text as RendererOutput;\n    }\n    href = cleanHref;\n    let out = '<a href=\"' + href + '\"';\n    if (title) {\n      out += ' title=\"' + (escape(title)) + '\"';\n    }\n    out += '>' + text + '</a>';\n    return out as RendererOutput;\n  }\n\n  image({ href, title, text, tokens }: Tokens.Image): RendererOutput {\n    if (tokens) {\n      text = this.parser.parseInline(tokens, this.parser.textRenderer) as string;\n    }\n    const cleanHref = cleanUrl(href);\n    if (cleanHref === null) {\n      return escape(text) as RendererOutput;\n    }\n    href = cleanHref;\n\n    let out = `<img src=\"${href}\" alt=\"${text}\"`;\n    if (title) {\n      out += ` title=\"${escape(title)}\"`;\n    }\n    out += '>';\n    return out as RendererOutput;\n  }\n\n  text(token: Tokens.Text | Tokens.Escape): RendererOutput {\n    return 'tokens' in token && token.tokens\n      ? this.parser.parseInline(token.tokens) as unknown as RendererOutput\n      : ('escaped' in token && token.escaped ? token.text as RendererOutput : escape(token.text) as RendererOutput);\n  }\n}\n", "import type { Tokens } from './Tokens.ts';\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\nexport class _TextRenderer<RendererOutput = string> {\n  // no need for block level renderers\n  strong({ text }: Tokens.Strong): RendererOutput {\n    return text as RendererOutput;\n  }\n\n  em({ text }: Tokens.Em): RendererOutput {\n    return text as RendererOutput;\n  }\n\n  codespan({ text }: Tokens.Codespan): RendererOutput {\n    return text as RendererOutput;\n  }\n\n  del({ text }: Tokens.Del): RendererOutput {\n    return text as RendererOutput;\n  }\n\n  html({ text }: Tokens.HTML | Tokens.Tag): RendererOutput {\n    return text as RendererOutput;\n  }\n\n  text({ text }: Tokens.Text | Tokens.Escape | Tokens.Tag): RendererOutput {\n    return text as RendererOutput;\n  }\n\n  link({ text }: Tokens.Link): RendererOutput {\n    return '' + text as RendererOutput;\n  }\n\n  image({ text }: Tokens.Image): RendererOutput {\n    return '' + text as RendererOutput;\n  }\n\n  br(): RendererOutput {\n    return '' as RendererOutput;\n  }\n}\n", "import { _Renderer } from './Renderer.ts';\nimport { _TextRenderer } from './TextRenderer.ts';\nimport { _defaults } from './defaults.ts';\nimport type { MarkedToken, Token, Tokens } from './Tokens.ts';\nimport type { MarkedOptions } from './MarkedOptions.ts';\n\n/**\n * Parsing & Compiling\n */\nexport class _Parser<ParserOutput = string, RendererOutput = string> {\n  options: MarkedOptions<ParserOutput, RendererOutput>;\n  renderer: _Renderer<ParserOutput, RendererOutput>;\n  textRenderer: _TextRenderer<RendererOutput>;\n  constructor(options?: MarkedOptions<ParserOutput, RendererOutput>) {\n    this.options = options || _defaults;\n    this.options.renderer = this.options.renderer || new _Renderer<ParserOutput, RendererOutput>();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n    this.renderer.parser = this;\n    this.textRenderer = new _TextRenderer<RendererOutput>();\n  }\n\n  /**\n   * Static Parse Method\n   */\n  static parse<ParserOutput = string, RendererOutput = string>(tokens: Token[], options?: MarkedOptions<ParserOutput, RendererOutput>) {\n    const parser = new _Parser<ParserOutput, RendererOutput>(options);\n    return parser.parse(tokens);\n  }\n\n  /**\n   * Static Parse Inline Method\n   */\n  static parseInline<ParserOutput = string, RendererOutput = string>(tokens: Token[], options?: MarkedOptions<ParserOutput, RendererOutput>) {\n    const parser = new _Parser<ParserOutput, RendererOutput>(options);\n    return parser.parseInline(tokens);\n  }\n\n  /**\n   * Parse Loop\n   */\n  parse(tokens: Token[], top = true): ParserOutput {\n    let out = '';\n\n    for (let i = 0; i < tokens.length; i++) {\n      const anyToken = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions?.renderers?.[anyToken.type]) {\n        const genericToken = anyToken as Tokens.Generic;\n        const ret = this.options.extensions.renderers[genericToken.type].call({ parser: this }, genericToken);\n        if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(genericToken.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      const token = anyToken as MarkedToken;\n\n      switch (token.type) {\n        case 'space': {\n          out += this.renderer.space(token);\n          continue;\n        }\n        case 'hr': {\n          out += this.renderer.hr(token);\n          continue;\n        }\n        case 'heading': {\n          out += this.renderer.heading(token);\n          continue;\n        }\n        case 'code': {\n          out += this.renderer.code(token);\n          continue;\n        }\n        case 'table': {\n          out += this.renderer.table(token);\n          continue;\n        }\n        case 'blockquote': {\n          out += this.renderer.blockquote(token);\n          continue;\n        }\n        case 'list': {\n          out += this.renderer.list(token);\n          continue;\n        }\n        case 'html': {\n          out += this.renderer.html(token);\n          continue;\n        }\n        case 'paragraph': {\n          out += this.renderer.paragraph(token);\n          continue;\n        }\n        case 'text': {\n          let textToken = token;\n          let body = this.renderer.text(textToken) as string;\n          while (i + 1 < tokens.length && tokens[i + 1].type === 'text') {\n            textToken = tokens[++i] as Tokens.Text;\n            body += ('\\n' + this.renderer.text(textToken));\n          }\n          if (top) {\n            out += this.renderer.paragraph({\n              type: 'paragraph',\n              raw: body,\n              text: body,\n              tokens: [{ type: 'text', raw: body, text: body, escaped: true }],\n            });\n          } else {\n            out += body;\n          }\n          continue;\n        }\n\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return '' as ParserOutput;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n\n    return out as ParserOutput;\n  }\n\n  /**\n   * Parse Inline Tokens\n   */\n  parseInline(tokens: Token[], renderer: _Renderer<ParserOutput, RendererOutput> | _TextRenderer<RendererOutput> = this.renderer): ParserOutput {\n    let out = '';\n\n    for (let i = 0; i < tokens.length; i++) {\n      const anyToken = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions?.renderers?.[anyToken.type]) {\n        const ret = this.options.extensions.renderers[anyToken.type].call({ parser: this }, anyToken);\n        if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(anyToken.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      const token = anyToken as MarkedToken;\n\n      switch (token.type) {\n        case 'escape': {\n          out += renderer.text(token);\n          break;\n        }\n        case 'html': {\n          out += renderer.html(token);\n          break;\n        }\n        case 'link': {\n          out += renderer.link(token);\n          break;\n        }\n        case 'image': {\n          out += renderer.image(token);\n          break;\n        }\n        case 'strong': {\n          out += renderer.strong(token);\n          break;\n        }\n        case 'em': {\n          out += renderer.em(token);\n          break;\n        }\n        case 'codespan': {\n          out += renderer.codespan(token);\n          break;\n        }\n        case 'br': {\n          out += renderer.br(token);\n          break;\n        }\n        case 'del': {\n          out += renderer.del(token);\n          break;\n        }\n        case 'text': {\n          out += renderer.text(token);\n          break;\n        }\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return '' as ParserOutput;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n    return out as ParserOutput;\n  }\n}\n", "import { _defaults } from './defaults.ts';\nimport { _Lexer } from './Lexer.ts';\nimport { _Parser } from './Parser.ts';\nimport type { MarkedOptions } from './MarkedOptions.ts';\nimport type { Token, TokensList } from './Tokens.ts';\n\nexport class _Hooks<ParserOutput = string, RendererOutput = string> {\n  options: MarkedOptions<ParserOutput, RendererOutput>;\n  block?: boolean;\n\n  constructor(options?: MarkedOptions<ParserOutput, RendererOutput>) {\n    this.options = options || _defaults;\n  }\n\n  static passThroughHooks = new Set([\n    'preprocess',\n    'postprocess',\n    'processAllTokens',\n  ]);\n\n  /**\n   * Process markdown before marked\n   */\n  preprocess(markdown: string) {\n    return markdown;\n  }\n\n  /**\n   * Process HTML after marked is finished\n   */\n  postprocess(html: ParserOutput) {\n    return html;\n  }\n\n  /**\n   * Process all tokens before walk tokens\n   */\n  processAllTokens(tokens: Token[] | TokensList) {\n    return tokens;\n  }\n\n  /**\n   * Provide function to tokenize markdown\n   */\n  provideLexer() {\n    return this.block ? _Lexer.lex : _Lexer.lexInline;\n  }\n\n  /**\n   * Provide function to parse tokens\n   */\n  provideParser() {\n    return this.block ? _Parser.parse<ParserOutput, RendererOutput> : _Parser.parseInline<ParserOutput, RendererOutput>;\n  }\n}\n", "import { _getDefaults } from './defaults.ts';\nimport { _Lexer } from './Lexer.ts';\nimport { _Parser } from './Parser.ts';\nimport { _Hooks } from './Hooks.ts';\nimport { _Renderer } from './Renderer.ts';\nimport { _Tokenizer } from './Tokenizer.ts';\nimport { _TextRenderer } from './TextRenderer.ts';\nimport { escape } from './helpers.ts';\nimport type { MarkedExtension, MarkedOptions } from './MarkedOptions.ts';\nimport type { Token, Tokens, TokensList } from './Tokens.ts';\n\nexport type MaybePromise = void | Promise<void>;\n\ntype UnknownFunction = (...args: unknown[]) => unknown;\ntype GenericRendererFunction = (...args: unknown[]) => string | false;\n\nexport class Marked<ParserOutput = string, RendererOutput = string> {\n  defaults = _getDefaults<ParserOutput, RendererOutput>();\n  options = this.setOptions;\n\n  parse = this.parseMarkdown(true);\n  parseInline = this.parseMarkdown(false);\n\n  Parser = _Parser<ParserOutput, RendererOutput>;\n  Renderer = _Renderer<ParserOutput, RendererOutput>;\n  TextRenderer = _TextRenderer<RendererOutput>;\n  Lexer = _Lexer;\n  Tokenizer = _Tokenizer<ParserOutput, RendererOutput>;\n  Hooks = _Hooks<ParserOutput, RendererOutput>;\n\n  constructor(...args: MarkedExtension<ParserOutput, RendererOutput>[]) {\n    this.use(...args);\n  }\n\n  /**\n   * Run callback for every token\n   */\n  walkTokens(tokens: Token[] | TokensList, callback: (token: Token) => MaybePromise | MaybePromise[]) {\n    let values: MaybePromise[] = [];\n    for (const token of tokens) {\n      values = values.concat(callback.call(this, token));\n      switch (token.type) {\n        case 'table': {\n          const tableToken = token as Tokens.Table;\n          for (const cell of tableToken.header) {\n            values = values.concat(this.walkTokens(cell.tokens, callback));\n          }\n          for (const row of tableToken.rows) {\n            for (const cell of row) {\n              values = values.concat(this.walkTokens(cell.tokens, callback));\n            }\n          }\n          break;\n        }\n        case 'list': {\n          const listToken = token as Tokens.List;\n          values = values.concat(this.walkTokens(listToken.items, callback));\n          break;\n        }\n        default: {\n          const genericToken = token as Tokens.Generic;\n          if (this.defaults.extensions?.childTokens?.[genericToken.type]) {\n            this.defaults.extensions.childTokens[genericToken.type].forEach((childTokens) => {\n              const tokens = genericToken[childTokens].flat(Infinity) as Token[] | TokensList;\n              values = values.concat(this.walkTokens(tokens, callback));\n            });\n          } else if (genericToken.tokens) {\n            values = values.concat(this.walkTokens(genericToken.tokens, callback));\n          }\n        }\n      }\n    }\n    return values;\n  }\n\n  use(...args: MarkedExtension<ParserOutput, RendererOutput>[]) {\n    const extensions: MarkedOptions<ParserOutput, RendererOutput>['extensions'] = this.defaults.extensions || { renderers: {}, childTokens: {} };\n\n    args.forEach((pack) => {\n      // copy options to new object\n      const opts = { ...pack } as MarkedOptions<ParserOutput, RendererOutput>;\n\n      // set async to true if it was set to true before\n      opts.async = this.defaults.async || opts.async || false;\n\n      // ==-- Parse \"addon\" extensions --== //\n      if (pack.extensions) {\n        pack.extensions.forEach((ext) => {\n          if (!ext.name) {\n            throw new Error('extension name required');\n          }\n          if ('renderer' in ext) { // Renderer extensions\n            const prevRenderer = extensions.renderers[ext.name];\n            if (prevRenderer) {\n              // Replace extension with func to run new extension but fall back if false\n              extensions.renderers[ext.name] = function(...args) {\n                let ret = ext.renderer.apply(this, args);\n                if (ret === false) {\n                  ret = prevRenderer.apply(this, args);\n                }\n                return ret;\n              };\n            } else {\n              extensions.renderers[ext.name] = ext.renderer;\n            }\n          }\n          if ('tokenizer' in ext) { // Tokenizer Extensions\n            if (!ext.level || (ext.level !== 'block' && ext.level !== 'inline')) {\n              throw new Error(\"extension level must be 'block' or 'inline'\");\n            }\n            const extLevel = extensions[ext.level];\n            if (extLevel) {\n              extLevel.unshift(ext.tokenizer);\n            } else {\n              extensions[ext.level] = [ext.tokenizer];\n            }\n            if (ext.start) { // Function to check for start of token\n              if (ext.level === 'block') {\n                if (extensions.startBlock) {\n                  extensions.startBlock.push(ext.start);\n                } else {\n                  extensions.startBlock = [ext.start];\n                }\n              } else if (ext.level === 'inline') {\n                if (extensions.startInline) {\n                  extensions.startInline.push(ext.start);\n                } else {\n                  extensions.startInline = [ext.start];\n                }\n              }\n            }\n          }\n          if ('childTokens' in ext && ext.childTokens) { // Child tokens to be visited by walkTokens\n            extensions.childTokens[ext.name] = ext.childTokens;\n          }\n        });\n        opts.extensions = extensions;\n      }\n\n      // ==-- Parse \"overwrite\" extensions --== //\n      if (pack.renderer) {\n        const renderer = this.defaults.renderer || new _Renderer<ParserOutput, RendererOutput>(this.defaults);\n        for (const prop in pack.renderer) {\n          if (!(prop in renderer)) {\n            throw new Error(`renderer '${prop}' does not exist`);\n          }\n          if (['options', 'parser'].includes(prop)) {\n            // ignore options property\n            continue;\n          }\n          const rendererProp = prop as Exclude<keyof _Renderer<ParserOutput, RendererOutput>, 'options' | 'parser'>;\n          const rendererFunc = pack.renderer[rendererProp] as GenericRendererFunction;\n          const prevRenderer = renderer[rendererProp] as GenericRendererFunction;\n          // Replace renderer with func to run extension, but fall back if false\n          renderer[rendererProp] = (...args: unknown[]) => {\n            let ret = rendererFunc.apply(renderer, args);\n            if (ret === false) {\n              ret = prevRenderer.apply(renderer, args);\n            }\n            return (ret || '') as RendererOutput;\n          };\n        }\n        opts.renderer = renderer;\n      }\n      if (pack.tokenizer) {\n        const tokenizer = this.defaults.tokenizer || new _Tokenizer<ParserOutput, RendererOutput>(this.defaults);\n        for (const prop in pack.tokenizer) {\n          if (!(prop in tokenizer)) {\n            throw new Error(`tokenizer '${prop}' does not exist`);\n          }\n          if (['options', 'rules', 'lexer'].includes(prop)) {\n            // ignore options, rules, and lexer properties\n            continue;\n          }\n          const tokenizerProp = prop as Exclude<keyof _Tokenizer<ParserOutput, RendererOutput>, 'options' | 'rules' | 'lexer'>;\n          const tokenizerFunc = pack.tokenizer[tokenizerProp] as UnknownFunction;\n          const prevTokenizer = tokenizer[tokenizerProp] as UnknownFunction;\n          // Replace tokenizer with func to run extension, but fall back if false\n          // @ts-expect-error cannot type tokenizer function dynamically\n          tokenizer[tokenizerProp] = (...args: unknown[]) => {\n            let ret = tokenizerFunc.apply(tokenizer, args);\n            if (ret === false) {\n              ret = prevTokenizer.apply(tokenizer, args);\n            }\n            return ret;\n          };\n        }\n        opts.tokenizer = tokenizer;\n      }\n\n      // ==-- Parse Hooks extensions --== //\n      if (pack.hooks) {\n        const hooks = this.defaults.hooks || new _Hooks<ParserOutput, RendererOutput>();\n        for (const prop in pack.hooks) {\n          if (!(prop in hooks)) {\n            throw new Error(`hook '${prop}' does not exist`);\n          }\n          if (['options', 'block'].includes(prop)) {\n            // ignore options and block properties\n            continue;\n          }\n          const hooksProp = prop as Exclude<keyof _Hooks<ParserOutput, RendererOutput>, 'options' | 'block'>;\n          const hooksFunc = pack.hooks[hooksProp] as UnknownFunction;\n          const prevHook = hooks[hooksProp] as UnknownFunction;\n          if (_Hooks.passThroughHooks.has(prop)) {\n            // @ts-expect-error cannot type hook function dynamically\n            hooks[hooksProp] = (arg: unknown) => {\n              if (this.defaults.async) {\n                return Promise.resolve(hooksFunc.call(hooks, arg)).then(ret => {\n                  return prevHook.call(hooks, ret);\n                });\n              }\n\n              const ret = hooksFunc.call(hooks, arg);\n              return prevHook.call(hooks, ret);\n            };\n          } else {\n            // @ts-expect-error cannot type hook function dynamically\n            hooks[hooksProp] = (...args: unknown[]) => {\n              let ret = hooksFunc.apply(hooks, args);\n              if (ret === false) {\n                ret = prevHook.apply(hooks, args);\n              }\n              return ret;\n            };\n          }\n        }\n        opts.hooks = hooks;\n      }\n\n      // ==-- Parse WalkTokens extensions --== //\n      if (pack.walkTokens) {\n        const walkTokens = this.defaults.walkTokens;\n        const packWalktokens = pack.walkTokens;\n        opts.walkTokens = function(token) {\n          let values: MaybePromise[] = [];\n          values.push(packWalktokens.call(this, token));\n          if (walkTokens) {\n            values = values.concat(walkTokens.call(this, token));\n          }\n          return values;\n        };\n      }\n\n      this.defaults = { ...this.defaults, ...opts };\n    });\n\n    return this;\n  }\n\n  setOptions(opt: MarkedOptions<ParserOutput, RendererOutput>) {\n    this.defaults = { ...this.defaults, ...opt };\n    return this;\n  }\n\n  lexer(src: string, options?: MarkedOptions<ParserOutput, RendererOutput>) {\n    return _Lexer.lex(src, options ?? this.defaults);\n  }\n\n  parser(tokens: Token[], options?: MarkedOptions<ParserOutput, RendererOutput>) {\n    return _Parser.parse<ParserOutput, RendererOutput>(tokens, options ?? this.defaults);\n  }\n\n  private parseMarkdown(blockType: boolean) {\n    type overloadedParse = {\n      (src: string, options: MarkedOptions<ParserOutput, RendererOutput> & { async: true }): Promise<ParserOutput>;\n      (src: string, options: MarkedOptions<ParserOutput, RendererOutput> & { async: false }): ParserOutput;\n      (src: string, options?: MarkedOptions<ParserOutput, RendererOutput> | null): ParserOutput | Promise<ParserOutput>;\n    };\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const parse: overloadedParse = (src: string, options?: MarkedOptions<ParserOutput, RendererOutput> | null): any => {\n      const origOpt = { ...options };\n      const opt = { ...this.defaults, ...origOpt };\n\n      const throwError = this.onError(!!opt.silent, !!opt.async);\n\n      // throw error if an extension set async to true but parse was called with async: false\n      if (this.defaults.async === true && origOpt.async === false) {\n        return throwError(new Error('marked(): The async option was set to true by an extension. Remove async: false from the parse options object to return a Promise.'));\n      }\n\n      // throw error in case of non string input\n      if (typeof src === 'undefined' || src === null) {\n        return throwError(new Error('marked(): input parameter is undefined or null'));\n      }\n      if (typeof src !== 'string') {\n        return throwError(new Error('marked(): input parameter is of type '\n          + Object.prototype.toString.call(src) + ', string expected'));\n      }\n\n      if (opt.hooks) {\n        opt.hooks.options = opt;\n        opt.hooks.block = blockType;\n      }\n\n      const lexer = opt.hooks ? opt.hooks.provideLexer() : (blockType ? _Lexer.lex : _Lexer.lexInline);\n      const parser = opt.hooks ? opt.hooks.provideParser() : (blockType ? _Parser.parse : _Parser.parseInline);\n\n      if (opt.async) {\n        return Promise.resolve(opt.hooks ? opt.hooks.preprocess(src) : src)\n          .then(src => lexer(src, opt))\n          .then(tokens => opt.hooks ? opt.hooks.processAllTokens(tokens) : tokens)\n          .then(tokens => opt.walkTokens ? Promise.all(this.walkTokens(tokens, opt.walkTokens)).then(() => tokens) : tokens)\n          .then(tokens => parser(tokens, opt))\n          .then(html => opt.hooks ? opt.hooks.postprocess(html) : html)\n          .catch(throwError);\n      }\n\n      try {\n        if (opt.hooks) {\n          src = opt.hooks.preprocess(src) as string;\n        }\n        let tokens = lexer(src, opt);\n        if (opt.hooks) {\n          tokens = opt.hooks.processAllTokens(tokens);\n        }\n        if (opt.walkTokens) {\n          this.walkTokens(tokens, opt.walkTokens);\n        }\n        let html = parser(tokens, opt);\n        if (opt.hooks) {\n          html = opt.hooks.postprocess(html);\n        }\n        return html;\n      } catch(e) {\n        return throwError(e as Error);\n      }\n    };\n\n    return parse;\n  }\n\n  private onError(silent: boolean, async: boolean) {\n    return (e: Error): string | Promise<string> => {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if (silent) {\n        const msg = '<p>An error occurred:</p><pre>'\n          + escape(e.message + '', true)\n          + '</pre>';\n        if (async) {\n          return Promise.resolve(msg);\n        }\n        return msg;\n      }\n\n      if (async) {\n        return Promise.reject(e);\n      }\n      throw e;\n    };\n  }\n}\n", "import { _Lexer } from './Lexer.ts';\nimport { _Parser } from './Parser.ts';\nimport { _Tokenizer } from './Tokenizer.ts';\nimport { _Renderer } from './Renderer.ts';\nimport { _TextRenderer } from './TextRenderer.ts';\nimport { _Hooks } from './Hooks.ts';\nimport { Marked } from './Instance.ts';\nimport {\n  _getDefaults,\n  changeDefaults,\n  _defaults,\n} from './defaults.ts';\nimport type { MarkedExtension, MarkedOptions } from './MarkedOptions.ts';\nimport type { Token, TokensList } from './Tokens.ts';\nimport type { MaybePromise } from './Instance.ts';\n\nconst markedInstance = new Marked();\n\n/**\n * Compiles markdown to HTML asynchronously.\n *\n * @param src String of markdown source to be compiled\n * @param options Hash of options, having async: true\n * @return Promise of string of compiled HTML\n */\nexport function marked(src: string, options: MarkedOptions & { async: true }): Promise<string>;\n\n/**\n * Compiles markdown to HTML.\n *\n * @param src String of markdown source to be compiled\n * @param options Optional hash of options\n * @return String of compiled HTML. Will be a Promise of string if async is set to true by any extensions.\n */\nexport function marked(src: string, options: MarkedOptions & { async: false }): string;\nexport function marked(src: string, options: MarkedOptions & { async: true }): Promise<string>;\nexport function marked(src: string, options?: MarkedOptions | null): string | Promise<string>;\nexport function marked(src: string, opt?: MarkedOptions | null): string | Promise<string> {\n  return markedInstance.parse(src, opt);\n}\n\n/**\n * Sets the default options.\n *\n * @param options Hash of options\n */\nmarked.options =\nmarked.setOptions = function(options: MarkedOptions) {\n  markedInstance.setOptions(options);\n  marked.defaults = markedInstance.defaults;\n  changeDefaults(marked.defaults);\n  return marked;\n};\n\n/**\n * Gets the original marked default options.\n */\nmarked.getDefaults = _getDefaults;\n\nmarked.defaults = _defaults;\n\n/**\n * Use Extension\n */\n\nmarked.use = function(...args: MarkedExtension[]) {\n  markedInstance.use(...args);\n  marked.defaults = markedInstance.defaults;\n  changeDefaults(marked.defaults);\n  return marked;\n};\n\n/**\n * Run callback for every token\n */\n\nmarked.walkTokens = function(tokens: Token[] | TokensList, callback: (token: Token) => MaybePromise | MaybePromise[]) {\n  return markedInstance.walkTokens(tokens, callback);\n};\n\n/**\n * Compiles markdown to HTML without enclosing `p` tag.\n *\n * @param src String of markdown source to be compiled\n * @param options Hash of options\n * @return String of compiled HTML\n */\nmarked.parseInline = markedInstance.parseInline;\n\n/**\n * Expose\n */\nmarked.Parser = _Parser;\nmarked.parser = _Parser.parse;\nmarked.Renderer = _Renderer;\nmarked.TextRenderer = _TextRenderer;\nmarked.Lexer = _Lexer;\nmarked.lexer = _Lexer.lex;\nmarked.Tokenizer = _Tokenizer;\nmarked.Hooks = _Hooks;\nmarked.parse = marked;\n\nexport const options = marked.options;\nexport const setOptions = marked.setOptions;\nexport const use = marked.use;\nexport const walkTokens = marked.walkTokens;\nexport const parseInline = marked.parseInline;\nexport const parse = marked;\nexport const parser = _Parser.parse;\nexport const lexer = _Lexer.lex;\nexport { _defaults as defaults, _getDefaults as getDefaults } from './defaults.ts';\nexport { _Lexer as Lexer } from './Lexer.ts';\nexport { _Parser as Parser } from './Parser.ts';\nexport { _Tokenizer as Tokenizer } from './Tokenizer.ts';\nexport { _Renderer as Renderer } from './Renderer.ts';\nexport { _TextRenderer as TextRenderer } from './TextRenderer.ts';\nexport { _Hooks as Hooks } from './Hooks.ts';\nexport { Marked } from './Instance.ts';\nexport type * from './MarkedOptions.ts';\nexport type * from './Tokens.ts';\n", "/**\n * cssfilter\n *\n * @author \u8001\u96F7<leizongmin@gmail.com>\n */\n\nfunction getDefaultWhiteList () {\n  // \u767D\u540D\u5355\u503C\u8BF4\u660E\uFF1A\n  // true: \u5141\u8BB8\u8BE5\u5C5E\u6027\n  // Function: function (val) { } \u8FD4\u56DEtrue\u8868\u793A\u5141\u8BB8\u8BE5\u5C5E\u6027\uFF0C\u5176\u4ED6\u503C\u5747\u8868\u793A\u4E0D\u5141\u8BB8\n  // RegExp: regexp.test(val) \u8FD4\u56DEtrue\u8868\u793A\u5141\u8BB8\u8BE5\u5C5E\u6027\uFF0C\u5176\u4ED6\u503C\u5747\u8868\u793A\u4E0D\u5141\u8BB8\n  // \u9664\u4E0A\u9762\u5217\u51FA\u7684\u503C\u5916\u5747\u8868\u793A\u4E0D\u5141\u8BB8\n  var whiteList = {};\n\n  whiteList['align-content'] = false; // default: auto\n  whiteList['align-items'] = false; // default: auto\n  whiteList['align-self'] = false; // default: auto\n  whiteList['alignment-adjust'] = false; // default: auto\n  whiteList['alignment-baseline'] = false; // default: baseline\n  whiteList['all'] = false; // default: depending on individual properties\n  whiteList['anchor-point'] = false; // default: none\n  whiteList['animation'] = false; // default: depending on individual properties\n  whiteList['animation-delay'] = false; // default: 0\n  whiteList['animation-direction'] = false; // default: normal\n  whiteList['animation-duration'] = false; // default: 0\n  whiteList['animation-fill-mode'] = false; // default: none\n  whiteList['animation-iteration-count'] = false; // default: 1\n  whiteList['animation-name'] = false; // default: none\n  whiteList['animation-play-state'] = false; // default: running\n  whiteList['animation-timing-function'] = false; // default: ease\n  whiteList['azimuth'] = false; // default: center\n  whiteList['backface-visibility'] = false; // default: visible\n  whiteList['background'] = true; // default: depending on individual properties\n  whiteList['background-attachment'] = true; // default: scroll\n  whiteList['background-clip'] = true; // default: border-box\n  whiteList['background-color'] = true; // default: transparent\n  whiteList['background-image'] = true; // default: none\n  whiteList['background-origin'] = true; // default: padding-box\n  whiteList['background-position'] = true; // default: 0% 0%\n  whiteList['background-repeat'] = true; // default: repeat\n  whiteList['background-size'] = true; // default: auto\n  whiteList['baseline-shift'] = false; // default: baseline\n  whiteList['binding'] = false; // default: none\n  whiteList['bleed'] = false; // default: 6pt\n  whiteList['bookmark-label'] = false; // default: content()\n  whiteList['bookmark-level'] = false; // default: none\n  whiteList['bookmark-state'] = false; // default: open\n  whiteList['border'] = true; // default: depending on individual properties\n  whiteList['border-bottom'] = true; // default: depending on individual properties\n  whiteList['border-bottom-color'] = true; // default: current color\n  whiteList['border-bottom-left-radius'] = true; // default: 0\n  whiteList['border-bottom-right-radius'] = true; // default: 0\n  whiteList['border-bottom-style'] = true; // default: none\n  whiteList['border-bottom-width'] = true; // default: medium\n  whiteList['border-collapse'] = true; // default: separate\n  whiteList['border-color'] = true; // default: depending on individual properties\n  whiteList['border-image'] = true; // default: none\n  whiteList['border-image-outset'] = true; // default: 0\n  whiteList['border-image-repeat'] = true; // default: stretch\n  whiteList['border-image-slice'] = true; // default: 100%\n  whiteList['border-image-source'] = true; // default: none\n  whiteList['border-image-width'] = true; // default: 1\n  whiteList['border-left'] = true; // default: depending on individual properties\n  whiteList['border-left-color'] = true; // default: current color\n  whiteList['border-left-style'] = true; // default: none\n  whiteList['border-left-width'] = true; // default: medium\n  whiteList['border-radius'] = true; // default: 0\n  whiteList['border-right'] = true; // default: depending on individual properties\n  whiteList['border-right-color'] = true; // default: current color\n  whiteList['border-right-style'] = true; // default: none\n  whiteList['border-right-width'] = true; // default: medium\n  whiteList['border-spacing'] = true; // default: 0\n  whiteList['border-style'] = true; // default: depending on individual properties\n  whiteList['border-top'] = true; // default: depending on individual properties\n  whiteList['border-top-color'] = true; // default: current color\n  whiteList['border-top-left-radius'] = true; // default: 0\n  whiteList['border-top-right-radius'] = true; // default: 0\n  whiteList['border-top-style'] = true; // default: none\n  whiteList['border-top-width'] = true; // default: medium\n  whiteList['border-width'] = true; // default: depending on individual properties\n  whiteList['bottom'] = false; // default: auto\n  whiteList['box-decoration-break'] = true; // default: slice\n  whiteList['box-shadow'] = true; // default: none\n  whiteList['box-sizing'] = true; // default: content-box\n  whiteList['box-snap'] = true; // default: none\n  whiteList['box-suppress'] = true; // default: show\n  whiteList['break-after'] = true; // default: auto\n  whiteList['break-before'] = true; // default: auto\n  whiteList['break-inside'] = true; // default: auto\n  whiteList['caption-side'] = false; // default: top\n  whiteList['chains'] = false; // default: none\n  whiteList['clear'] = true; // default: none\n  whiteList['clip'] = false; // default: auto\n  whiteList['clip-path'] = false; // default: none\n  whiteList['clip-rule'] = false; // default: nonzero\n  whiteList['color'] = true; // default: implementation dependent\n  whiteList['color-interpolation-filters'] = true; // default: auto\n  whiteList['column-count'] = false; // default: auto\n  whiteList['column-fill'] = false; // default: balance\n  whiteList['column-gap'] = false; // default: normal\n  whiteList['column-rule'] = false; // default: depending on individual properties\n  whiteList['column-rule-color'] = false; // default: current color\n  whiteList['column-rule-style'] = false; // default: medium\n  whiteList['column-rule-width'] = false; // default: medium\n  whiteList['column-span'] = false; // default: none\n  whiteList['column-width'] = false; // default: auto\n  whiteList['columns'] = false; // default: depending on individual properties\n  whiteList['contain'] = false; // default: none\n  whiteList['content'] = false; // default: normal\n  whiteList['counter-increment'] = false; // default: none\n  whiteList['counter-reset'] = false; // default: none\n  whiteList['counter-set'] = false; // default: none\n  whiteList['crop'] = false; // default: auto\n  whiteList['cue'] = false; // default: depending on individual properties\n  whiteList['cue-after'] = false; // default: none\n  whiteList['cue-before'] = false; // default: none\n  whiteList['cursor'] = false; // default: auto\n  whiteList['direction'] = false; // default: ltr\n  whiteList['display'] = true; // default: depending on individual properties\n  whiteList['display-inside'] = true; // default: auto\n  whiteList['display-list'] = true; // default: none\n  whiteList['display-outside'] = true; // default: inline-level\n  whiteList['dominant-baseline'] = false; // default: auto\n  whiteList['elevation'] = false; // default: level\n  whiteList['empty-cells'] = false; // default: show\n  whiteList['filter'] = false; // default: none\n  whiteList['flex'] = false; // default: depending on individual properties\n  whiteList['flex-basis'] = false; // default: auto\n  whiteList['flex-direction'] = false; // default: row\n  whiteList['flex-flow'] = false; // default: depending on individual properties\n  whiteList['flex-grow'] = false; // default: 0\n  whiteList['flex-shrink'] = false; // default: 1\n  whiteList['flex-wrap'] = false; // default: nowrap\n  whiteList['float'] = false; // default: none\n  whiteList['float-offset'] = false; // default: 0 0\n  whiteList['flood-color'] = false; // default: black\n  whiteList['flood-opacity'] = false; // default: 1\n  whiteList['flow-from'] = false; // default: none\n  whiteList['flow-into'] = false; // default: none\n  whiteList['font'] = true; // default: depending on individual properties\n  whiteList['font-family'] = true; // default: implementation dependent\n  whiteList['font-feature-settings'] = true; // default: normal\n  whiteList['font-kerning'] = true; // default: auto\n  whiteList['font-language-override'] = true; // default: normal\n  whiteList['font-size'] = true; // default: medium\n  whiteList['font-size-adjust'] = true; // default: none\n  whiteList['font-stretch'] = true; // default: normal\n  whiteList['font-style'] = true; // default: normal\n  whiteList['font-synthesis'] = true; // default: weight style\n  whiteList['font-variant'] = true; // default: normal\n  whiteList['font-variant-alternates'] = true; // default: normal\n  whiteList['font-variant-caps'] = true; // default: normal\n  whiteList['font-variant-east-asian'] = true; // default: normal\n  whiteList['font-variant-ligatures'] = true; // default: normal\n  whiteList['font-variant-numeric'] = true; // default: normal\n  whiteList['font-variant-position'] = true; // default: normal\n  whiteList['font-weight'] = true; // default: normal\n  whiteList['grid'] = false; // default: depending on individual properties\n  whiteList['grid-area'] = false; // default: depending on individual properties\n  whiteList['grid-auto-columns'] = false; // default: auto\n  whiteList['grid-auto-flow'] = false; // default: none\n  whiteList['grid-auto-rows'] = false; // default: auto\n  whiteList['grid-column'] = false; // default: depending on individual properties\n  whiteList['grid-column-end'] = false; // default: auto\n  whiteList['grid-column-start'] = false; // default: auto\n  whiteList['grid-row'] = false; // default: depending on individual properties\n  whiteList['grid-row-end'] = false; // default: auto\n  whiteList['grid-row-start'] = false; // default: auto\n  whiteList['grid-template'] = false; // default: depending on individual properties\n  whiteList['grid-template-areas'] = false; // default: none\n  whiteList['grid-template-columns'] = false; // default: none\n  whiteList['grid-template-rows'] = false; // default: none\n  whiteList['hanging-punctuation'] = false; // default: none\n  whiteList['height'] = true; // default: auto\n  whiteList['hyphens'] = false; // default: manual\n  whiteList['icon'] = false; // default: auto\n  whiteList['image-orientation'] = false; // default: auto\n  whiteList['image-resolution'] = false; // default: normal\n  whiteList['ime-mode'] = false; // default: auto\n  whiteList['initial-letters'] = false; // default: normal\n  whiteList['inline-box-align'] = false; // default: last\n  whiteList['justify-content'] = false; // default: auto\n  whiteList['justify-items'] = false; // default: auto\n  whiteList['justify-self'] = false; // default: auto\n  whiteList['left'] = false; // default: auto\n  whiteList['letter-spacing'] = true; // default: normal\n  whiteList['lighting-color'] = true; // default: white\n  whiteList['line-box-contain'] = false; // default: block inline replaced\n  whiteList['line-break'] = false; // default: auto\n  whiteList['line-grid'] = false; // default: match-parent\n  whiteList['line-height'] = false; // default: normal\n  whiteList['line-snap'] = false; // default: none\n  whiteList['line-stacking'] = false; // default: depending on individual properties\n  whiteList['line-stacking-ruby'] = false; // default: exclude-ruby\n  whiteList['line-stacking-shift'] = false; // default: consider-shifts\n  whiteList['line-stacking-strategy'] = false; // default: inline-line-height\n  whiteList['list-style'] = true; // default: depending on individual properties\n  whiteList['list-style-image'] = true; // default: none\n  whiteList['list-style-position'] = true; // default: outside\n  whiteList['list-style-type'] = true; // default: disc\n  whiteList['margin'] = true; // default: depending on individual properties\n  whiteList['margin-bottom'] = true; // default: 0\n  whiteList['margin-left'] = true; // default: 0\n  whiteList['margin-right'] = true; // default: 0\n  whiteList['margin-top'] = true; // default: 0\n  whiteList['marker-offset'] = false; // default: auto\n  whiteList['marker-side'] = false; // default: list-item\n  whiteList['marks'] = false; // default: none\n  whiteList['mask'] = false; // default: border-box\n  whiteList['mask-box'] = false; // default: see individual properties\n  whiteList['mask-box-outset'] = false; // default: 0\n  whiteList['mask-box-repeat'] = false; // default: stretch\n  whiteList['mask-box-slice'] = false; // default: 0 fill\n  whiteList['mask-box-source'] = false; // default: none\n  whiteList['mask-box-width'] = false; // default: auto\n  whiteList['mask-clip'] = false; // default: border-box\n  whiteList['mask-image'] = false; // default: none\n  whiteList['mask-origin'] = false; // default: border-box\n  whiteList['mask-position'] = false; // default: center\n  whiteList['mask-repeat'] = false; // default: no-repeat\n  whiteList['mask-size'] = false; // default: border-box\n  whiteList['mask-source-type'] = false; // default: auto\n  whiteList['mask-type'] = false; // default: luminance\n  whiteList['max-height'] = true; // default: none\n  whiteList['max-lines'] = false; // default: none\n  whiteList['max-width'] = true; // default: none\n  whiteList['min-height'] = true; // default: 0\n  whiteList['min-width'] = true; // default: 0\n  whiteList['move-to'] = false; // default: normal\n  whiteList['nav-down'] = false; // default: auto\n  whiteList['nav-index'] = false; // default: auto\n  whiteList['nav-left'] = false; // default: auto\n  whiteList['nav-right'] = false; // default: auto\n  whiteList['nav-up'] = false; // default: auto\n  whiteList['object-fit'] = false; // default: fill\n  whiteList['object-position'] = false; // default: 50% 50%\n  whiteList['opacity'] = false; // default: 1\n  whiteList['order'] = false; // default: 0\n  whiteList['orphans'] = false; // default: 2\n  whiteList['outline'] = false; // default: depending on individual properties\n  whiteList['outline-color'] = false; // default: invert\n  whiteList['outline-offset'] = false; // default: 0\n  whiteList['outline-style'] = false; // default: none\n  whiteList['outline-width'] = false; // default: medium\n  whiteList['overflow'] = false; // default: depending on individual properties\n  whiteList['overflow-wrap'] = false; // default: normal\n  whiteList['overflow-x'] = false; // default: visible\n  whiteList['overflow-y'] = false; // default: visible\n  whiteList['padding'] = true; // default: depending on individual properties\n  whiteList['padding-bottom'] = true; // default: 0\n  whiteList['padding-left'] = true; // default: 0\n  whiteList['padding-right'] = true; // default: 0\n  whiteList['padding-top'] = true; // default: 0\n  whiteList['page'] = false; // default: auto\n  whiteList['page-break-after'] = false; // default: auto\n  whiteList['page-break-before'] = false; // default: auto\n  whiteList['page-break-inside'] = false; // default: auto\n  whiteList['page-policy'] = false; // default: start\n  whiteList['pause'] = false; // default: implementation dependent\n  whiteList['pause-after'] = false; // default: implementation dependent\n  whiteList['pause-before'] = false; // default: implementation dependent\n  whiteList['perspective'] = false; // default: none\n  whiteList['perspective-origin'] = false; // default: 50% 50%\n  whiteList['pitch'] = false; // default: medium\n  whiteList['pitch-range'] = false; // default: 50\n  whiteList['play-during'] = false; // default: auto\n  whiteList['position'] = false; // default: static\n  whiteList['presentation-level'] = false; // default: 0\n  whiteList['quotes'] = false; // default: text\n  whiteList['region-fragment'] = false; // default: auto\n  whiteList['resize'] = false; // default: none\n  whiteList['rest'] = false; // default: depending on individual properties\n  whiteList['rest-after'] = false; // default: none\n  whiteList['rest-before'] = false; // default: none\n  whiteList['richness'] = false; // default: 50\n  whiteList['right'] = false; // default: auto\n  whiteList['rotation'] = false; // default: 0\n  whiteList['rotation-point'] = false; // default: 50% 50%\n  whiteList['ruby-align'] = false; // default: auto\n  whiteList['ruby-merge'] = false; // default: separate\n  whiteList['ruby-position'] = false; // default: before\n  whiteList['shape-image-threshold'] = false; // default: 0.0\n  whiteList['shape-outside'] = false; // default: none\n  whiteList['shape-margin'] = false; // default: 0\n  whiteList['size'] = false; // default: auto\n  whiteList['speak'] = false; // default: auto\n  whiteList['speak-as'] = false; // default: normal\n  whiteList['speak-header'] = false; // default: once\n  whiteList['speak-numeral'] = false; // default: continuous\n  whiteList['speak-punctuation'] = false; // default: none\n  whiteList['speech-rate'] = false; // default: medium\n  whiteList['stress'] = false; // default: 50\n  whiteList['string-set'] = false; // default: none\n  whiteList['tab-size'] = false; // default: 8\n  whiteList['table-layout'] = false; // default: auto\n  whiteList['text-align'] = true; // default: start\n  whiteList['text-align-last'] = true; // default: auto\n  whiteList['text-combine-upright'] = true; // default: none\n  whiteList['text-decoration'] = true; // default: none\n  whiteList['text-decoration-color'] = true; // default: currentColor\n  whiteList['text-decoration-line'] = true; // default: none\n  whiteList['text-decoration-skip'] = true; // default: objects\n  whiteList['text-decoration-style'] = true; // default: solid\n  whiteList['text-emphasis'] = true; // default: depending on individual properties\n  whiteList['text-emphasis-color'] = true; // default: currentColor\n  whiteList['text-emphasis-position'] = true; // default: over right\n  whiteList['text-emphasis-style'] = true; // default: none\n  whiteList['text-height'] = true; // default: auto\n  whiteList['text-indent'] = true; // default: 0\n  whiteList['text-justify'] = true; // default: auto\n  whiteList['text-orientation'] = true; // default: mixed\n  whiteList['text-overflow'] = true; // default: clip\n  whiteList['text-shadow'] = true; // default: none\n  whiteList['text-space-collapse'] = true; // default: collapse\n  whiteList['text-transform'] = true; // default: none\n  whiteList['text-underline-position'] = true; // default: auto\n  whiteList['text-wrap'] = true; // default: normal\n  whiteList['top'] = false; // default: auto\n  whiteList['transform'] = false; // default: none\n  whiteList['transform-origin'] = false; // default: 50% 50% 0\n  whiteList['transform-style'] = false; // default: flat\n  whiteList['transition'] = false; // default: depending on individual properties\n  whiteList['transition-delay'] = false; // default: 0s\n  whiteList['transition-duration'] = false; // default: 0s\n  whiteList['transition-property'] = false; // default: all\n  whiteList['transition-timing-function'] = false; // default: ease\n  whiteList['unicode-bidi'] = false; // default: normal\n  whiteList['vertical-align'] = false; // default: baseline\n  whiteList['visibility'] = false; // default: visible\n  whiteList['voice-balance'] = false; // default: center\n  whiteList['voice-duration'] = false; // default: auto\n  whiteList['voice-family'] = false; // default: implementation dependent\n  whiteList['voice-pitch'] = false; // default: medium\n  whiteList['voice-range'] = false; // default: medium\n  whiteList['voice-rate'] = false; // default: normal\n  whiteList['voice-stress'] = false; // default: normal\n  whiteList['voice-volume'] = false; // default: medium\n  whiteList['volume'] = false; // default: medium\n  whiteList['white-space'] = false; // default: normal\n  whiteList['widows'] = false; // default: 2\n  whiteList['width'] = true; // default: auto\n  whiteList['will-change'] = false; // default: auto\n  whiteList['word-break'] = true; // default: normal\n  whiteList['word-spacing'] = true; // default: normal\n  whiteList['word-wrap'] = true; // default: normal\n  whiteList['wrap-flow'] = false; // default: auto\n  whiteList['wrap-through'] = false; // default: wrap\n  whiteList['writing-mode'] = false; // default: horizontal-tb\n  whiteList['z-index'] = false; // default: auto\n\n  return whiteList;\n}\n\n\n/**\n * \u5339\u914D\u5230\u767D\u540D\u5355\u4E0A\u7684\u4E00\u4E2A\u5C5E\u6027\u65F6\n *\n * @param {String} name\n * @param {String} value\n * @param {Object} options\n * @return {String}\n */\nfunction onAttr (name, value, options) {\n  // do nothing\n}\n\n/**\n * \u5339\u914D\u5230\u4E0D\u5728\u767D\u540D\u5355\u4E0A\u7684\u4E00\u4E2A\u5C5E\u6027\u65F6\n *\n * @param {String} name\n * @param {String} value\n * @param {Object} options\n * @return {String}\n */\nfunction onIgnoreAttr (name, value, options) {\n  // do nothing\n}\n\nvar REGEXP_URL_JAVASCRIPT = /javascript\\s*\\:/img;\n\n/**\n * \u8FC7\u6EE4\u5C5E\u6027\u503C\n *\n * @param {String} name\n * @param {String} value\n * @return {String}\n */\nfunction safeAttrValue(name, value) {\n  if (REGEXP_URL_JAVASCRIPT.test(value)) return '';\n  return value;\n}\n\n\nexports.whiteList = getDefaultWhiteList();\nexports.getDefaultWhiteList = getDefaultWhiteList;\nexports.onAttr = onAttr;\nexports.onIgnoreAttr = onIgnoreAttr;\nexports.safeAttrValue = safeAttrValue;\n", "module.exports = {\n  indexOf: function (arr, item) {\n    var i, j;\n    if (Array.prototype.indexOf) {\n      return arr.indexOf(item);\n    }\n    for (i = 0, j = arr.length; i < j; i++) {\n      if (arr[i] === item) {\n        return i;\n      }\n    }\n    return -1;\n  },\n  forEach: function (arr, fn, scope) {\n    var i, j;\n    if (Array.prototype.forEach) {\n      return arr.forEach(fn, scope);\n    }\n    for (i = 0, j = arr.length; i < j; i++) {\n      fn.call(scope, arr[i], i, arr);\n    }\n  },\n  trim: function (str) {\n    if (String.prototype.trim) {\n      return str.trim();\n    }\n    return str.replace(/(^\\s*)|(\\s*$)/g, '');\n  },\n  trimRight: function (str) {\n    if (String.prototype.trimRight) {\n      return str.trimRight();\n    }\n    return str.replace(/(\\s*$)/g, '');\n  }\n};\n", "/**\n * cssfilter\n *\n * @author \u8001\u96F7<leizongmin@gmail.com>\n */\n\nvar _ = require('./util');\n\n\n/**\n * \u89E3\u6790style\n *\n * @param {String} css\n * @param {Function} onAttr \u5904\u7406\u5C5E\u6027\u7684\u51FD\u6570\n *   \u53C2\u6570\u683C\u5F0F\uFF1A function (sourcePosition, position, name, value, source)\n * @return {String}\n */\nfunction parseStyle (css, onAttr) {\n  css = _.trimRight(css);\n  if (css[css.length - 1] !== ';') css += ';';\n  var cssLength = css.length;\n  var isParenthesisOpen = false;\n  var lastPos = 0;\n  var i = 0;\n  var retCSS = '';\n\n  function addNewAttr () {\n    // \u5982\u679C\u6CA1\u6709\u6B63\u5E38\u7684\u95ED\u5408\u5706\u62EC\u53F7\uFF0C\u5219\u76F4\u63A5\u5FFD\u7565\u5F53\u524D\u5C5E\u6027\n    if (!isParenthesisOpen) {\n      var source = _.trim(css.slice(lastPos, i));\n      var j = source.indexOf(':');\n      if (j !== -1) {\n        var name = _.trim(source.slice(0, j));\n        var value = _.trim(source.slice(j + 1));\n        // \u5FC5\u987B\u6709\u5C5E\u6027\u540D\u79F0\n        if (name) {\n          var ret = onAttr(lastPos, retCSS.length, name, value, source);\n          if (ret) retCSS += ret + '; ';\n        }\n      }\n    }\n    lastPos = i + 1;\n  }\n\n  for (; i < cssLength; i++) {\n    var c = css[i];\n    if (c === '/' && css[i + 1] === '*') {\n      // \u5907\u6CE8\u5F00\u59CB\n      var j = css.indexOf('*/', i + 2);\n      // \u5982\u679C\u6CA1\u6709\u6B63\u5E38\u7684\u5907\u6CE8\u7ED3\u675F\uFF0C\u5219\u540E\u9762\u7684\u90E8\u5206\u5168\u90E8\u8DF3\u8FC7\n      if (j === -1) break;\n      // \u76F4\u63A5\u5C06\u5F53\u524D\u4F4D\u7F6E\u8C03\u5230\u5907\u6CE8\u7ED3\u5C3E\uFF0C\u5E76\u4E14\u521D\u59CB\u5316\u72B6\u6001\n      i = j + 1;\n      lastPos = i + 1;\n      isParenthesisOpen = false;\n    } else if (c === '(') {\n      isParenthesisOpen = true;\n    } else if (c === ')') {\n      isParenthesisOpen = false;\n    } else if (c === ';') {\n      if (isParenthesisOpen) {\n        // \u5728\u5706\u62EC\u53F7\u91CC\u9762\uFF0C\u5FFD\u7565\n      } else {\n        addNewAttr();\n      }\n    } else if (c === '\\n') {\n      addNewAttr();\n    }\n  }\n\n  return _.trim(retCSS);\n}\n\nmodule.exports = parseStyle;\n", "/**\n * cssfilter\n *\n * @author \u8001\u96F7<leizongmin@gmail.com>\n */\n\nvar DEFAULT = require('./default');\nvar parseStyle = require('./parser');\nvar _ = require('./util');\n\n\n/**\n * \u8FD4\u56DE\u503C\u662F\u5426\u4E3A\u7A7A\n *\n * @param {Object} obj\n * @return {Boolean}\n */\nfunction isNull (obj) {\n  return (obj === undefined || obj === null);\n}\n\n/**\n * \u6D45\u62F7\u8D1D\u5BF9\u8C61\n *\n * @param {Object} obj\n * @return {Object}\n */\nfunction shallowCopyObject (obj) {\n  var ret = {};\n  for (var i in obj) {\n    ret[i] = obj[i];\n  }\n  return ret;\n}\n\n/**\n * \u521B\u5EFACSS\u8FC7\u6EE4\u5668\n *\n * @param {Object} options\n *   - {Object} whiteList\n *   - {Function} onAttr\n *   - {Function} onIgnoreAttr\n *   - {Function} safeAttrValue\n */\nfunction FilterCSS (options) {\n  options = shallowCopyObject(options || {});\n  options.whiteList = options.whiteList || DEFAULT.whiteList;\n  options.onAttr = options.onAttr || DEFAULT.onAttr;\n  options.onIgnoreAttr = options.onIgnoreAttr || DEFAULT.onIgnoreAttr;\n  options.safeAttrValue = options.safeAttrValue || DEFAULT.safeAttrValue;\n  this.options = options;\n}\n\nFilterCSS.prototype.process = function (css) {\n  // \u517C\u5BB9\u5404\u79CD\u5947\u8469\u8F93\u5165\n  css = css || '';\n  css = css.toString();\n  if (!css) return '';\n\n  var me = this;\n  var options = me.options;\n  var whiteList = options.whiteList;\n  var onAttr = options.onAttr;\n  var onIgnoreAttr = options.onIgnoreAttr;\n  var safeAttrValue = options.safeAttrValue;\n\n  var retCSS = parseStyle(css, function (sourcePosition, position, name, value, source) {\n\n    var check = whiteList[name];\n    var isWhite = false;\n    if (check === true) isWhite = check;\n    else if (typeof check === 'function') isWhite = check(value);\n    else if (check instanceof RegExp) isWhite = check.test(value);\n    if (isWhite !== true) isWhite = false;\n\n    // \u5982\u679C\u8FC7\u6EE4\u540E value \u4E3A\u7A7A\u5219\u76F4\u63A5\u5FFD\u7565\n    value = safeAttrValue(name, value);\n    if (!value) return;\n\n    var opts = {\n      position: position,\n      sourcePosition: sourcePosition,\n      source: source,\n      isWhite: isWhite\n    };\n\n    if (isWhite) {\n\n      var ret = onAttr(name, value, opts);\n      if (isNull(ret)) {\n        return name + ':' + value;\n      } else {\n        return ret;\n      }\n\n    } else {\n\n      var ret = onIgnoreAttr(name, value, opts);\n      if (!isNull(ret)) {\n        return ret;\n      }\n\n    }\n  });\n\n  return retCSS;\n};\n\n\nmodule.exports = FilterCSS;\n", "/**\n * cssfilter\n *\n * @author \u8001\u96F7<leizongmin@gmail.com>\n */\n\nvar DEFAULT = require('./default');\nvar FilterCSS = require('./css');\n\n\n/**\n * XSS\u8FC7\u6EE4\n *\n * @param {String} css \u8981\u8FC7\u6EE4\u7684CSS\u4EE3\u7801\n * @param {Object} options \u9009\u9879\uFF1AwhiteList, onAttr, onIgnoreAttr\n * @return {String}\n */\nfunction filterCSS (html, options) {\n  var xss = new FilterCSS(options);\n  return xss.process(html);\n}\n\n\n// \u8F93\u51FA\nexports = module.exports = filterCSS;\nexports.FilterCSS = FilterCSS;\nfor (var i in DEFAULT) exports[i] = DEFAULT[i];\n\n// \u5728\u6D4F\u89C8\u5668\u7AEF\u4F7F\u7528\nif (typeof window !== 'undefined') {\n  window.filterCSS = module.exports;\n}\n", "module.exports = {\n  indexOf: function (arr, item) {\n    var i, j;\n    if (Array.prototype.indexOf) {\n      return arr.indexOf(item);\n    }\n    for (i = 0, j = arr.length; i < j; i++) {\n      if (arr[i] === item) {\n        return i;\n      }\n    }\n    return -1;\n  },\n  forEach: function (arr, fn, scope) {\n    var i, j;\n    if (Array.prototype.forEach) {\n      return arr.forEach(fn, scope);\n    }\n    for (i = 0, j = arr.length; i < j; i++) {\n      fn.call(scope, arr[i], i, arr);\n    }\n  },\n  trim: function (str) {\n    if (String.prototype.trim) {\n      return str.trim();\n    }\n    return str.replace(/(^\\s*)|(\\s*$)/g, \"\");\n  },\n  spaceIndex: function (str) {\n    var reg = /\\s|\\n|\\t/;\n    var match = reg.exec(str);\n    return match ? match.index : -1;\n  },\n};\n", "/**\n * default settings\n *\n * @author Zongmin Lei<leizongmin@gmail.com>\n */\n\nvar FilterCSS = require(\"cssfilter\").FilterCSS;\nvar getDefaultCSSWhiteList = require(\"cssfilter\").getDefaultWhiteList;\nvar _ = require(\"./util\");\n\nfunction getDefaultWhiteList() {\n  return {\n    a: [\"target\", \"href\", \"title\"],\n    abbr: [\"title\"],\n    address: [],\n    area: [\"shape\", \"coords\", \"href\", \"alt\"],\n    article: [],\n    aside: [],\n    audio: [\n      \"autoplay\",\n      \"controls\",\n      \"crossorigin\",\n      \"loop\",\n      \"muted\",\n      \"preload\",\n      \"src\",\n    ],\n    b: [],\n    bdi: [\"dir\"],\n    bdo: [\"dir\"],\n    big: [],\n    blockquote: [\"cite\"],\n    br: [],\n    caption: [],\n    center: [],\n    cite: [],\n    code: [],\n    col: [\"align\", \"valign\", \"span\", \"width\"],\n    colgroup: [\"align\", \"valign\", \"span\", \"width\"],\n    dd: [],\n    del: [\"datetime\"],\n    details: [\"open\"],\n    div: [],\n    dl: [],\n    dt: [],\n    em: [],\n    figcaption: [],\n    figure: [],\n    font: [\"color\", \"size\", \"face\"],\n    footer: [],\n    h1: [],\n    h2: [],\n    h3: [],\n    h4: [],\n    h5: [],\n    h6: [],\n    header: [],\n    hr: [],\n    i: [],\n    img: [\"src\", \"alt\", \"title\", \"width\", \"height\", \"loading\"],\n    ins: [\"datetime\"],\n    kbd: [],\n    li: [],\n    mark: [],\n    nav: [],\n    ol: [],\n    p: [],\n    pre: [],\n    s: [],\n    section: [],\n    small: [],\n    span: [],\n    sub: [],\n    summary: [],\n    sup: [],\n    strong: [],\n    strike: [],\n    table: [\"width\", \"border\", \"align\", \"valign\"],\n    tbody: [\"align\", \"valign\"],\n    td: [\"width\", \"rowspan\", \"colspan\", \"align\", \"valign\"],\n    tfoot: [\"align\", \"valign\"],\n    th: [\"width\", \"rowspan\", \"colspan\", \"align\", \"valign\"],\n    thead: [\"align\", \"valign\"],\n    tr: [\"rowspan\", \"align\", \"valign\"],\n    tt: [],\n    u: [],\n    ul: [],\n    video: [\n      \"autoplay\",\n      \"controls\",\n      \"crossorigin\",\n      \"loop\",\n      \"muted\",\n      \"playsinline\",\n      \"poster\",\n      \"preload\",\n      \"src\",\n      \"height\",\n      \"width\",\n    ],\n  };\n}\n\nvar defaultCSSFilter = new FilterCSS();\n\n/**\n * default onTag function\n *\n * @param {String} tag\n * @param {String} html\n * @param {Object} options\n * @return {String}\n */\nfunction onTag(tag, html, options) {\n  // do nothing\n}\n\n/**\n * default onIgnoreTag function\n *\n * @param {String} tag\n * @param {String} html\n * @param {Object} options\n * @return {String}\n */\nfunction onIgnoreTag(tag, html, options) {\n  // do nothing\n}\n\n/**\n * default onTagAttr function\n *\n * @param {String} tag\n * @param {String} name\n * @param {String} value\n * @return {String}\n */\nfunction onTagAttr(tag, name, value) {\n  // do nothing\n}\n\n/**\n * default onIgnoreTagAttr function\n *\n * @param {String} tag\n * @param {String} name\n * @param {String} value\n * @return {String}\n */\nfunction onIgnoreTagAttr(tag, name, value) {\n  // do nothing\n}\n\n/**\n * default escapeHtml function\n *\n * @param {String} html\n */\nfunction escapeHtml(html) {\n  return html.replace(REGEXP_LT, \"&lt;\").replace(REGEXP_GT, \"&gt;\");\n}\n\n/**\n * default safeAttrValue function\n *\n * @param {String} tag\n * @param {String} name\n * @param {String} value\n * @param {Object} cssFilter\n * @return {String}\n */\nfunction safeAttrValue(tag, name, value, cssFilter) {\n  // unescape attribute value firstly\n  value = friendlyAttrValue(value);\n\n  if (name === \"href\" || name === \"src\") {\n    // filter `href` and `src` attribute\n    // only allow the value that starts with `http://` | `https://` | `mailto:` | `/` | `#`\n    value = _.trim(value);\n    if (value === \"#\") return \"#\";\n    if (\n      !(\n        value.substr(0, 7) === \"http://\" ||\n        value.substr(0, 8) === \"https://\" ||\n        value.substr(0, 7) === \"mailto:\" ||\n        value.substr(0, 4) === \"tel:\" ||\n        value.substr(0, 11) === \"data:image/\" ||\n        value.substr(0, 6) === \"ftp://\" ||\n        value.substr(0, 2) === \"./\" ||\n        value.substr(0, 3) === \"../\" ||\n        value[0] === \"#\" ||\n        value[0] === \"/\"\n      )\n    ) {\n      return \"\";\n    }\n  } else if (name === \"background\") {\n    // filter `background` attribute (maybe no use)\n    // `javascript:`\n    REGEXP_DEFAULT_ON_TAG_ATTR_4.lastIndex = 0;\n    if (REGEXP_DEFAULT_ON_TAG_ATTR_4.test(value)) {\n      return \"\";\n    }\n  } else if (name === \"style\") {\n    // `expression()`\n    REGEXP_DEFAULT_ON_TAG_ATTR_7.lastIndex = 0;\n    if (REGEXP_DEFAULT_ON_TAG_ATTR_7.test(value)) {\n      return \"\";\n    }\n    // `url()`\n    REGEXP_DEFAULT_ON_TAG_ATTR_8.lastIndex = 0;\n    if (REGEXP_DEFAULT_ON_TAG_ATTR_8.test(value)) {\n      REGEXP_DEFAULT_ON_TAG_ATTR_4.lastIndex = 0;\n      if (REGEXP_DEFAULT_ON_TAG_ATTR_4.test(value)) {\n        return \"\";\n      }\n    }\n    if (cssFilter !== false) {\n      cssFilter = cssFilter || defaultCSSFilter;\n      value = cssFilter.process(value);\n    }\n  }\n\n  // escape `<>\"` before returns\n  value = escapeAttrValue(value);\n  return value;\n}\n\n// RegExp list\nvar REGEXP_LT = /</g;\nvar REGEXP_GT = />/g;\nvar REGEXP_QUOTE = /\"/g;\nvar REGEXP_QUOTE_2 = /&quot;/g;\nvar REGEXP_ATTR_VALUE_1 = /&#([a-zA-Z0-9]*);?/gim;\nvar REGEXP_ATTR_VALUE_COLON = /&colon;?/gim;\nvar REGEXP_ATTR_VALUE_NEWLINE = /&newline;?/gim;\n// var REGEXP_DEFAULT_ON_TAG_ATTR_3 = /\\/\\*|\\*\\//gm;\nvar REGEXP_DEFAULT_ON_TAG_ATTR_4 =\n  /((j\\s*a\\s*v\\s*a|v\\s*b|l\\s*i\\s*v\\s*e)\\s*s\\s*c\\s*r\\s*i\\s*p\\s*t\\s*|m\\s*o\\s*c\\s*h\\s*a):/gi;\n// var REGEXP_DEFAULT_ON_TAG_ATTR_5 = /^[\\s\"'`]*(d\\s*a\\s*t\\s*a\\s*)\\:/gi;\n// var REGEXP_DEFAULT_ON_TAG_ATTR_6 = /^[\\s\"'`]*(d\\s*a\\s*t\\s*a\\s*)\\:\\s*image\\//gi;\nvar REGEXP_DEFAULT_ON_TAG_ATTR_7 =\n  /e\\s*x\\s*p\\s*r\\s*e\\s*s\\s*s\\s*i\\s*o\\s*n\\s*\\(.*/gi;\nvar REGEXP_DEFAULT_ON_TAG_ATTR_8 = /u\\s*r\\s*l\\s*\\(.*/gi;\n\n/**\n * escape double quote\n *\n * @param {String} str\n * @return {String} str\n */\nfunction escapeQuote(str) {\n  return str.replace(REGEXP_QUOTE, \"&quot;\");\n}\n\n/**\n * unescape double quote\n *\n * @param {String} str\n * @return {String} str\n */\nfunction unescapeQuote(str) {\n  return str.replace(REGEXP_QUOTE_2, '\"');\n}\n\n/**\n * escape html entities\n *\n * @param {String} str\n * @return {String}\n */\nfunction escapeHtmlEntities(str) {\n  return str.replace(REGEXP_ATTR_VALUE_1, function replaceUnicode(str, code) {\n    return code[0] === \"x\" || code[0] === \"X\"\n      ? String.fromCharCode(parseInt(code.substr(1), 16))\n      : String.fromCharCode(parseInt(code, 10));\n  });\n}\n\n/**\n * escape html5 new danger entities\n *\n * @param {String} str\n * @return {String}\n */\nfunction escapeDangerHtml5Entities(str) {\n  return str\n    .replace(REGEXP_ATTR_VALUE_COLON, \":\")\n    .replace(REGEXP_ATTR_VALUE_NEWLINE, \" \");\n}\n\n/**\n * clear nonprintable characters\n *\n * @param {String} str\n * @return {String}\n */\nfunction clearNonPrintableCharacter(str) {\n  var str2 = \"\";\n  for (var i = 0, len = str.length; i < len; i++) {\n    str2 += str.charCodeAt(i) < 32 ? \" \" : str.charAt(i);\n  }\n  return _.trim(str2);\n}\n\n/**\n * get friendly attribute value\n *\n * @param {String} str\n * @return {String}\n */\nfunction friendlyAttrValue(str) {\n  str = unescapeQuote(str);\n  str = escapeHtmlEntities(str);\n  str = escapeDangerHtml5Entities(str);\n  str = clearNonPrintableCharacter(str);\n  return str;\n}\n\n/**\n * unescape attribute value\n *\n * @param {String} str\n * @return {String}\n */\nfunction escapeAttrValue(str) {\n  str = escapeQuote(str);\n  str = escapeHtml(str);\n  return str;\n}\n\n/**\n * `onIgnoreTag` function for removing all the tags that are not in whitelist\n */\nfunction onIgnoreTagStripAll() {\n  return \"\";\n}\n\n/**\n * remove tag body\n * specify a `tags` list, if the tag is not in the `tags` list then process by the specify function (optional)\n *\n * @param {array} tags\n * @param {function} next\n */\nfunction StripTagBody(tags, next) {\n  if (typeof next !== \"function\") {\n    next = function () {};\n  }\n\n  var isRemoveAllTag = !Array.isArray(tags);\n  function isRemoveTag(tag) {\n    if (isRemoveAllTag) return true;\n    return _.indexOf(tags, tag) !== -1;\n  }\n\n  var removeList = [];\n  var posStart = false;\n\n  return {\n    onIgnoreTag: function (tag, html, options) {\n      if (isRemoveTag(tag)) {\n        if (options.isClosing) {\n          var ret = \"[/removed]\";\n          var end = options.position + ret.length;\n          removeList.push([\n            posStart !== false ? posStart : options.position,\n            end,\n          ]);\n          posStart = false;\n          return ret;\n        } else {\n          if (!posStart) {\n            posStart = options.position;\n          }\n          return \"[removed]\";\n        }\n      } else {\n        return next(tag, html, options);\n      }\n    },\n    remove: function (html) {\n      var rethtml = \"\";\n      var lastPos = 0;\n      _.forEach(removeList, function (pos) {\n        rethtml += html.slice(lastPos, pos[0]);\n        lastPos = pos[1];\n      });\n      rethtml += html.slice(lastPos);\n      return rethtml;\n    },\n  };\n}\n\n/**\n * remove html comments\n *\n * @param {String} html\n * @return {String}\n */\nfunction stripCommentTag(html) {\n  var retHtml = \"\";\n  var lastPos = 0;\n  while (lastPos < html.length) {\n    var i = html.indexOf(\"<!--\", lastPos);\n    if (i === -1) {\n      retHtml += html.slice(lastPos);\n      break;\n    }\n    retHtml += html.slice(lastPos, i);\n    var j = html.indexOf(\"-->\", i);\n    if (j === -1) {\n      break;\n    }\n    lastPos = j + 3;\n  }\n  return retHtml;\n}\n\n/**\n * remove invisible characters\n *\n * @param {String} html\n * @return {String}\n */\nfunction stripBlankChar(html) {\n  var chars = html.split(\"\");\n  chars = chars.filter(function (char) {\n    var c = char.charCodeAt(0);\n    if (c === 127) return false;\n    if (c <= 31) {\n      if (c === 10 || c === 13) return true;\n      return false;\n    }\n    return true;\n  });\n  return chars.join(\"\");\n}\n\nexports.whiteList = getDefaultWhiteList();\nexports.getDefaultWhiteList = getDefaultWhiteList;\nexports.onTag = onTag;\nexports.onIgnoreTag = onIgnoreTag;\nexports.onTagAttr = onTagAttr;\nexports.onIgnoreTagAttr = onIgnoreTagAttr;\nexports.safeAttrValue = safeAttrValue;\nexports.escapeHtml = escapeHtml;\nexports.escapeQuote = escapeQuote;\nexports.unescapeQuote = unescapeQuote;\nexports.escapeHtmlEntities = escapeHtmlEntities;\nexports.escapeDangerHtml5Entities = escapeDangerHtml5Entities;\nexports.clearNonPrintableCharacter = clearNonPrintableCharacter;\nexports.friendlyAttrValue = friendlyAttrValue;\nexports.escapeAttrValue = escapeAttrValue;\nexports.onIgnoreTagStripAll = onIgnoreTagStripAll;\nexports.StripTagBody = StripTagBody;\nexports.stripCommentTag = stripCommentTag;\nexports.stripBlankChar = stripBlankChar;\nexports.attributeWrapSign = '\"';\nexports.cssFilter = defaultCSSFilter;\nexports.getDefaultCSSWhiteList = getDefaultCSSWhiteList;\n", "/**\n * Simple HTML Parser\n *\n * @author Zongmin Lei<leizongmin@gmail.com>\n */\n\nvar _ = require(\"./util\");\n\n/**\n * get tag name\n *\n * @param {String} html e.g. '<a hef=\"#\">'\n * @return {String}\n */\nfunction getTagName(html) {\n  var i = _.spaceIndex(html);\n  var tagName;\n  if (i === -1) {\n    tagName = html.slice(1, -1);\n  } else {\n    tagName = html.slice(1, i + 1);\n  }\n  tagName = _.trim(tagName).toLowerCase();\n  if (tagName.slice(0, 1) === \"/\") tagName = tagName.slice(1);\n  if (tagName.slice(-1) === \"/\") tagName = tagName.slice(0, -1);\n  return tagName;\n}\n\n/**\n * is close tag?\n *\n * @param {String} html \u5982\uFF1A'<a hef=\"#\">'\n * @return {Boolean}\n */\nfunction isClosing(html) {\n  return html.slice(0, 2) === \"</\";\n}\n\n/**\n * parse input html and returns processed html\n *\n * @param {String} html\n * @param {Function} onTag e.g. function (sourcePosition, position, tag, html, isClosing)\n * @param {Function} escapeHtml\n * @return {String}\n */\nfunction parseTag(html, onTag, escapeHtml) {\n  \"use strict\";\n\n  var rethtml = \"\";\n  var lastPos = 0;\n  var tagStart = false;\n  var quoteStart = false;\n  var currentPos = 0;\n  var len = html.length;\n  var currentTagName = \"\";\n  var currentHtml = \"\";\n\n  chariterator: for (currentPos = 0; currentPos < len; currentPos++) {\n    var c = html.charAt(currentPos);\n    if (tagStart === false) {\n      if (c === \"<\") {\n        tagStart = currentPos;\n        continue;\n      }\n    } else {\n      if (quoteStart === false) {\n        if (c === \"<\") {\n          rethtml += escapeHtml(html.slice(lastPos, currentPos));\n          tagStart = currentPos;\n          lastPos = currentPos;\n          continue;\n        }\n        if (c === \">\" || currentPos === len - 1) {\n          rethtml += escapeHtml(html.slice(lastPos, tagStart));\n          currentHtml = html.slice(tagStart, currentPos + 1);\n          currentTagName = getTagName(currentHtml);\n          rethtml += onTag(\n            tagStart,\n            rethtml.length,\n            currentTagName,\n            currentHtml,\n            isClosing(currentHtml)\n          );\n          lastPos = currentPos + 1;\n          tagStart = false;\n          continue;\n        }\n        if (c === '\"' || c === \"'\") {\n          var i = 1;\n          var ic = html.charAt(currentPos - i);\n\n          while (ic.trim() === \"\" || ic === \"=\") {\n            if (ic === \"=\") {\n              quoteStart = c;\n              continue chariterator;\n            }\n            ic = html.charAt(currentPos - ++i);\n          }\n        }\n      } else {\n        if (c === quoteStart) {\n          quoteStart = false;\n          continue;\n        }\n      }\n    }\n  }\n  if (lastPos < len) {\n    rethtml += escapeHtml(html.substr(lastPos));\n  }\n\n  return rethtml;\n}\n\nvar REGEXP_ILLEGAL_ATTR_NAME = /[^a-zA-Z0-9\\\\_:.-]/gim;\n\n/**\n * parse input attributes and returns processed attributes\n *\n * @param {String} html e.g. `href=\"#\" target=\"_blank\"`\n * @param {Function} onAttr e.g. `function (name, value)`\n * @return {String}\n */\nfunction parseAttr(html, onAttr) {\n  \"use strict\";\n\n  var lastPos = 0;\n  var lastMarkPos = 0;\n  var retAttrs = [];\n  var tmpName = false;\n  var len = html.length;\n\n  function addAttr(name, value) {\n    name = _.trim(name);\n    name = name.replace(REGEXP_ILLEGAL_ATTR_NAME, \"\").toLowerCase();\n    if (name.length < 1) return;\n    var ret = onAttr(name, value || \"\");\n    if (ret) retAttrs.push(ret);\n  }\n\n  // \u9010\u4E2A\u5206\u6790\u5B57\u7B26\n  for (var i = 0; i < len; i++) {\n    var c = html.charAt(i);\n    var v, j;\n    if (tmpName === false && c === \"=\") {\n      tmpName = html.slice(lastPos, i);\n      lastPos = i + 1;\n      lastMarkPos = html.charAt(lastPos) === '\"' || html.charAt(lastPos) === \"'\" ? lastPos : findNextQuotationMark(html, i + 1);\n      continue;\n    }\n    if (tmpName !== false) {\n      if (\n        i === lastMarkPos\n      ) {\n        j = html.indexOf(c, i + 1);\n        if (j === -1) {\n          break;\n        } else {\n          v = _.trim(html.slice(lastMarkPos + 1, j));\n          addAttr(tmpName, v);\n          tmpName = false;\n          i = j;\n          lastPos = i + 1;\n          continue;\n        }\n      }\n    }\n    if (/\\s|\\n|\\t/.test(c)) {\n      html = html.replace(/\\s|\\n|\\t/g, \" \");\n      if (tmpName === false) {\n        j = findNextEqual(html, i);\n        if (j === -1) {\n          v = _.trim(html.slice(lastPos, i));\n          addAttr(v);\n          tmpName = false;\n          lastPos = i + 1;\n          continue;\n        } else {\n          i = j - 1;\n          continue;\n        }\n      } else {\n        j = findBeforeEqual(html, i - 1);\n        if (j === -1) {\n          v = _.trim(html.slice(lastPos, i));\n          v = stripQuoteWrap(v);\n          addAttr(tmpName, v);\n          tmpName = false;\n          lastPos = i + 1;\n          continue;\n        } else {\n          continue;\n        }\n      }\n    }\n  }\n\n  if (lastPos < html.length) {\n    if (tmpName === false) {\n      addAttr(html.slice(lastPos));\n    } else {\n      addAttr(tmpName, stripQuoteWrap(_.trim(html.slice(lastPos))));\n    }\n  }\n\n  return _.trim(retAttrs.join(\" \"));\n}\n\nfunction findNextEqual(str, i) {\n  for (; i < str.length; i++) {\n    var c = str[i];\n    if (c === \" \") continue;\n    if (c === \"=\") return i;\n    return -1;\n  }\n}\n\nfunction findNextQuotationMark(str, i) {\n  for (; i < str.length; i++) {\n    var c = str[i];\n    if (c === \" \") continue;\n    if (c === \"'\" || c === '\"') return i;\n    return -1;\n  }\n}\n\nfunction findBeforeEqual(str, i) {\n  for (; i > 0; i--) {\n    var c = str[i];\n    if (c === \" \") continue;\n    if (c === \"=\") return i;\n    return -1;\n  }\n}\n\nfunction isQuoteWrapString(text) {\n  if (\n    (text[0] === '\"' && text[text.length - 1] === '\"') ||\n    (text[0] === \"'\" && text[text.length - 1] === \"'\")\n  ) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction stripQuoteWrap(text) {\n  if (isQuoteWrapString(text)) {\n    return text.substr(1, text.length - 2);\n  } else {\n    return text;\n  }\n}\n\nexports.parseTag = parseTag;\nexports.parseAttr = parseAttr;\n", "/**\n * filter xss\n *\n * @author Zongmin Lei<leizongmin@gmail.com>\n */\n\nvar FilterCSS = require(\"cssfilter\").FilterCSS;\nvar DEFAULT = require(\"./default\");\nvar parser = require(\"./parser\");\nvar parseTag = parser.parseTag;\nvar parseAttr = parser.parseAttr;\nvar _ = require(\"./util\");\n\n/**\n * returns `true` if the input value is `undefined` or `null`\n *\n * @param {Object} obj\n * @return {Boolean}\n */\nfunction isNull(obj) {\n  return obj === undefined || obj === null;\n}\n\n/**\n * get attributes for a tag\n *\n * @param {String} html\n * @return {Object}\n *   - {String} html\n *   - {Boolean} closing\n */\nfunction getAttrs(html) {\n  var i = _.spaceIndex(html);\n  if (i === -1) {\n    return {\n      html: \"\",\n      closing: html[html.length - 2] === \"/\",\n    };\n  }\n  html = _.trim(html.slice(i + 1, -1));\n  var isClosing = html[html.length - 1] === \"/\";\n  if (isClosing) html = _.trim(html.slice(0, -1));\n  return {\n    html: html,\n    closing: isClosing,\n  };\n}\n\n/**\n * shallow copy\n *\n * @param {Object} obj\n * @return {Object}\n */\nfunction shallowCopyObject(obj) {\n  var ret = {};\n  for (var i in obj) {\n    ret[i] = obj[i];\n  }\n  return ret;\n}\n\nfunction keysToLowerCase(obj) {\n  var ret = {};\n  for (var i in obj) {\n    if (Array.isArray(obj[i])) {\n      ret[i.toLowerCase()] = obj[i].map(function (item) {\n        return item.toLowerCase();\n      });\n    } else {\n      ret[i.toLowerCase()] = obj[i];\n    }\n  }\n  return ret;\n}\n\n/**\n * FilterXSS class\n *\n * @param {Object} options\n *        whiteList (or allowList), onTag, onTagAttr, onIgnoreTag,\n *        onIgnoreTagAttr, safeAttrValue, escapeHtml\n *        stripIgnoreTagBody, allowCommentTag, stripBlankChar\n *        css{whiteList, onAttr, onIgnoreAttr} `css=false` means don't use `cssfilter`\n */\nfunction FilterXSS(options) {\n  options = shallowCopyObject(options || {});\n\n  if (options.stripIgnoreTag) {\n    if (options.onIgnoreTag) {\n      console.error(\n        'Notes: cannot use these two options \"stripIgnoreTag\" and \"onIgnoreTag\" at the same time'\n      );\n    }\n    options.onIgnoreTag = DEFAULT.onIgnoreTagStripAll;\n  }\n  if (options.whiteList || options.allowList) {\n    options.whiteList = keysToLowerCase(options.whiteList || options.allowList);\n  } else {\n    options.whiteList = DEFAULT.whiteList;\n  }\n\n  this.attributeWrapSign = options.singleQuotedAttributeValue === true ? \"'\" : DEFAULT.attributeWrapSign;\n\n  options.onTag = options.onTag || DEFAULT.onTag;\n  options.onTagAttr = options.onTagAttr || DEFAULT.onTagAttr;\n  options.onIgnoreTag = options.onIgnoreTag || DEFAULT.onIgnoreTag;\n  options.onIgnoreTagAttr = options.onIgnoreTagAttr || DEFAULT.onIgnoreTagAttr;\n  options.safeAttrValue = options.safeAttrValue || DEFAULT.safeAttrValue;\n  options.escapeHtml = options.escapeHtml || DEFAULT.escapeHtml;\n  this.options = options;\n\n  if (options.css === false) {\n    this.cssFilter = false;\n  } else {\n    options.css = options.css || {};\n    this.cssFilter = new FilterCSS(options.css);\n  }\n}\n\n/**\n * start process and returns result\n *\n * @param {String} html\n * @return {String}\n */\nFilterXSS.prototype.process = function (html) {\n  // compatible with the input\n  html = html || \"\";\n  html = html.toString();\n  if (!html) return \"\";\n\n  var me = this;\n  var options = me.options;\n  var whiteList = options.whiteList;\n  var onTag = options.onTag;\n  var onIgnoreTag = options.onIgnoreTag;\n  var onTagAttr = options.onTagAttr;\n  var onIgnoreTagAttr = options.onIgnoreTagAttr;\n  var safeAttrValue = options.safeAttrValue;\n  var escapeHtml = options.escapeHtml;\n  var attributeWrapSign = me.attributeWrapSign;\n  var cssFilter = me.cssFilter;\n\n  // remove invisible characters\n  if (options.stripBlankChar) {\n    html = DEFAULT.stripBlankChar(html);\n  }\n\n  // remove html comments\n  if (!options.allowCommentTag) {\n    html = DEFAULT.stripCommentTag(html);\n  }\n\n  // if enable stripIgnoreTagBody\n  var stripIgnoreTagBody = false;\n  if (options.stripIgnoreTagBody) {\n    stripIgnoreTagBody = DEFAULT.StripTagBody(\n      options.stripIgnoreTagBody,\n      onIgnoreTag\n    );\n    onIgnoreTag = stripIgnoreTagBody.onIgnoreTag;\n  }\n\n  var retHtml = parseTag(\n    html,\n    function (sourcePosition, position, tag, html, isClosing) {\n      var info = {\n        sourcePosition: sourcePosition,\n        position: position,\n        isClosing: isClosing,\n        isWhite: Object.prototype.hasOwnProperty.call(whiteList, tag),\n      };\n\n      // call `onTag()`\n      var ret = onTag(tag, html, info);\n      if (!isNull(ret)) return ret;\n\n      if (info.isWhite) {\n        if (info.isClosing) {\n          return \"</\" + tag + \">\";\n        }\n\n        var attrs = getAttrs(html);\n        var whiteAttrList = whiteList[tag];\n        var attrsHtml = parseAttr(attrs.html, function (name, value) {\n          // call `onTagAttr()`\n          var isWhiteAttr = _.indexOf(whiteAttrList, name) !== -1;\n          var ret = onTagAttr(tag, name, value, isWhiteAttr);\n          if (!isNull(ret)) return ret;\n\n          if (isWhiteAttr) {\n            // call `safeAttrValue()`\n            value = safeAttrValue(tag, name, value, cssFilter);\n            if (value) {\n              return name + '=' + attributeWrapSign + value + attributeWrapSign;\n            } else {\n              return name;\n            }\n          } else {\n            // call `onIgnoreTagAttr()`\n            ret = onIgnoreTagAttr(tag, name, value, isWhiteAttr);\n            if (!isNull(ret)) return ret;\n            return;\n          }\n        });\n\n        // build new tag html\n        html = \"<\" + tag;\n        if (attrsHtml) html += \" \" + attrsHtml;\n        if (attrs.closing) html += \" /\";\n        html += \">\";\n        return html;\n      } else {\n        // call `onIgnoreTag()`\n        ret = onIgnoreTag(tag, html, info);\n        if (!isNull(ret)) return ret;\n        return escapeHtml(html);\n      }\n    },\n    escapeHtml\n  );\n\n  // if enable stripIgnoreTagBody\n  if (stripIgnoreTagBody) {\n    retHtml = stripIgnoreTagBody.remove(retHtml);\n  }\n\n  return retHtml;\n};\n\nmodule.exports = FilterXSS;\n", "/**\n * xss\n *\n * @author Zongmin Lei<leizongmin@gmail.com>\n */\n\nvar DEFAULT = require(\"./default\");\nvar parser = require(\"./parser\");\nvar FilterXSS = require(\"./xss\");\n\n/**\n * filter xss function\n *\n * @param {String} html\n * @param {Object} options { whiteList, onTag, onTagAttr, onIgnoreTag, onIgnoreTagAttr, safeAttrValue, escapeHtml }\n * @return {String}\n */\nfunction filterXSS(html, options) {\n  var xss = new FilterXSS(options);\n  return xss.process(html);\n}\n\nexports = module.exports = filterXSS;\nexports.filterXSS = filterXSS;\nexports.FilterXSS = FilterXSS;\n\n(function () {\n  for (var i in DEFAULT) {\n    exports[i] = DEFAULT[i];\n  }\n  for (var j in parser) {\n    exports[j] = parser[j];\n  }\n})();\n\n// using `xss` on the browser, output `filterXSS` to the globals\nif (typeof window !== \"undefined\") {\n  window.filterXSS = module.exports;\n}\n\n// using `xss` on the WebWorker, output `filterXSS` to the globals\nfunction isWorkerEnv() {\n  return (\n    typeof self !== \"undefined\" &&\n    typeof DedicatedWorkerGlobalScope !== \"undefined\" &&\n    self instanceof DedicatedWorkerGlobalScope\n  );\n}\nif (isWorkerEnv()) {\n  self.filterXSS = module.exports;\n}\n", "// lib.deadlight/core/src/markdown/processor.js\nimport { marked } from 'marked';\nimport { filterXSS } from 'xss';\n\nexport class MarkdownProcessor {\n  constructor(options = {}) {\n    this.options = {\n      gfm: true,\n      breaks: true,\n      headerIds: false,\n      mangle: false,\n      ...options\n    };\n    \n    this.xssOptions = options.xssOptions || {\n      whiteList: {\n        h1: [], h2: [], h3: [], h4: [], h5: [], h6: [],\n        p: [], br: [], hr: [],\n        a: ['href', 'title', 'target', 'rel'],\n        strong: [], em: [], del: [],\n        ul: [], ol: [], li: [],\n        code: ['class'], \n        pre: [],\n        blockquote: [],\n        table: [], thead: [], tbody: [], tr: [], th: [], td: []\n      },\n      stripIgnoreTag: true,\n      stripIgnoreTagBody: ['script']\n    };\n\n    this.setupRenderer();\n  }\n\n  setupRenderer() {\n    marked.setOptions(this.options);\n    \n    this.renderer = new marked.Renderer();\n    \n    this.renderer.code = (code, language) => {\n      const codeString = String(code || '');\n      const lang = language || '';\n      \n      const escapedCode = codeString\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&#39;');\n      \n      return `<pre><code class=\"language-${lang}\">${escapedCode}</code></pre>`;\n    };\n    \n    marked.use({ renderer: this.renderer });\n  }\n\n  render(content) {\n    try {\n      const html = marked(content);\n      return filterXSS(html, this.xssOptions);\n    } catch (error) {\n      console.error('Markdown rendering error:', error);\n      return content;\n    }\n  }\n\n  // New approach: Extract excerpt from markdown, avoiding code blocks entirely\n  extractExcerpt(content, maxLength = 300) {\n    // Check for manual excerpt marker first\n    const moreIndex = content.indexOf('<!--more-->');\n    if (moreIndex !== -1) {\n      return content.substring(0, moreIndex).trim();\n    }\n    \n    // Split content into sections, avoiding code blocks\n    const sections = [];\n    const lines = content.split('\\n');\n    let insideCodeBlock = false;\n    let currentSection = [];\n    \n    for (const line of lines) {\n      if (line.trim().startsWith('```')) {\n        if (insideCodeBlock) {\n          // End of code block - don't include it in excerpt\n          insideCodeBlock = false;\n          // If we have content, save it and stop here\n          if (currentSection.length > 0) {\n            sections.push(currentSection.join('\\n'));\n            break;\n          }\n        } else {\n          // Start of code block - save what we have so far and stop\n          insideCodeBlock = true;\n          if (currentSection.length > 0) {\n            sections.push(currentSection.join('\\n'));\n            break;\n          }\n        }\n      } else if (!insideCodeBlock) {\n        currentSection.push(line);\n      }\n    }\n    \n    // If we didn't hit a code block, add the final section\n    if (currentSection.length > 0 && !insideCodeBlock) {\n      sections.push(currentSection.join('\\n'));\n    }\n    \n    // Now work with the sections to create an appropriate excerpt\n    const fullTextBeforeCodeBlocks = sections.join('\\n').trim();\n    \n    if (!fullTextBeforeCodeBlocks) {\n      return 'Read more...'; // Fallback if content starts with code block\n    }\n    \n    // Now do paragraph-based truncation on the code-block-free content\n    const paragraphs = fullTextBeforeCodeBlocks.split('\\n\\n').filter(p => p.trim());\n    let excerptParagraphs = [];\n    let currentLength = 0;\n    \n    for (const paragraph of paragraphs) {\n      const textLength = paragraph\n        .replace(/#{1,6}\\s/g, '')\n        .replace(/\\*\\*(.+?)\\*\\*/g, '$1')\n        .replace(/\\*(.+?)\\*/g, '$1')\n        .replace(/$$([^$$]+)\\]$[^)]+$/g, '$1')\n        .replace(/`(.+?)`/g, '$1')\n        .trim().length;\n      \n      // Be more generous - allow longer excerpts\n      if (currentLength + textLength > maxLength * 2 && excerptParagraphs.length >= 2) {\n        break;\n      }\n      \n      excerptParagraphs.push(paragraph);\n      currentLength += textLength;\n    }\n    \n    // Ensure we have at least one paragraph\n    if (excerptParagraphs.length === 0 && paragraphs.length > 0) {\n      excerptParagraphs.push(paragraphs[0]);\n    }\n    \n    let excerpt = excerptParagraphs.join('\\n\\n').trim();\n    \n    // Add ellipsis if we truncated\n    if (excerptParagraphs.length < paragraphs.length || content.includes('```')) {\n      excerpt += '\\n\\n...';\n    }\n    \n    return excerpt;\n  }\n\n  hasMore(content, maxLength = 300) {\n    // Always show \"read more\" if there are code blocks\n    if (content.includes('```')) {\n      return true;\n    }\n    \n    if (content.includes('<!--more-->')) {\n      return true;\n    }\n    \n    // Check text length\n    const textLength = content\n      .replace(/#{1,6}\\s/g, '')\n      .replace(/\\*\\*(.+?)\\*\\*/g, '$1')\n      .replace(/\\*(.+?)\\*/g, '$1')\n      .replace(/$$([^$$]+)\\]$[^)]+$/g, '$1')\n      .replace(/`(.+?)`/g, '$1')\n      .replace(/```[\\s\\S]*?```/g, '')\n      .length;\n    \n    return textLength > maxLength * 2;\n  }\n}\n\n// Export singleton for backward compatibility\nexport const defaultProcessor = new MarkdownProcessor();\n\n// Legacy function for easy migration\nexport function renderMarkdown(content) {\n  return defaultProcessor.render(content);\n}", "// src/templates/user/profile.js\nimport { renderTemplate } from '../base.js';\nimport { renderMarkdown } from '../../../../../lib.deadlight/core/src/markdown/processor.js';\n\nexport function renderUserProfile(user, posts, currentUser, config, pagination) {\n  // Create excerpt from content if no excerpt exists\n  function createExcerpt(content, maxLength = 200) {\n    const plainText = content.replace(/[#*`$$$$]/g, '').trim();\n    return plainText.length > maxLength \n      ? plainText.substring(0, maxLength) + '...'\n      : plainText;\n  }\n\n  const pageTitle = user.profile_title || `${user.username}'s Posts`;\n  \n  const content = `\n    <div class=\"user-profile\">\n      <header class=\"profile-header\">\n        <div class=\"profile-info\">\n          <h1>${pageTitle}</h1>\n          <p class=\"username\">@${user.username}</p>\n          ${user.profile_description ? `\n            <div class=\"profile-description\">\n              ${renderMarkdown(user.profile_description)}\n            </div>\n          ` : ''}\n          <div class=\"profile-stats\">\n            <span>${user.post_count} post${user.post_count !== 1 ? 's' : ''}</span>\n            ${user.last_post_date ? `\n              <span>\u2022</span>\n              <span>Last post ${new Date(user.last_post_date).toLocaleDateString()}</span>\n            ` : ''}\n          </div>\n        </div>\n        \n        ${currentUser && currentUser.id === user.id ? `\n          <div class=\"profile-actions\">\n            <a href=\"/admin/add\" class=\"button\">Write Post</a>\n            <a href=\"/user/${user.username}/settings\" class=\"button secondary\">Edit Profile</a>\n          </div>\n        ` : ''}\n      </header>\n\n      <div class=\"posts-section\">\n        <h2>Posts</h2>\n        ${posts && posts.length > 0 ? `\n          <div class=\"post-list\">\n            ${posts.map(post => `\n              <article class=\"post-preview\">\n                <header class=\"post-header\">\n                  <h3><a href=\"/post/${post.slug || post.id}\">${post.title}</a></h3>\n                  <time class=\"post-date\" datetime=\"${post.created_at}\">\n                    ${new Date(post.created_at).toLocaleDateString()}\n                  </time>\n                </header>\n                <div class=\"post-excerpt\">\n                  ${post.excerpt ? renderMarkdown(post.excerpt) : `\n                    <p>${createExcerpt(post.content)}</p>\n                  `}\n                </div>\n                <footer class=\"post-footer\">\n                  <a href=\"/post/${post.slug || post.id}\" class=\"read-more\">Read more \u2192</a>\n                </footer>\n              </article>\n            `).join('')}\n          </div>\n          \n          ${pagination.totalPages > 1 ? `\n            <nav class=\"pagination\">\n              ${pagination.hasPrevious ? `\n                <a href=\"/user/${user.username}?page=${pagination.previousPage}\" class=\"button secondary\">\u2190 Previous</a>\n              ` : ''}\n              \n              <span class=\"page-info\">\n                Page ${pagination.currentPage} of ${pagination.totalPages}\n              </span>\n              \n              ${pagination.hasNext ? `\n                <a href=\"/user/${user.username}?page=${pagination.nextPage}\" class=\"button secondary\">Next \u2192</a>\n              ` : ''}\n            </nav>\n          ` : ''}\n        ` : `\n          <div class=\"empty-state\">\n            <p>${user.username} hasn't posted anything yet.</p>\n            ${currentUser && currentUser.id === user.id ? `\n              <a href=\"/admin/add\" class=\"button\">Write your first post</a>\n            ` : ''}\n          </div>\n        `}\n      </div>\n    </div>\n  `;\n\n  return renderTemplate(pageTitle, content, currentUser, config);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/home/thatch/blog.deadlight/blog.deadlight/.wrangler/tmp/bundle-cv7T01/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/home/thatch/.nvm/versions/node/v24.4.1/lib/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/home/thatch/blog.deadlight/blog.deadlight/.wrangler/tmp/bundle-cv7T01/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/home/thatch/blog.deadlight/blog.deadlight/.wrangler/tmp/bundle-cv7T01/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/home/thatch/blog.deadlight/blog.deadlight/src/index.js\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/home/thatch/.nvm/versions/node/v24.4.1/lib/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/home/thatch/.nvm/versions/node/v24.4.1/lib/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/home/thatch/blog.deadlight/blog.deadlight/src/index.js\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "// src/index.js\nimport { Router } from './routes/index.js';\nimport { styleRoutes } from './routes/styles.js';\nimport { staticRoutes } from './routes/static.js';\nimport { authRoutes } from './routes/auth.js';\nimport { adminRoutes } from './routes/admin.js';\nimport { blogRoutes } from './routes/blog.js';\nimport { inboxRoutes } from './routes/inbox.js';\nimport { userRoutes } from './routes/user.js';\nimport { errorMiddleware } from './middleware/error.js';\nimport { loggingMiddleware } from './middleware/logging.js';\nimport { rateLimitMiddleware, securityHeadersMiddleware } from '../../../lib.deadlight/core/src/security/middleware.js';\n\nconst router = new Router();\n\n// Add middleware in order (error handling should be first to catch all errors)\nrouter.use(errorMiddleware);\nrouter.use(loggingMiddleware);\n\n// Debug log\nconsole.log('Registering routes...');\n\n// Register all routes\n[\n  { name: 'blog', routes: blogRoutes },\n  { name: 'user', routes: userRoutes },\n  { name: 'style', routes: styleRoutes },\n  { name: 'static', routes: staticRoutes },\n  { name: 'auth', routes: authRoutes },\n  { name: 'admin', routes: adminRoutes },\n  { name: 'inbox', routes: inboxRoutes }\n].forEach(({ name, routes }) => {\n  console.log(`Registering ${name} routes:`, Object.keys(routes));\n  Object.entries(routes).forEach(([path, handlers]) => {\n    router.register(path, handlers);\n  });\n});\n\nexport default {\n  async fetch(request, env, ctx) {\n    // Apply security middleware\n    return rateLimitMiddleware(request, env, ctx, () =>\n      securityHeadersMiddleware(request, env, ctx, () =>\n        router.handle(request, env, ctx)\n      )\n    );\n  }\n};", "// src/routes/index.js\nexport class Router {\n  constructor() {\n    this.routes = new Map();\n    this.middlewares = [];\n  }\n  \n  use(middleware) {\n    if (typeof middleware !== 'function') {\n      throw new Error('Middleware must be a function');\n    }\n    this.middlewares.push(middleware);\n    return this;\n  }\n\n  register(path, handlers) {\n    console.log('Registering route:', path);\n    const routePattern = path.replace(/\\/:(\\w+)/g, '/(?<$1>[^/]+)');\n    this.routes.set(routePattern, {\n      pattern: new RegExp(`^${routePattern}$`),\n      handlers\n    });\n  }\n\n  async handle(request, env) {\n    const url = new URL(request.url);\n    const pathname = url.pathname;\n    \n    console.log('Handling request for path:', pathname);\n    console.log('Available routes:', Array.from(this.routes.keys()));\n\n    // Find matching route\n    let matchedRoute = null;\n    let params = {};\n    \n    for (const [_, route] of this.routes) {\n      const match = pathname.match(route.pattern);\n      if (match) {\n        const handler = route.handlers[request.method];\n        if (handler) {\n          matchedRoute = handler;\n          params = match.groups || {};\n          break;\n        }\n      }\n    }\n\n    if (!matchedRoute) {\n      throw new Error('Not Found');\n    }\n\n    // Enhance request with route info\n    request.params = params;\n    request.query = Object.fromEntries(url.searchParams);\n\n    // Create middleware chain\n    const chain = [...this.middlewares];\n    \n    // Build the chain from the inside out\n    let handler = matchedRoute;\n    \n    for (let i = chain.length - 1; i >= 0; i--) {\n      const middleware = chain[i];\n      const nextHandler = handler;\n      handler = async (req, env) => {\n        return await middleware(req, env, async () => {\n          return await nextHandler(req, env);\n        });\n      };\n    }\n\n    // Execute the chain\n    return await handler(request, env);\n  }\n}", "// src/routes/styles.js\n\nconst CACHE_HEADERS = {\n  'Content-Type': 'text/css',\n  'Cache-Control': 'public, max-age=3600'\n};\n\n// Base styles that work for both themes\nconst baseStyles = `\n  /* CSS Variables for theming */\n  :root {\n    --font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;\n    --max-width: 900px;\n    --border-radius: 4px;\n    --transition: all 0.2s ease;\n  }\n\n  /* Base Reset */\n  * {\n    box-sizing: border-box;\n  }\n\n  body {\n    font-family: var(--font-family);\n    background-color: var(--bg-primary);\n    color: var(--text-primary);\n    margin: 0;\n    padding: 20px;\n    line-height: 1.6;\n  }\n\n  /* Layout */\n  .container {\n    max-width: var(--max-width);\n    margin: 0 auto;\n    padding: 20px;\n  }\n\n  .auth-container {\n    max-width: 400px;\n    margin: 0 auto;\n    padding: 20px;\n  }\n\n  /* Header */\n  header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 2rem;\n    padding-bottom: 1rem;\n    border-bottom: 1px solid var(--border-color);\n  }\n\n  header h1 {\n    margin: 0;\n    font-size: 1.8rem;\n  }\n\n  header h1 a {\n    color: var(--text-primary);\n    text-decoration: none;\n  }\n\n  /* Navigation */\n  nav {\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n  }\n\n  nav a {\n    color: var(--link-color);\n    text-decoration: none;\n    padding: 0.5rem 1rem;\n    border-radius: var(--border-radius);\n    transition: var(--transition);\n  }\n\n  nav a:hover {\n    background-color: var(--nav-hover-bg);\n    color: var(--nav-hover-color);\n  }\n\n  /* Typography */\n  h1, h2, h3, h4, h5, h6 {\n    color: var(--text-primary);\n    margin-top: 0;\n  }\n\n  a {\n    color: var(--link-color);\n    text-decoration: none;\n    transition: var(--transition);\n  }\n\n  a:hover {\n    color: var(--link-hover);\n    text-decoration: underline;\n  }\n\n  /* Forms */\n  input, textarea {\n    width: 100%;\n    padding: 10px;\n    margin: 10px 0;\n    border: 1px solid var(--input-border);\n    background-color: var(--input-bg);\n    color: var(--text-primary);\n    font-size: 1em;\n    border-radius: var(--border-radius);\n    font-family: var(--font-family);\n  }\n\n  textarea {\n    min-height: 200px;\n    resize: vertical;\n  }\n\n  /* Buttons - Ensure consistency */\n  button,\n  .button,\n  a.button,\n  .edit-button,\n  .delete-button {\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    padding: 8px 16px;\n    margin: 0;\n    border: none;\n    border-radius: var(--border-radius);\n    font-size: 0.875rem;\n    font-weight: 500;\n    line-height: 1.2;\n    cursor: pointer;\n    transition: var(--transition);\n    text-decoration: none;\n    font-family: var(--font-family);\n  }\n\n  /* Primary button style */\n  button:not(.delete-button),\n  .button:not(.edit-button):not(.delete-button) {\n    background-color: var(--button-primary-bg);\n    color: var(--button-primary-text);\n  }\n\n  button:not(.delete-button):hover,\n  .button:not(.edit-button):not(.delete-button):hover {\n    background-color: var(--button-primary-hover);\n  }\n\n  /* Edit buttons */\n  .edit-button,\n  a.edit-button {\n    background-color: var(--button-secondary-bg);\n    color: var(--button-secondary-text);\n  }\n\n  .edit-button:hover,\n  a.edit-button:hover {\n    background-color: var(--button-secondary-hover);\n    color: var(--button-secondary-text);\n  }\n\n  /* Delete buttons */\n  .delete-button,\n  button.delete-button,\n  .delete-link button {\n    background-color: var(--button-danger-bg);\n    color: var(--button-danger-text);\n  }\n\n  .delete-button:hover,\n  button.delete-button:hover,\n  .delete-link button:hover {\n    background-color: var(--button-danger-hover);\n    color: var(--button-danger-text);\n  }\n\n  /* Post Styles */\n  article,\n  .post-preview {\n    border-bottom: 1px solid var(--border-color);\n    padding-bottom: 2rem;\n    margin-bottom: 2rem;\n  }\n\n  article:last-child,\n  .post-preview:last-child {\n    border-bottom: none;\n  }\n\n  article h2,\n  .post-preview h2 {\n    margin-bottom: 0.5rem;\n    font-size: 1.5rem;\n  }\n\n  .post-preview h2 a {\n    color: var(--text-primary);\n    text-decoration: none;\n  }\n\n  .post-preview h2 a:hover {\n    color: var(--link-color);\n  }\n\n  .post-meta {\n    color: var(--text-secondary);\n    font-size: 0.9rem;\n    margin-bottom: 1rem;\n  }\n\n  /* Add to baseStyles */\n  .post-excerpt {\n    margin: 1rem 0;\n    color: var(--text-color);\n    line-height: 1.6;\n    max-width: 100%;  /* Ensure it doesn't overflow */\n    padding-bottom: 1rem;\n    border-bottom: 1px solid var(--border-secondary);\n    margin-bottom: 1rem;\n  }\n\n  /* For really long single-line excerpts */\n  .post-excerpt p {\n    margin: 0;\n    word-wrap: break-word;\n    overflow-wrap: break-word;\n  }\n\n  time {\n    color: var(--text-secondary);\n  }\n\n  /* Post Content */\n  .post-content {\n    color: var(--text-primary);\n    margin-bottom: 1rem;\n  }\n\n  .post-content h1 { font-size: 2em; margin: 0.67em 0; }\n  .post-content h2 { font-size: 1.5em; margin: 0.83em 0; }\n  .post-content h3 { font-size: 1.17em; margin: 1em 0; }\n  .post-content h4 { font-size: 1em; margin: 1.33em 0; }\n  .post-content h5 { font-size: 0.83em; margin: 1.67em 0; }\n  .post-content h6 { font-size: 0.67em; margin: 2.33em 0; }\n\n  .post-content pre {\n    background: var(--code-bg);\n    padding: 1rem;\n    border-radius: var(--border-radius);\n    overflow-x: auto;\n    margin: 1em 0;\n  }\n\n  .post-content code {\n    background: var(--code-bg);\n    padding: 0.2em 0.4em;\n    border-radius: 3px;\n    font-size: 0.9em;\n  }\n\n  .post-content blockquote {\n    border-left: 4px solid var(--border-color);\n    margin: 1em 0;\n    padding-left: 1em;\n    color: var(--text-secondary);\n  }\n\n  /* Post actions container */\n  .post-footer {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-top: 1rem;\n    flex-wrap: nowrap;  /* Prevent wrapping */\n  }\n\n  .post-actions {\n    display: flex;\n    gap: 0.5rem;\n    align-items: center;\n    flex-shrink: 0;  /* Prevent shrinking */\n  }\n\n  .delete-link {\n    display: inline-flex;\n    margin: 0;\n  }\n\n  .read-more {\n    color: var(--link-color);\n    font-weight: 500;\n  }\n\n  /* Single Post */\n  .single-post {\n    max-width: 800px;\n    margin: 0 auto;\n  }\n\n  .single-post .post-header {\n    text-align: center;\n    margin-bottom: 3rem;\n  }\n\n  .single-post h1 {\n    font-size: 2.5rem;\n    margin-bottom: 1rem;\n  }\n\n  .single-post .post-content {\n    font-size: 1.1rem;\n    line-height: 1.8;\n  }\n\n  .single-post .post-actions {\n    margin-top: 2rem;\n    padding-top: 2rem;\n    border-top: 1px solid var(--border-color);\n  }\n\n  /* Post Navigation */\n  .post-navigation {\n    display: flex;\n    justify-content: space-between;\n    margin-top: 3rem;\n    padding-top: 2rem;\n    border-top: 1px solid var(--border-color);\n  }\n\n  .nav-prev, .nav-next {\n    display: flex;\n    flex-direction: column;\n    text-decoration: none;\n    color: var(--text-primary);\n    max-width: 45%;\n  }\n\n  .nav-next {\n    text-align: right;\n    align-items: flex-end;\n  }\n\n  .nav-label {\n    font-size: 0.875rem;\n    color: var(--text-secondary);\n    margin-bottom: 0.25rem;\n  }\n\n  .nav-title {\n    font-weight: 500;\n    color: var(--text-primary);\n  }\n\n  /* Pagination */\n  .pagination {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 0.5rem;\n    margin-top: 3rem;\n    padding: 1rem;\n  }\n\n  .pagination-link {\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    min-width: 2.5rem;\n    height: 2.5rem;\n    padding: 0.5rem;\n    border: 1px solid var(--border-color);\n    border-radius: var(--border-radius);\n    text-decoration: none;\n    color: var(--text-primary);\n    background-color: var(--bg-primary);\n    transition: var(--transition);\n    font-weight: 500;\n  }\n\n  .pagination-link:hover:not(.pagination-disabled):not(.pagination-current) {\n    background-color: var(--bg-secondary);\n    border-color: var(--border-hover);\n    text-decoration: none;\n  }\n\n  .pagination-current {\n    background-color: var(--button-primary-bg);\n    color: var(--button-primary-text);\n    border-color: var(--button-primary-bg);\n  }\n\n  .pagination-disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n    pointer-events: none;\n  }\n\n  /* Theme Toggle - back to bottom right */\n  .theme-toggle-container {\n    position: fixed;\n    bottom: 20px;\n    right: 20px;\n    z-index: 1000;\n  }\n\n\n  .theme-toggle {\n    border: 2px solid var(--border-color);\n    border-radius: 50%;\n    width: 50px;\n    height: 50px;\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    transition: var(--transition);\n  }\n\n  .theme-toggle:hover {\n    transform: scale(1.05);\n  }\n\n  /* Messages */\n  .success-message,\n  .error-message {\n    padding: 1rem;\n    margin: 1rem 0;\n    border-radius: var(--border-radius);\n  }\n\n  .success-message {\n    background-color: var(--success-bg);\n    color: var(--success-text);\n    border: 1px solid var(--success-border);\n  }\n\n  .error-message {\n    background-color: var(--error-bg);\n    color: var(--error-text);\n    border: 1px solid var(--error-border);\n  }\n\n  /* Mobile */\n  @media (max-width: 600px) {\n    body {\n      padding: 10px;\n    }\n    \n    .container {\n      padding: 10px;\n    }\n    \n    header {\n      flex-direction: column;\n      text-align: center;\n      gap: 1rem;\n    }\n    \n    nav {\n      flex-wrap: wrap;\n      justify-content: center;\n    }\n  }\n\n  /* Admin Dashboard */\n  .admin-dashboard {\n    max-width: 1200px;\n    margin: 0 auto;\n    padding: 2rem;\n  }\n\n  .stats-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n    gap: 1.5rem;\n    margin-bottom: 3rem;\n  }\n\n  .stat-card {\n    background: var(--bg-secondary);\n    padding: 1.5rem;\n    border-radius: var(--border-radius);\n    border: 1px solid var(--border-color);\n    text-align: center;\n  }\n\n  .stat-card h3 {\n    margin: 0 0 0.5rem;\n    font-size: 0.875rem;\n    color: var(--text-secondary);\n    text-transform: uppercase;\n    letter-spacing: 0.05em;\n  }\n\n  .stat-number {\n    font-size: 2.5rem;\n    font-weight: bold;\n    color: var(--text-primary);\n  }\n\n  .quick-actions {\n    margin-bottom: 3rem;\n  }\n\n  .action-buttons {\n    display: flex;\n    gap: 1rem;\n    flex-wrap: wrap;\n  }\n\n  /* Simple Chart */\n  .chart-section {\n    margin-bottom: 3rem;\n  }\n\n  .simple-chart {\n    display: flex;\n    align-items: flex-end;\n    justify-content: space-between;\n    height: 200px;\n    padding: 1rem;\n    background: var(--bg-secondary);\n    border-radius: var(--border-radius);\n    gap: 0.5rem;\n  }\n\n  .chart-bar {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: flex-end;\n    position: relative;\n    height: 100%;\n  }\n\n  .chart-bar .bar {\n    width: 100%;\n    background: var(--button-primary-bg);\n    border-radius: var(--border-radius) var(--border-radius) 0 0;\n    height: var(--height);\n    transition: height 0.3s ease;\n  }\n\n  .chart-bar .label {\n    font-size: 0.75rem;\n    margin-top: 0.5rem;\n    color: var(--text-secondary);\n  }\n\n  .chart-bar .value {\n    position: absolute;\n    bottom: calc(var(--height) + 0.25rem);\n    font-size: 0.75rem;\n    font-weight: bold;\n  }\n\n  /* Data Table */\n  .data-table {\n    width: 100%;\n    border-collapse: collapse;\n    background: var(--bg-secondary);\n    border-radius: var(--border-radius);\n    overflow: hidden;\n  }\n\n  .data-table th,\n  .data-table td {\n    padding: 1rem;\n    text-align: left;\n    border-bottom: 1px solid var(--border-color);\n  }\n\n  .data-table th {\n    background: var(--bg-primary);\n    font-weight: 600;\n    color: var(--text-secondary);\n    text-transform: uppercase;\n    font-size: 0.875rem;\n  }\n\n  .data-table tr:last-child td {\n    border-bottom: none;\n  }\n\n  .data-table tr:hover {\n    background: var(--bg-primary);\n  }\n\n  .small-button {\n    padding: 0.25rem 0.75rem;\n    font-size: 0.875rem;\n    margin-right: 0.5rem;\n  }\n\n  /* Mobile Responsive */\n  @media (max-width: 768px) {\n    .stats-grid {\n      grid-template-columns: 1fr 1fr;\n    }\n    \n    .simple-chart {\n      padding: 0.5rem;\n    }\n    \n    .chart-bar .value {\n      font-size: 0.625rem;\n    }\n    \n    .data-table {\n      font-size: 0.875rem;\n    }\n    \n    .data-table th,\n    .data-table td {\n      padding: 0.5rem;\n    }\n  }\n\n  /* Page Header */\n  .page-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 2rem;\n  }\n\n  /* Badge */\n  .badge {\n    display: inline-block;\n    padding: 0.25rem 0.5rem;\n    font-size: 0.75rem;\n    background: var(--button-primary-bg);\n    color: var(--button-primary-text);\n    border-radius: var(--border-radius);\n    margin-left: 0.5rem;\n  }\n\n  /* Info Box */\n  .info-box {\n    background: var(--bg-secondary);\n    border: 1px solid var(--border-color);\n    border-radius: var(--border-radius);\n    padding: 1rem;\n    margin: 2rem 0;\n  }\n\n  .info-box p {\n    margin: 0;\n    color: var(--text-secondary);\n  }\n\n  /* Settings */\n  .settings-grid {\n    display: grid;\n    gap: 2rem;\n    margin-bottom: 2rem;\n  }\n\n  .setting-group {\n    background: var(--bg-secondary);\n    padding: 1.5rem;\n    border-radius: var(--border-radius);\n    border: 1px solid var(--border-color);\n  }\n\n  .setting-group h3 {\n    margin-top: 0;\n    margin-bottom: 1rem;\n    color: var(--text-primary);\n  }\n\n  .setting-item {\n    display: grid;\n    grid-template-columns: 200px 1fr;\n    gap: 1rem;\n    margin-bottom: 1rem;\n    align-items: center;\n  }\n\n  .setting-item:last-child {\n    margin-bottom: 0;\n  }\n\n  .setting-item label {\n    font-weight: 500;\n    color: var(--text-secondary);\n  }\n\n  .setting-value {\n    color: var(--text-primary);\n  }\n\n  .future-settings ul {\n    list-style: none;\n    padding: 0;\n  }\n\n  .future-settings li {\n    padding: 0.5rem 0;\n    border-bottom: 1px solid var(--border-color);\n  }\n\n  .muted {\n    color: var(--text-secondary);\n  }\n\n  .link-button {\n    background: none;\n    border: none;\n    color: inherit;\n    text-decoration: underline;\n    cursor: pointer;\n    font: inherit;\n    padding: 0;\n  }\n\n  /* Admin Dashboard Specific */\n  .page-header {\n    margin-bottom: 2rem;\n    padding-bottom: 1rem;\n    border-bottom: 1px solid var(--border-color);\n  }\n\n  .page-header h1 {\n    margin: 0 0 1rem 0;\n    font-size: 2rem;\n    font-weight: 600;\n  }\n\n  .admin-nav {\n    display: flex;\n    align-items: center;\n    gap: 0.75rem;\n    font-size: 0.9rem;\n  }\n\n  .admin-nav a {\n    color: var(--link-color);\n    text-decoration: none;\n    padding: 0.25rem 0;\n    transition: var(--transition);\n  }\n\n  .admin-nav a:hover {\n    color: var(--link-hover);\n  }\n\n  .admin-nav a.active {\n    font-weight: 600;\n    color: var(--text-primary);\n  }\n\n  .nav-separator {\n    color: var(--text-secondary);\n    user-select: none;\n  }\n\n  /* Stats Grid */\n  .stats-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n    gap: 1.5rem;\n    margin-bottom: 3rem;\n  }\n\n  .stat-card {\n    background: var(--bg-secondary);\n    padding: 2rem;\n    border-radius: var(--border-radius);\n    border: 1px solid var(--border-color);\n    text-align: center;\n    transition: var(--transition);\n  }\n\n  .stat-card:hover {\n    border-color: var(--border-hover);\n    transform: translateY(-2px);\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n  }\n\n  .stat-card h3 {\n    margin: 0 0 1rem;\n    font-size: 0.75rem;\n    font-weight: 600;\n    color: var(--text-secondary);\n    text-transform: uppercase;\n    letter-spacing: 0.1em;\n  }\n\n  .stat-number {\n    font-size: 3rem;\n    font-weight: 700;\n    color: var(--text-primary);\n    line-height: 1;\n  }\n\n  /* Quick Actions */\n  .quick-actions {\n    margin-bottom: 3rem;\n  }\n\n  .quick-actions h2 {\n    margin-bottom: 1rem;\n    font-size: 1.5rem;\n    font-weight: 600;\n  }\n\n  .action-buttons {\n    display: flex;\n    gap: 1rem;\n    flex-wrap: wrap;\n  }\n\n  /* Chart Section */\n  .chart-section {\n    margin-bottom: 3rem;\n  }\n\n  .chart-section h2 {\n    margin-bottom: 1.5rem;\n    font-size: 1.5rem;\n    font-weight: 600;\n  }\n\n  .simple-chart {\n    display: flex;\n    align-items: flex-end;\n    justify-content: space-between;\n    height: 250px;\n    padding: 1.5rem;\n    background: var(--bg-secondary);\n    border-radius: var(--border-radius);\n    border: 1px solid var(--border-color);\n    gap: 1rem;\n  }\n\n  .chart-bar {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: flex-end;\n    position: relative;\n    height: 100%;\n  }\n\n  .chart-bar .bar {\n    width: 100%;\n    background: var(--button-primary-bg);\n    border-radius: var(--border-radius) var(--border-radius) 0 0;\n    transition: height 0.3s ease;\n    min-height: 2px;\n  }\n\n  .chart-bar .value {\n    position: absolute;\n    bottom: calc(100% + 0.5rem);\n    font-size: 0.875rem;\n    font-weight: 600;\n    color: var(--text-primary);\n  }\n\n  .chart-bar .label {\n    font-size: 0.75rem;\n    margin-top: 0.5rem;\n    color: var(--text-secondary);\n    font-weight: 500;\n  }\n\n  /* Recent Posts Section */\n  .recent-posts-section {\n    margin-bottom: 3rem;\n  }\n\n  .recent-posts-section h2 {\n    margin-bottom: 1.5rem;\n    font-size: 1.5rem;\n    font-weight: 600;\n  }\n\n  /* Data Table */\n  .data-table {\n    width: 100%;\n    border-collapse: collapse;\n    background: var(--bg-secondary);\n    border-radius: var(--border-radius);\n    overflow: hidden;\n    border: 1px solid var(--border-color);\n  }\n\n  .data-table th,\n  .data-table td {\n    padding: 1rem 1.5rem;\n    text-align: left;\n    border-bottom: 1px solid var(--border-color);\n  }\n\n  .data-table th {\n    background: var(--bg-primary);\n    font-weight: 600;\n    color: var(--text-secondary);\n    text-transform: uppercase;\n    font-size: 0.75rem;\n    letter-spacing: 0.05em;\n  }\n\n  .data-table tbody tr:hover {\n    background: var(--bg-primary);\n  }\n\n  .data-table tbody tr:last-child td {\n    border-bottom: none;\n  }\n\n  .post-title-link {\n    color: var(--text-primary);\n    text-decoration: none;\n    font-weight: 500;\n  }\n\n  .post-title-link:hover {\n    color: var(--link-color);\n  }\n\n  .action-cell {\n    white-space: nowrap;\n  }\n\n  .small-button {\n    padding: 0.375rem 0.875rem;\n    font-size: 0.8125rem;\n    margin-right: 0.5rem;\n  }\n\n  /* Empty State */\n  .empty-state {\n    text-align: center;\n    padding: 3rem;\n    background: var(--bg-secondary);\n    border-radius: var(--border-radius);\n    border: 1px solid var(--border-color);\n  }\n\n  .empty-state p {\n    margin-bottom: 1rem;\n    color: var(--text-secondary);\n  }\n\n  .no-data {\n    text-align: center;\n    color: var(--text-secondary);\n    padding: 2rem;\n  }\n\n  /* Form improvements */\n  .admin-form-container {\n    max-width: 800px;\n    margin: 0 auto;\n    padding: 2rem;\n  }\n\n  .post-form {\n    background: var(--bg-secondary);\n    padding: 2rem;\n    border-radius: var(--border-radius);\n    border: 1px solid var(--border-color);\n  }\n\n  .post-meta {\n    background: var(--bg-secondary);\n    padding: 1rem;\n    border-radius: var(--border-radius);\n    margin-bottom: 2rem;\n    font-size: 0.9rem;\n    color: var(--text-secondary);\n  }\n\n  .post-meta p {\n    margin: 0.25rem 0;\n  }\n\n  .checkbox-group {\n    background: var(--bg-primary);\n    padding: 1rem;\n    border-radius: var(--border-radius);\n    border: 2px solid var(--border-color);\n    margin: 1.5rem 0;\n  }\n\n  .checkbox-label {\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n    font-weight: 500;\n  }\n\n  .checkbox-label input[type=\"checkbox\"] {\n    width: auto;\n    height: 1.2rem;\n    margin: 0 0.75rem 0 0;\n    cursor: pointer;\n  }\n\n  .checkbox-label span {\n    user-select: none;\n  }\n\n  .form-actions {\n    display: flex;\n    gap: 1rem;\n    margin-top: 2rem;\n    padding-top: 2rem;\n    border-top: 1px solid var(--border-color);\n  }\n\n  .button.primary {\n    background-color: var(--link-color);\n    color: white;\n  }\n\n  .button.primary:hover {\n    background-color: var(--link-hover);\n  }\n\n    /* Reply Form */\n  .reply-form-container {\n    max-width: 800px;\n    margin: 2rem auto;\n  }\n\n  .reply-form {\n    background: var(--bg-secondary);\n    padding: 2rem;\n    border-radius: var(--border-radius);\n    border: 1px solid var(--border-color);\n  }\n\n  .reply-form .form-group {\n    margin-bottom: 1.5rem;\n  }\n\n  .reply-form .form-group label {\n    display: block;\n    margin-bottom: 0.5rem;\n    font-weight: 500;\n    color: var(--text-primary);\n  }\n\n  .reply-form .form-input, .reply-form .form-textarea {\n    width: 100%;\n    padding: 10px;\n    border: 1px solid var(--input-border);\n    background-color: var(--input-bg);\n    color: var(--text-primary);\n    font-size: 1em;\n    border-radius: var(--border-radius);\n    font-family: var(--font-family);\n    transition: var(--transition);\n  }\n\n  .reply-form .form-textarea {\n    min-height: 250px;\n    resize: vertical;\n  }\n\n  .reply-form .readonly {\n    background-color: var(--bg-primary);\n    opacity: 0.8;\n    cursor: not-allowed;\n  }\n\n  .reply-form .form-actions {\n    display: flex;\n    gap: 1rem;\n    margin-top: 2rem;\n    padding-top: 1rem;\n    border-top: 1px solid var(--border-color);\n  }\n\n  .reply-form .send-button {\n    background-color: var(--button-primary-bg);\n    color: var(--button-primary-text);\n  }\n\n  .reply-form .send-button:hover {\n    background-color: var(--button-primary-hover);\n  }\n\n  .reply-form .cancel-button {\n    background-color: var(--button-secondary-bg);\n    color: var(--button-secondary-text);\n  }\n\n  .reply-form .cancel-button:hover {\n    background-color: var(--button-secondary-hover);\n  }\n  \n  /* User Profile Styles */\n  .user-profile {\n    max-width: 800px;\n    margin: 0 auto;\n    padding: 20px;\n  }\n  \n  .profile-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-start;\n    margin-bottom: 40px;\n    padding-bottom: 20px;\n    border-bottom: 1px solid var(--border-color);\n  }\n  \n  .profile-info h1 {\n    margin: 0 0 5px 0;\n    color: var(--text-primary);\n  }\n  \n  .username {\n    color: var(--text-secondary);\n    font-size: 1.1em;\n    margin: 0 0 15px 0;\n  }\n  \n  .profile-description {\n    margin: 15px 0;\n    line-height: 1.6;\n    color: var(--text-primary);\n  }\n  \n  .profile-stats {\n    color: var(--text-secondary);\n    font-size: 0.9em;\n  }\n  \n  .profile-actions {\n    display: flex;\n    gap: 10px;\n  }\n  \n  .posts-section h2 {\n    margin-bottom: 20px;\n    color: var(--text-primary);\n  }\n  \n  .post-list {\n    margin-top: 10px;\n  }\n  \n  .post-item {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 15px;\n    border-bottom: 1px solid var(--border-color);\n    background: var(--bg-secondary);\n    margin-bottom: 5px;\n    border-radius: var(--border-radius);\n  }\n  \n  .post-info h4 {\n    margin: 0 0 5px 0;\n  }\n  \n  .post-info h4 a {\n    text-decoration: none;\n    color: var(--text-primary);\n  }\n  \n  .post-info h4 a:hover {\n    color: var(--link-color);\n  }\n  \n  .post-date {\n    color: var(--text-secondary);\n    font-size: 0.9em;\n    margin-right: 10px;\n  }\n  \n  .post-status {\n    font-size: 0.8em;\n    padding: 2px 6px;\n    border-radius: 3px;\n    text-transform: uppercase;\n    font-weight: bold;\n  }\n  \n  .post-status.published {\n    background: #d4edda;\n    color: #155724;\n  }\n  \n  .post-status.draft {\n    background: #fff3cd;\n    color: #856404;\n  }\n  \n  /* Dark theme adjustments for profile status badges */\n  :root[data-theme=\"dark\"] .post-status.published {\n    background: #0a4f0a;\n    color: #90ee90;\n  }\n  \n  :root[data-theme=\"dark\"] .post-status.draft {\n    background: #4f4a0a;\n    color: #f0e090;\n  }\n  \n  /* Author links - make usernames clickable throughout the site */\n  .author-link {\n    color: var(--text-primary);\n    text-decoration: none;\n    font-weight: 500;\n  }\n  \n  .author-link:hover {\n    color: var(--link-color);\n    text-decoration: underline;\n  }\n  \n  /* Mobile responsive for user profiles */\n  @media (max-width: 600px) {\n    .profile-header {\n      flex-direction: column;\n      text-align: center;\n      gap: 1rem;\n    }\n    \n    .profile-actions {\n      justify-content: center;\n    }\n    \n    .post-item {\n      flex-direction: column;\n      align-items: flex-start;\n      gap: 10px;\n    }\n  }\n\n  // Add to the end of baseStyles, before the closing backtick\n\n/* Proxy Dashboard */\n.proxy-dashboard {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n}\n\n.dashboard-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 2rem;\n  padding-bottom: 1rem;\n  border-bottom: 1px solid var(--border-color);\n}\n\n.dashboard-header h2 {\n  margin: 0;\n  font-size: 1.5rem;\n  font-weight: 600;\n}\n\n.status-indicator {\n  padding: 0.5rem 1rem;\n  border-radius: var(--border-radius);\n  font-weight: 500;\n  font-size: 0.875rem;\n  border: 1px solid var(--border-color);\n}\n\n.status-indicator.connected {\n  background: var(--bg-secondary);\n  color: var(--text-primary);\n  border-color: var(--border-color);\n}\n\n.status-indicator.disconnected {\n  background: var(--bg-secondary);\n  color: var(--text-secondary);\n  border-color: var(--border-color);\n}\n\n.proxy-services-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\n  gap: 1.5rem;\n  margin-bottom: 2rem;\n}\n\n.service-card {\n  background: var(--bg-secondary);\n  border: 1px solid var(--border-color);\n  border-radius: var(--border-radius);\n  padding: 1.5rem;\n  transition: var(--transition);\n}\n\n.service-card:hover {\n  border-color: var(--border-hover);\n}\n\n.service-card h3 {\n  margin: 0 0 1rem 0;\n  font-size: 1.125rem;\n  font-weight: 600;\n}\n\n.service-status {\n  font-weight: 500;\n  margin-bottom: 1rem;\n  padding: 0.5rem;\n  background: var(--bg-primary);\n  border-radius: var(--border-radius);\n}\n\n.service-status.healthy {\n  color: var(--text-primary);\n}\n\n.service-status.error {\n  color: var(--text-secondary);\n}\n\n.error-banner {\n  background: var(--error-bg);\n  color: var(--error-text);\n  border: 1px solid var(--error-border);\n  padding: 1rem;\n  border-radius: var(--border-radius);\n  margin-bottom: 2rem;\n}\n\n.error-banner h3 {\n  margin: 0 0 0.5rem 0;\n}\n\n.error-banner p {\n  margin: 0.5rem 0;\n}\n\n.proxy-actions {\n  background: var(--bg-secondary);\n  border-radius: var(--border-radius);\n  padding: 1.5rem;\n  margin-bottom: 2rem;\n  border: 1px solid var(--border-color);\n}\n\n.proxy-actions h3 {\n  margin: 0 0 1rem 0;\n  font-size: 1.125rem;\n}\n\n.action-buttons {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 0.75rem;\n}\n\n.integration-guide {\n  background: var(--bg-secondary);\n  border-radius: var(--border-radius);\n  padding: 1.5rem;\n  border: 1px solid var(--border-color);\n}\n\n.integration-guide h3 {\n  margin: 0 0 1rem 0;\n  font-size: 1.125rem;\n}\n\n.guide-section h4 {\n  color: var(--text-primary);\n  margin: 1rem 0 0.5rem 0;\n  font-size: 1rem;\n}\n\n.guide-section h4:first-child {\n  margin-top: 0;\n}\n\n.guide-section p {\n  color: var(--text-secondary);\n  line-height: 1.5;\n  margin: 0 0 0.75rem 0;\n}\n\n/* Queue Status */\n.queue-status {\n  background: var(--bg-secondary);\n  border: 1px solid var(--border-color);\n  border-radius: var(--border-radius);\n  padding: 1.5rem;\n  margin-bottom: 2rem;\n}\n\n.queue-status h3 {\n  margin: 0 0 1rem 0;\n  font-size: 1.125rem;\n}\n\n.queue-waiting {\n  color: var(--text-secondary);\n  font-style: italic;\n  margin: 0;\n}\n\n/* Loading indicator */\n.loading-indicator {\n  position: fixed;\n  top: 20px;\n  right: 20px;\n  background: var(--button-primary-bg);\n  color: var(--button-primary-text);\n  padding: 0.75rem 1rem;\n  border-radius: var(--border-radius);\n  z-index: 1000;\n  font-weight: 500;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n}\n\n/* Mobile responsive */\n@media (max-width: 768px) {\n  .proxy-dashboard {\n    padding: 1rem;\n  }\n  \n  .dashboard-header {\n    flex-direction: column;\n    gap: 1rem;\n    text-align: center;\n  }\n  \n  .proxy-services-grid {\n    grid-template-columns: 1fr;\n  }\n  \n  .action-buttons {\n    justify-content: center;\n  }\n}\n`;\n\n// Dark theme variables\nconst darkTheme = `\n  :root[data-theme=\"dark\"] {\n    /* Colors */\n    --bg-primary: #000;\n    --bg-secondary: #1a1a1a;\n    --text-primary: #fff;\n    --text-secondary: #888;\n    --border-color: #333;\n    --border-hover: #555;\n    \n    /* Links */\n    --link-color: #8ba3c7;\n    --link-hover: #adc3e7;\n    \n    /* Navigation */\n    --nav-hover-bg: #333;\n    --nav-hover-color: #fff;\n    \n    /* Buttons - monochrome only */\n    --button-primary-bg: #333;\n    --button-primary-text: #fff;\n    --button-primary-hover: #555;\n    \n    --button-secondary-bg: #444;  /* Edit button - slightly lighter */\n    --button-secondary-text: #fff;\n    --button-secondary-hover: #666;\n    \n    --button-danger-bg: #614f4fff;  /* Delete button - pure black */\n    --button-danger-text: #fff;\n    --button-danger-hover: #ada6a6;\n\n    --theme-toggle-box-shadow: #ffffffff;\n    --theme-toggle-background-color: #000;\n    \n    /* Forms */\n    --input-bg: #121212;\n    --input-border: #333;\n    \n    /* Code */\n    --code-bg: #1a1a1a;\n    \n    /* Messages */\n    --success-bg: #0a4f0a;\n    --success-text: #90ee90;\n    --success-border: #0f7f0f;\n    \n    --error-bg: #4f0a0a;\n    --error-text: #ff9090;\n    --error-border: #7f0f0f;\n  }\n  `;\n\n  // Light theme variables\n  const lightTheme = `\n    :root[data-theme=\"light\"] {\n      /* Colors */\n      --bg-primary: #fff;\n      --bg-secondary: #f5f5f5;\n      --text-primary: #333;\n      --text-secondary: #666;\n      --border-color: #ddd;\n      --border-hover: #999;\n      \n      /* Links */\n      --link-color: #0066cc;\n      --link-hover: #0052a3;\n      \n      /* Navigation */\n      --nav-hover-bg: #f0f0f0;\n      --nav-hover-color: #333;\n      \n      /* Buttons - monochrome only */\n      --button-primary-bg: #333;\n      --button-primary-text: #fff;\n      --button-primary-hover: #555;\n      \n      --button-secondary-bg: #666;  /* Edit button - grey */\n      --button-secondary-text: #fff;\n      --button-secondary-hover: #888;\n      \n      --button-danger-bg: #000;  /* Delete button - black in light mode too */\n      --button-danger-text: #fff;\n      --button-danger-hover: #333;\n\n      --theme-toggle-box-shadow: #ffffffff;\n      --theme-toggle-box-shadow: #00000000;\n      \n      /* Forms */\n      --input-bg: #fff;\n      --input-border: #ccc;\n      \n      /* Code */\n      --code-bg: #f4f4f4;\n      \n      /* Messages */\n      --success-bg: #d4edda;\n      --success-text: #155724;\n      --success-border: #c3e6cb;\n      \n      --error-bg: #f8d7da;\n      --error-text: #721c24;\n      --error-border: #f5c6cb;\n    }\n`;\n\nexport const styleRoutes = {\n  '/styles/dark_min.css': {\n    GET: () => new Response(baseStyles + darkTheme, { \n      headers: CACHE_HEADERS \n    })\n  },\n  '/styles/light_min.css': {\n    GET: () => new Response(baseStyles + lightTheme, { \n      headers: CACHE_HEADERS \n    })\n  },\n  '/styles/theme.css': {\n    GET: () => new Response(baseStyles + darkTheme, {\n      headers: CACHE_HEADERS \n    })\n  }\n};", "// src/routes/static.js\nexport const staticRoutes = {\n  '/favicon.ico': {\n    GET: async (request, env) => {\n      try {\n        // Use the ASSETS binding to fetch the favicon\n        const asset = await env.ASSETS.fetch(new URL('/favicon.ico', request.url));\n        \n        if (asset.status === 200) {\n          return new Response(await asset.arrayBuffer(), {\n            headers: {\n              'Content-Type': 'image/x-icon',\n              'Cache-Control': 'public, max-age=31536000' // Cache for 1 year\n            }\n          });\n        }\n        \n        // If favicon not found in assets, return SVG fallback\n        const svgFavicon = `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\">\n          <rect width=\"32\" height=\"32\" fill=\"#1a1a1a\"/>\n          <path d=\"M16 4l-2 2v4l-4 4v10l4 4h4l4-4V14l-4-4V6l-2-2z\" fill=\"white\"/>\n        </svg>`;\n        \n        return new Response(svgFavicon, {\n          headers: {\n            'Content-Type': 'image/svg+xml',\n            'Cache-Control': 'public, max-age=86400'\n          }\n        });\n        \n      } catch (error) {\n        console.error('Favicon error:', error);\n        \n        // Fallback SVG favicon\n        const svgFavicon = `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\">\n          <rect width=\"32\" height=\"32\" fill=\"#1a1a1a\"/>\n          <path d=\"M16 4l-2 2v4l-4 4v10l4 4h4l4-4V14l-4-4V6l-2-2z\" fill=\"white\"/>\n        </svg>`;\n        \n        return new Response(svgFavicon, {\n          headers: {\n            'Content-Type': 'image/svg+xml',\n            'Cache-Control': 'public, max-age=86400'\n          }\n        });\n      }\n    }\n  },\n\n  // Also add support for apple-touch-icon if you created one\n  '/apple-touch-icon.png': {\n    GET: async (request, env) => {\n      try {\n        const asset = await env.ASSETS.fetch(new URL('/apple-touch-icon.png', request.url));\n        \n        if (asset.status === 200) {\n          return new Response(await asset.arrayBuffer(), {\n            headers: {\n              'Content-Type': 'image/png',\n              'Cache-Control': 'public, max-age=31536000'\n            }\n          });\n        }\n        \n        return new Response(null, { status: 404 });\n      } catch (error) {\n        console.error('Apple touch icon error:', error);\n        return new Response(null, { status: 404 });\n      }\n    }\n  }\n};", "// src/routes/auth.js - Updated with better rate limiting\nimport { renderLoginForm } from '../templates/auth/index.js';\nimport { hashPassword, verifyPassword } from '../utils/auth.js';\nimport { createJWT } from '../utils/jwt.js';\nimport { UserModel } from '../../../../lib.deadlight/core/src/db/models/user.js';\nimport { Logger } from '../../../../lib.deadlight/core/src/logging/logger.js';\nimport { Validator, FormValidator, CSRFProtection } from '../../../../lib.deadlight/core/src/security/validation.js';\nimport { authLimiter } from '../../../../lib.deadlight/core/src/security/ratelimit.js';\n\nexport const authRoutes = {\n  '/login': {\n    GET: async (request, env) => {\n      // Generate simple CSRF token\n      const csrfToken = CSRFProtection.generateToken();\n      \n      // Set CSRF cookie\n      const headers = new Headers({\n        'Content-Type': 'text/html',\n        'Set-Cookie': `csrf_token=${csrfToken}; HttpOnly; SameSite=Strict; Path=/`\n      });\n      \n      return new Response(renderLoginForm({ csrfToken }), { headers });\n    },\n\n    POST: async (request, env) => {\n      const userModel = new UserModel(env.DB);\n      const logger = new Logger({ context: 'auth' });\n      \n      // Check rate limit first\n      const rateLimitResult = await authLimiter.isAllowed(request, env);\n      if (!rateLimitResult.allowed) {\n        const retryAfter = Math.ceil((rateLimitResult.resetAt - Date.now()) / 1000);\n        logger.warn('Login rate limit exceeded');\n        \n        return new Response(renderLoginForm({ \n          error: `Too many login attempts. Please try again in ${Math.ceil(retryAfter / 60)} minutes.`\n        }), {\n          status: 429,\n          headers: { \n            'Content-Type': 'text/html',\n            'Retry-After': retryAfter.toString()\n          }\n        });\n      }\n      \n      try {\n        const formDataRequest = new Request(request.url, {\n          method: request.method,\n          headers: request.headers,\n          body: request.body\n        });\n\n        const formData = await formDataRequest.formData();\n        \n        // Get CSRF tokens\n        const cookieToken = CSRFProtection.getTokenFromCookie(request);\n        const formToken = formData.get('csrf_token');\n        \n        // Simple CSRF validation - just check they match\n        if (!cookieToken || !formToken || cookieToken !== formToken) {\n          logger.warn('Invalid CSRF token in login attempt', { \n            hasCookie: !!cookieToken, \n            hasForm: !!formToken,\n            match: cookieToken === formToken \n          });\n          \n          // Generate new token\n          const newToken = CSRFProtection.generateToken();\n          const headers = new Headers({\n            'Content-Type': 'text/html',\n            'Set-Cookie': `csrf_token=${newToken}; HttpOnly; SameSite=Strict; Path=/`\n          });\n          \n          return new Response(renderLoginForm({ \n            error: 'Session expired. Please try again.',\n            csrfToken: newToken\n          }), {\n            status: 400,\n            headers\n          });\n        }\n        \n        // Validate form inputs\n        const validation = await FormValidator.validateFormData(formData, {\n          username: Validator.username,\n          password: Validator.password\n        });\n        \n        if (!validation.success) {\n          logger.info('Login validation failed', { errors: validation.errors });\n          \n          return new Response(renderLoginForm({\n            error: 'Please correct the following errors',\n            validationErrors: validation.errors,\n            username: Validator.escapeHTML(formData.get('username') || ''),\n            csrfToken: cookieToken // Keep same token\n          }), {\n            status: 400,\n            headers: { 'Content-Type': 'text/html' }\n          });\n        }\n        \n        const { username, password } = validation.data;\n        logger.info('Login attempt', { username, passwordLength: password?.length });\n\n        // Authenticate user\n        const authResult = await userModel.authenticate(username, password);\n        \n        if (!authResult.success) {\n          logger.warn('Failed login attempt', { username, reason: authResult.error });\n          \n          return new Response(renderLoginForm({\n            error: 'Invalid username or password',\n            username: Validator.escapeHTML(username),\n            csrfToken: cookieToken // Keep same token\n          }), {\n            status: 401,\n            headers: { 'Content-Type': 'text/html' }\n          });\n        }\n\n        // SUCCESS - Clear rate limit\n        const identifier = request.headers.get('CF-Connecting-IP') || \n                          request.headers.get('X-Forwarded-For') || \n                          'unknown';\n        const rateLimitKey = `rl:auth:${identifier}`;\n        await env.RATE_LIMIT.delete(rateLimitKey);\n        logger.info('Cleared rate limit after successful login', { identifier });\n\n        const { user } = authResult;\n        await userModel.updateLastLogin(user.id);\n\n        const token = await createJWT(\n          { id: user.id, username: user.username, role: user.role || 'user' },\n          env.JWT_SECRET\n        );\n\n        const url = new URL(request.url);\n        const isSecure = url.protocol === 'https:';\n        \n        // Clear CSRF and set auth token\n        const headers = new Headers({\n          'Location': url.origin + '/'\n        });\n        \n        headers.append('Set-Cookie', `token=${token}; HttpOnly; ${isSecure ? 'Secure; ' : ''}SameSite=Strict; Path=/`);\n        headers.append('Set-Cookie', `csrf_token=; Path=/; Max-Age=0`);\n\n        logger.info('Successful login', { \n          userId: user.id, \n          username: user.username\n        });\n\n        return new Response(null, { status: 303, headers });\n        \n      } catch (error) {\n        logger.error('Login error', { error: error.message, stack: error.stack });\n        \n        // Generate new token for error\n        const newToken = CSRFProtection.generateToken();\n        const headers = new Headers({\n          'Content-Type': 'text/html',\n          'Set-Cookie': `csrf_token=${newToken}; HttpOnly; SameSite=Strict; Path=/`\n        });\n        \n        return new Response(renderLoginForm({\n          error: 'An error occurred. Please try again.',\n          csrfToken: newToken\n        }), {\n          status: 500,\n          headers\n        });\n      }\n    }\n  },\n\n  '/logout': {\n    GET: async (request, env) => {\n      return new Response(null, {\n        status: 302,\n        headers: {\n          'Location': '/',\n          'Set-Cookie': `token=; Path=/; HttpOnly; Secure; SameSite=Strict; Max-Age=0`\n        }\n      });\n    },\n    POST: async (request, env) => {\n      return new Response(null, {\n        status: 302,\n        headers: {\n          'Location': '/',\n          'Set-Cookie': `token=; Path=/; HttpOnly; Secure; SameSite=Strict; Max-Age=0`\n        }\n      });\n    }\n  },\n\n  // Remove these temporary routes in production\n  '/check-users': {\n    GET: async (request, env) => {\n      const result = await env.DB.prepare('SELECT id, username, role FROM users').all();\n      return new Response(JSON.stringify(result.results, null, 2), {\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n  },\n\n  // Add this to src/routes/auth.js temporarily\n  '/generate-admin': {\n    GET: async (request, env) => {\n      const { hashPassword } = await import('../../../../lib.deadlight/core/src/auth/password.js');\n      \n      const password = 'gross-gnar';\n      const { hash, salt } = await hashPassword(password);\n      \n      const html = `\n        <h1>Admin User Creation</h1>\n        <p>Password: ${password}</p>\n        <p>Hash: ${hash}</p>\n        <p>Salt: ${salt}</p>\n        <h2>Run this command:</h2>\n        <pre>wrangler d1 execute blog_content_v3 --local --command \"INSERT INTO users (username, password, salt, role) VALUES ('admin', '${hash}', '${salt}', 'admin')\"</pre>\n      `;\n      \n      return new Response(html, {\n        headers: { 'Content-Type': 'text/html' }\n      });\n    }\n  },\n\n  '/clear-login-limit': {\n    GET: async (request, env) => {\n      const identifier = request.headers.get('CF-Connecting-IP') || \n                        request.headers.get('X-Forwarded-For') || \n                        'unknown';\n      const key = `rl:auth:${identifier}`;\n      await env.RATE_LIMIT.delete(key);\n      return new Response('Login rate limit cleared. <a href=\"/login\">Try login again</a>', {\n        status: 200,\n        headers: { 'Content-Type': 'text/html' }\n      });\n    }\n  }\n};", "// src/templates/auth/index.js\nexport { renderLoginForm } from './login.js';\n", "// src/templates/auth/login.js\nimport { renderAuthTemplate } from './base.js';\n\nexport function renderLoginForm(data = {}) {\n  const { error, validationErrors, username = '', csrfToken = '' } = data;\n  \n  // Build error display\n  let errorHtml = '';\n  if (error) {\n    errorHtml = `<div class=\"error-message\">${error}</div>`;\n  } else if (validationErrors) {\n    const errorMessages = Object.values(validationErrors).join('<br>');\n    errorHtml = `<div class=\"error-message\">${errorMessages}</div>`;\n  }\n  \n  const content = `\n    <div class=\"auth-container\">\n      ${errorHtml}\n      <form action=\"/login\" method=\"POST\">\n        <input type=\"hidden\" name=\"csrf_token\" value=\"${csrfToken}\">\n        <input \n          type=\"text\" \n          name=\"username\" \n          placeholder=\"Username\" \n          value=\"${username}\"\n          required\n          minlength=\"3\"\n          maxlength=\"20\"\n          pattern=\"[a-zA-Z0-9_-]+\"\n          title=\"Username can only contain letters, numbers, underscores, and hyphens\"\n        >\n        <input \n          type=\"password\" \n          name=\"password\" \n          placeholder=\"Password\" \n          required\n          minlength=\"8\"\n        >\n        <button type=\"submit\">Login</button>\n      </form>\n    </div>\n  `;\n  \n  return renderAuthTemplate('Login', content);\n}", "// src/templates/auth/base.js\nexport function renderAuthTemplate(title, bodyContent) {\n  return `\n    <!DOCTYPE html>\n    <html lang=\"en\" data-theme=\"dark\">\n    <head>\n      <meta charset=\"UTF-8\">\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n      <title>${title}</title>\n      <link rel=\"stylesheet\" href=\"/styles/theme.css\">\n      <link rel=\"stylesheet\" href=\"/styles/dark_min.css\" id=\"theme-stylesheet\">\n    </head>\n    <body>\n      <header>\n        <h1><a href=\"/\">${title}</a></h1>\n        <div class=\"theme-toggle-container\">\n          <button id=\"theme-toggle\" class=\"theme-toggle\" aria-label=\"Toggle theme\">\n            <span class=\"theme-icon\">\u2727</span>\n          </button>\n        </div>\n      </header>\n      ${bodyContent}\n      <script>\n        document.addEventListener('DOMContentLoaded', () => {\n          const themeToggle = document.getElementById('theme-toggle');\n          const html = document.documentElement;\n          const stylesheet = document.getElementById('theme-stylesheet');\n          \n          // Load saved theme\n          let currentTheme = localStorage.getItem('theme') || 'dark';\n          html.setAttribute('data-theme', currentTheme);\n          stylesheet.href = '/styles/' + currentTheme + '_min.css';\n\n          // Update theme icon\n          const themeIcon = themeToggle.querySelector('.theme-icon');\n          themeIcon.textContent = currentTheme === 'dark' ? '\u2667' : '\u25C7';\n          \n          // Handle theme toggle\n          themeToggle.addEventListener('click', () => {\n            currentTheme = currentTheme === 'dark' ? 'light' : 'dark';\n            \n            // Update localStorage\n            localStorage.setItem('theme', currentTheme);\n            \n            // Update HTML attribute\n            html.setAttribute('data-theme', currentTheme);\n            \n            // Update stylesheet\n            stylesheet.href = '/styles/' + currentTheme + '_min.css';\n            \n            // Update icon\n            themeIcon.textContent = currentTheme === 'dark' ? '\u2661' : '\u2664';\n          });\n        });\n      </script>\n    </body>\n    </html>\n  `;\n}", "// src/utils/auth.js\nimport { verifyJWT } from '../utils/jwt.js';\n\nexport async function hashPassword(password) {\n  const encoder = new TextEncoder();\n  const salt = crypto.getRandomValues(new Uint8Array(16));\n\n  // Import the password as a key\n  const keyMaterial = await crypto.subtle.importKey(\n    'raw',\n    encoder.encode(password),\n    'PBKDF2',\n    false,\n    ['deriveBits']\n  );\n\n  // Use PBKDF2 to derive the key\n  const derivedBits = await crypto.subtle.deriveBits(\n    {\n      name: 'PBKDF2',\n      salt: salt,\n      iterations: 100000,\n      hash: 'SHA-256',\n    },\n    keyMaterial,\n    256 // Length in bits\n  );\n\n  // Convert to hex strings\n  const hashArray = Array.from(new Uint8Array(derivedBits));\n  const hashHex = hashArray.map(b => b.toString(16).padStart(2, '0')).join('');\n  const saltHex = Array.from(salt).map(b => b.toString(16).padStart(2, '0')).join('');\n\n  return { hash: hashHex, salt: saltHex };\n}\n\nexport async function verifyPassword(password, storedHash, storedSalt) {\n  const encoder = new TextEncoder();\n  const salt = Uint8Array.from(\n    storedSalt.match(/.{1,2}/g).map(byte => parseInt(byte, 16))\n  );\n\n  // Import the password as a key\n  const keyMaterial = await crypto.subtle.importKey(\n    'raw',\n    encoder.encode(password),\n    'PBKDF2',\n    false,\n    ['deriveBits']\n  );\n\n  // Use PBKDF2 to derive the key\n  const derivedBits = await crypto.subtle.deriveBits(\n    {\n      name: 'PBKDF2',\n      salt: salt,\n      iterations: 100000,\n      hash: 'SHA-256',\n    },\n    keyMaterial,\n    256 // Length in bits\n  );\n\n  // Convert to hex string for comparison\n  const hashArray = Array.from(new Uint8Array(derivedBits));\n  const hashHex = hashArray.map(b => b.toString(16).padStart(2, '0')).join('');\n\n  return hashHex === storedHash;\n}\n\nexport async function checkAuth(request, env) {\n  const cookies = request.headers.get('Cookie') || '';\n  const token = cookies.split(';')\n    .map(c => c.trim())\n    .find(c => c.startsWith('token='))\n    ?.split('=')[1];\n  \n  if (!token) {\n    return null;\n  }\n\n  return await verifyJWT(token, env.JWT_SECRET);\n}", "// src/utils/jwt.js\nfunction base64UrlEncode(arrayBuffer) {\n  const uint8Array = new Uint8Array(arrayBuffer);\n  let base64String = '';\n\n  for (let i = 0; i < uint8Array.length; i++) {\n    base64String += String.fromCharCode(uint8Array[i]);\n  }\n\n  return btoa(base64String)\n    .replace(/=/g, '')\n    .replace(/\\+/g, '-')\n    .replace(/\\//g, '_');\n}\n\nfunction base64UrlDecode(base64UrlString) {\n  const base64String = base64UrlString\n    .replace(/-/g, '+')\n    .replace(/_/g, '/')\n    .padEnd(base64UrlString.length + (4 - (base64UrlString.length % 4)) % 4, '=');\n\n  const binaryString = atob(base64String);\n  const len = binaryString.length;\n  const bytes = new Uint8Array(len);\n\n  for (let i = 0; i < len; i++) {\n    bytes[i] = binaryString.charCodeAt(i);\n  }\n\n  return bytes.buffer;\n}\n\nexport async function createJWT(payload, secret) {\n  const encoder = new TextEncoder();\n  const header = { alg: 'HS256', typ: 'JWT' };\n\n  const encodedHeader = base64UrlEncode(encoder.encode(JSON.stringify(header)));\n  const encodedPayload = base64UrlEncode(encoder.encode(JSON.stringify(payload)));\n\n  const key = await crypto.subtle.importKey(\n    'raw',\n    encoder.encode(secret),\n    { name: 'HMAC', hash: 'SHA-256' },\n    false,\n    ['sign']\n  );\n\n  const data = `${encodedHeader}.${encodedPayload}`;\n  const signature = await crypto.subtle.sign('HMAC', key, encoder.encode(data));\n\n  const encodedSignature = base64UrlEncode(signature);\n\n  return `${encodedHeader}.${encodedPayload}.${encodedSignature}`;\n}\n\nexport async function verifyJWT(token, secret) {\n  try {\n    const encoder = new TextEncoder();\n\n    const [encodedHeader, encodedPayload, encodedSignature] = token.split('.');\n\n    if (!encodedHeader || !encodedPayload || !encodedSignature) {\n      console.log('Invalid token format');\n      return null;\n    }\n\n    const key = await crypto.subtle.importKey(\n      'raw',\n      encoder.encode(secret),\n      { name: 'HMAC', hash: 'SHA-256' },\n      false,\n      ['verify']\n    );\n\n    const data = `${encodedHeader}.${encodedPayload}`;\n    const signature = base64UrlDecode(encodedSignature);\n\n    const isValid = await crypto.subtle.verify(\n      'HMAC', \n      key, \n      signature, \n      encoder.encode(data)\n    );\n\n    if (!isValid) {\n      console.log('Invalid token signature');\n      return null;\n    }\n\n    // Decode and parse the payload\n    const decodedPayloadBytes = base64UrlDecode(encodedPayload);\n    const decodedPayloadString = new TextDecoder().decode(decodedPayloadBytes);\n    const payload = JSON.parse(decodedPayloadString);\n\n    return payload;\n  } catch (error) {\n    console.error('JWT verification error:', error);\n    return null;\n  }\n}", "// lib.deadlight/core/src/security/validation.js\nexport class Validator {\n  // Enhanced email validation\n  static email(email) {\n    if (!email || typeof email !== 'string') return false;\n    const re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return re.test(email) && email.length <= 255;\n  }\n  \n  // Enhanced username validation with error details\n  static username(username) {\n    if (!username || typeof username !== 'string') {\n      return { valid: false, error: 'Username is required' };\n    }\n    if (username.length < 3) {\n      return { valid: false, error: 'Username must be at least 3 characters' };\n    }\n    if (username.length > 20) {\n      return { valid: false, error: 'Username must not exceed 20 characters' };\n    }\n    if (!/^[a-zA-Z0-9_-]+$/.test(username)) {\n      return { valid: false, error: 'Username can only contain letters, numbers, underscores, and hyphens' };\n    }\n    return { valid: true };\n  }\n  \n  // Enhanced password validation\n  static password(password) {\n    if (!password || typeof password !== 'string') {\n      return { valid: false, error: 'Password is required' };\n    }\n    if (password.length < 8) {\n      return { valid: false, error: 'Password must be at least 8 characters' };\n    }\n    if (password.length > 100) {\n      return { valid: false, error: 'Password is too long' };\n    }\n    return { valid: true };\n  }\n  \n  // Validate blog post fields\n  static postTitle(title) {\n    if (!title || typeof title !== 'string') {\n      return { valid: false, error: 'Title is required' };\n    }\n    const trimmed = title.trim();\n    if (trimmed.length === 0) {\n      return { valid: false, error: 'Title cannot be empty' };\n    }\n    if (trimmed.length > 200) {\n      return { valid: false, error: 'Title must not exceed 200 characters' };\n    }\n    return { valid: true, value: trimmed };\n  }\n  \n  static postContent(content) {\n    if (!content || typeof content !== 'string') {\n      return { valid: false, error: 'Content is required' };\n    }\n    if (content.trim().length === 0) {\n      return { valid: false, error: 'Content cannot be empty' };\n    }\n    if (content.length > 50000) {\n      return { valid: false, error: 'Content is too long' };\n    }\n    return { valid: true };\n  }\n  \n  static postSlug(slug) {\n    if (!slug || typeof slug !== 'string') {\n      return { valid: false, error: 'Slug is required' };\n    }\n    if (!/^[a-z0-9-]+$/.test(slug)) {\n      return { valid: false, error: 'Slug can only contain lowercase letters, numbers, and hyphens' };\n    }\n    if (slug.length > 200) {\n      return { valid: false, error: 'Slug must not exceed 200 characters' };\n    }\n    return { valid: true };\n  }\n  \n  // Enhanced sanitization\n  static sanitizeString(str, maxLength = 1000) {\n    if (!str || typeof str !== 'string') return '';\n    return str\n      .slice(0, maxLength)\n      .replace(/[<>]/g, '') // Basic XSS prevention\n      .trim();\n  }\n  \n  // More robust HTML sanitization\n  static sanitizeHTML(input) {\n    if (!input || typeof input !== 'string') return '';\n    return input\n      .replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi, '')\n      .replace(/<style\\b[^<]*(?:(?!<\\/style>)<[^<]*)*<\\/style>/gi, '')\n      .replace(/<[^>]+>/g, '')\n      .replace(/javascript:/gi, '')\n      .replace(/on\\w+\\s*=/gi, '');\n  }\n  \n  // Escape HTML for safe display\n  static escapeHTML(input) {\n    if (!input || typeof input !== 'string') return '';\n    const escapeMap = {\n      '&': '&amp;',\n      '<': '&lt;',\n      '>': '&gt;',\n      '\"': '&quot;',\n      \"'\": '&#39;',\n      '/': '&#x2F;',\n    };\n    return input.replace(/[&<>\"'\\/]/g, char => escapeMap[char]);\n  }\n  \n  // Sanitize markdown (preserve formatting but remove dangerous content)\n  static sanitizeMarkdown(input) {\n    if (!input || typeof input !== 'string') return '';\n    return input\n      .replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi, '')\n      .replace(/<style\\b[^<]*(?:(?!<\\/style>)<[^<]*)*<\\/style>/gi, '')\n      .replace(/javascript:/gi, '')\n      .replace(/on\\w+\\s*=/gi, '');\n  }\n  \n  // Generate safe slug from title\n  static generateSlug(title) {\n    if (!title || typeof title !== 'string') return '';\n    return title\n      .toLowerCase()\n      .replace(/[^a-z0-9]+/g, '-')\n      .replace(/^-+|-+$/g, '')\n      .slice(0, 200);\n  }\n  \n  static isValidId(id) {\n    return /^\\d+$/.test(id);\n  }\n  \n  // Validate pagination\n  static page(page) {\n    const num = parseInt(page, 10);\n    if (isNaN(num) || num < 1) {\n      return { valid: false, error: 'Invalid page number', value: 1 };\n    }\n    return { valid: true, value: num };\n  }\n  \n  // Validate search query\n  static searchQuery(query) {\n    if (!query || typeof query !== 'string') {\n      return { valid: true, value: '' };\n    }\n    const trimmed = query.trim();\n    if (trimmed.length > 100) {\n      return { valid: false, error: 'Search query too long' };\n    }\n    return { valid: true, value: trimmed };\n  }\n}\n\n// Form validation helper\nexport class FormValidator {\n  constructor() {\n    this.errors = {};\n  }\n  \n  validate(field, value, validator) {\n    const result = validator(value);\n    if (result.valid === false) {\n      this.errors[field] = result.error;\n      return false;\n    }\n    return result.value !== undefined ? result.value : value;\n  }\n  \n  hasErrors() {\n    return Object.keys(this.errors).length > 0;\n  }\n  \n  getErrors() {\n    return this.errors;\n  }\n  \n  // Helper to validate form data\n  static async validateFormData(formData, rules) {\n    const validator = new FormValidator();\n    const validated = {};\n    \n    for (const [field, rule] of Object.entries(rules)) {\n      const value = formData.get(field);\n      const result = validator.validate(field, value, rule);\n      if (result !== false) {\n        validated[field] = result;\n      }\n    }\n    \n    return {\n      success: !validator.hasErrors(),\n      data: validated,\n      errors: validator.getErrors()\n    };\n  }\n}\n\n// lib.deadlight/core/src/security/validation.js - Simplified CSRF\nexport class CSRFProtection {\n  static generateToken() {\n    // Simple random token\n    return crypto.randomUUID();\n  }\n  \n  static async hashToken(token, secret) {\n    const encoder = new TextEncoder();\n    const data = encoder.encode(token + secret);\n    const hash = await crypto.subtle.digest('SHA-256', data);\n    return btoa(String.fromCharCode(...new Uint8Array(hash)));\n  }\n  \n  static getTokenFromCookie(request) {\n    const cookieHeader = request.headers.get('Cookie');\n    if (!cookieHeader) return null;\n    \n    const match = cookieHeader.match(/csrf_token=([^;]+)/);\n    return match ? match[1] : null;\n  }\n}", "// lib.deadlight/core/src/security/ratelimit.js\nexport class RateLimiter {\n  constructor(options = {}) {\n    this.windowMs = options.windowMs || 60000; // 1 minute\n    this.maxRequests = options.maxRequests || 10;\n    this.keyPrefix = options.keyPrefix || 'rl:';\n  }\n\n  async isAllowed(request, env, identifier) {\n    const key = this.getKey(identifier || this.getIdentifier(request));\n    const now = Date.now();\n    const windowStart = now - this.windowMs;\n    \n    // Get current attempts\n    const attempts = await env.RATE_LIMIT.get(key, { type: 'json' }) || [];\n    \n    // Filter out old attempts\n    const recentAttempts = attempts.filter(time => time > windowStart);\n    \n    if (recentAttempts.length >= this.maxRequests) {\n      return {\n        allowed: false,\n        remaining: 0,\n        resetAt: new Date(recentAttempts[0] + this.windowMs)\n      };\n    }\n    \n    // Add current attempt\n    recentAttempts.push(now);\n    await env.RATE_LIMIT.put(key, JSON.stringify(recentAttempts), {\n      expirationTtl: Math.ceil(this.windowMs / 1000)\n    });\n    \n    return {\n      allowed: true,\n      remaining: this.maxRequests - recentAttempts.length,\n      resetAt: new Date(now + this.windowMs)\n    };\n  }\n\n  getIdentifier(request) {\n    // Use IP address or a combination of factors\n    return request.headers.get('CF-Connecting-IP') || \n           request.headers.get('X-Forwarded-For') || \n           'unknown';\n  }\n\n  getKey(identifier) {\n    return `${this.keyPrefix}${identifier}`;\n  }\n}\n\n// Create specific limiters for different endpoints\nexport const authLimiter = new RateLimiter({\n  windowMs: 15 * 60 * 1000, // 15 minutes\n  maxRequests: 5, // 5 login attempts per 15 minutes\n  keyPrefix: 'rl:auth:'\n});\n\nexport const apiLimiter = new RateLimiter({\n  windowMs: 60 * 1000, // 1 minute\n  maxRequests: 60, // 60 requests per minute\n  keyPrefix: 'rl:api:'\n});", "// src/routes/admin.js - Refactored to use deadlight-lib\nimport { \n  renderAddPostForm, \n  renderEditPostForm, \n  renderAddUserForm, \n  renderDeleteConfirmation\n} from '../templates/admin/index.js';\nimport { handleProxyRoutes, handleProxyTests } from './proxy.js';\nimport { checkAuth } from '../utils/auth.js';\nimport { renderTemplate } from '../templates/base.js';\nimport { UserModel, PostModel } from '../../../../lib.deadlight/core/src/db/models/index.js';\nimport { Logger } from '../../../../lib.deadlight/core/src/logging/logger.js';\nimport { DatabaseError } from '../../../../lib.deadlight/core/src/db/base.js';\n\nexport const adminRoutes = {\n'/admin': {\n  GET: async (request, env) => {\n    const user = await checkAuth(request, env);\n    if (!user) {\n      return Response.redirect(`${new URL(request.url).origin}/login`);\n    }\n\n    try {\n      // Get dynamic config\n      const { configService } = await import('../services/config.js');\n      const config = await configService.getConfig(env.DB);\n\n      // Gather stats using direct DB queries\n      let stats = {\n        totalPosts: 0,\n        totalUsers: 0,\n        postsToday: 0,\n        publishedPosts: 0\n      };\n\n      let posts = [];\n      let requestStats = []; // You can implement this later if needed\n\n      try {\n        // Count total posts (excluding emails)\n        const postsCount = await env.DB.prepare(`\n          SELECT COUNT(*) as count FROM posts \n          WHERE (is_email = 0 OR is_email IS NULL)\n        `).first();\n        stats.totalPosts = postsCount?.count || 0;\n\n        // Count total users\n        const usersCount = await env.DB.prepare('SELECT COUNT(*) as count FROM users').first();\n        stats.totalUsers = usersCount?.count || 0;\n\n        // Count posts created today\n        const today = new Date().toISOString().split('T')[0];\n        const todayCount = await env.DB.prepare(`\n          SELECT COUNT(*) as count FROM posts \n          WHERE DATE(created_at) = ? AND (is_email = 0 OR is_email IS NULL)\n        `).bind(today).first();\n        stats.postsToday = todayCount?.count || 0;\n\n        // Count published posts\n        const publishedCount = await env.DB.prepare(`\n          SELECT COUNT(*) as count FROM posts \n          WHERE published = 1 AND (is_email = 0 OR is_email IS NULL)\n        `).first();\n        stats.publishedPosts = publishedCount?.count || 0;\n\n        // Get recent posts with author info\n        const recentPostsQuery = await env.DB.prepare(`\n          SELECT p.id, p.title, p.slug, p.created_at, p.published, p.author_id, u.username as author_username\n          FROM posts p\n          LEFT JOIN users u ON p.author_id = u.id\n          WHERE (p.is_email = 0 OR p.is_email IS NULL)\n          ORDER BY p.created_at DESC \n          LIMIT 10\n        `).all();\n        posts = recentPostsQuery.results || [];\n\n      } catch (dbError) {\n        console.error('Database query error in admin dashboard:', dbError);\n        // Keep default empty stats if queries fail\n      }\n\n      // Your template expects: renderAdminDashboard(stats, posts, requestStats, user, config)\n      const { renderAdminDashboard } = await import('../templates/admin/dashboard.js');\n      return new Response(renderAdminDashboard(stats, posts, requestStats, user, config), {\n        headers: { 'Content-Type': 'text/html' }\n      });\n\n    } catch (error) {\n      console.error('Admin dashboard error:', error);\n      \n      // Fallback with minimal stats\n      const fallbackStats = { totalPosts: 0, totalUsers: 0, postsToday: 0, publishedPosts: 0 };\n      const { renderAdminDashboard } = await import('../templates/admin/dashboard.js');\n      \n      try {\n        return new Response(renderAdminDashboard(fallbackStats, [], [], user, config), {\n          headers: { 'Content-Type': 'text/html' }\n        });\n      } catch (templateError) {\n        // Ultimate fallback\n        return new Response(`\n          <h1>Admin Dashboard</h1>\n          <p>Dashboard temporarily unavailable. <a href=\"/admin/add\">Add Post</a> | <a href=\"/admin/users\">Manage Users</a></p>\n        `, {\n          headers: { 'Content-Type': 'text/html' }\n        });\n      }\n    }\n  }\n},\n\n  '/admin/edit/:id': {\n    GET: async (request, env) => {\n      const postModel = new PostModel(env.DB);\n      const user = await checkAuth(request, env);\n      \n      if (!user) {\n        return Response.redirect(`${new URL(request.url).origin}/login`);\n      }\n\n      try {\n        // Get dynamic config\n        const { configService } = await import('../services/config.js');\n        const config = await configService.getConfig(env.DB);\n        \n        const postId = request.params.id;\n        const post = await postModel.getById(postId);\n\n        if (!post) {\n          return new Response('Post not found', { status: 404 });\n        }\n\n        return new Response(renderEditPostForm(post, user, config), {\n          headers: { 'Content-Type': 'text/html' }\n        });\n      } catch (error) {\n        console.error('Error loading post for edit:', error);\n        return new Response('Internal server error', { status: 500 });\n      }\n    },\n\n    // Combined POST handler for /admin/edit/:id\n    POST: async (request, env) => {\n      const postModel = new PostModel(env.DB);\n      const logger = new Logger({ context: 'admin' });\n      const user = await checkAuth(request, env);\n      \n      if (!user) {\n        return Response.redirect(`${new URL(request.url).origin}/login`);\n      }\n\n      try {\n        const postId = request.params.id;\n        \n        // Get the existing post first\n        const existingPost = await postModel.getById(postId);\n        if (!existingPost) {\n          return new Response('Post not found', { status: 404 });\n        }\n        \n        const formData = await request.formData();\n        const title = formData.get('title');\n        const content = formData.get('content');\n        const slug = formData.get('slug') || '';\n        const excerpt = formData.get('excerpt') || '';\n        const published = formData.has('published');\n        \n        if (!title || !content) {\n          return new Response('Title and content are required', { status: 400 });\n        }\n        \n        // Only update slug if it changed and is not empty\n        const updatedSlug = slug && slug !== existingPost.slug \n          ? slug \n          : existingPost.slug;\n        \n        // Update post using model\n        const updatedPost = await postModel.update(postId, { \n          title, \n          content,\n          slug: updatedSlug,\n          excerpt,\n          published\n        });\n\n        logger.info('Post updated successfully', { \n          postId, \n          title,\n          slug: updatedPost.slug,\n          published: updatedPost.published \n        });\n\n        return Response.redirect(`${new URL(request.url).origin}/`);\n      } catch (error) {\n        logger.error('Error updating post', { postId: request.params.id, error: error.message });\n        \n        if (error instanceof DatabaseError && error.code === 'NOT_FOUND') {\n          return new Response('Post not found', { status: 404 });\n        }\n        \n        return new Response(`Failed to update post: ${error.message}`, { status: 500 });\n      }\n    }\n  },\n\n  '/admin/settings': {\n    GET: async (request, env) => {\n      const user = await checkAuth(request, env);\n      if (!user) {\n        return Response.redirect(`${new URL(request.url).origin}/login`);\n      }\n\n      try {\n        const { SettingsModel } = await import('../../../../lib.deadlight/core/src/db/models/index.js');\n        const settingsModel = new SettingsModel(env.DB);\n        const settings = await settingsModel.getAll();\n        \n        const { renderSettings } = await import('../templates/admin/settings.js');\n        return new Response(renderSettings(settings, user), {\n          headers: { 'Content-Type': 'text/html' }\n        });\n      } catch (error) {\n        console.error('Settings error:', error);\n        return new Response('Internal server error', { status: 500 });\n      }\n    },\n\n    POST: async (request, env) => {\n      const user = await checkAuth(request, env);\n      if (!user) {\n        return Response.redirect(`${new URL(request.url).origin}/login`);\n      }\n\n      try {\n        const formData = await request.formData();\n        const { SettingsModel } = await import('../../../../lib.deadlight/core/src/db/models/index.js');\n        const settingsModel = new SettingsModel(env.DB);\n        \n        // Update text/number settings\n        await settingsModel.set('site_title', formData.get('site_title') || '', 'string');\n        await settingsModel.set('site_description', formData.get('site_description') || '', 'string');\n        await settingsModel.set('posts_per_page', formData.get('posts_per_page') || '10', 'number');\n        await settingsModel.set('date_format', formData.get('date_format') || 'M/D/YYYY', 'string');\n        await settingsModel.set('timezone', formData.get('timezone') || 'UTC', 'string');\n        \n        // Update boolean settings (checkboxes)\n        await settingsModel.set('enable_registration', formData.has('enable_registration'), 'boolean');\n        await settingsModel.set('require_login_to_read', formData.has('require_login_to_read'), 'boolean');\n        await settingsModel.set('maintenance_mode', formData.has('maintenance_mode'), 'boolean');\n        \n        // Clear config cache so changes take effect immediately\n        const { configService } = await import('../services/config.js');\n        configService.clearCache();\n        \n        return Response.redirect(`${new URL(request.url).origin}/admin`);\n      } catch (error) {\n        console.error('Settings update error:', error);\n        return new Response('Failed to update settings', { status: 500 });\n      }\n    }\n  },\n\n  '/admin/add': {\n    GET: async (request, env) => {\n      const user = await checkAuth(request, env);\n      if (!user) {\n        return Response.redirect(`${new URL(request.url).origin}/login`);\n      }\n\n      // Get dynamic config\n      const { configService } = await import('../services/config.js');\n      const config = await configService.getConfig(env.DB);\n\n      return new Response(renderAddPostForm(user, config), {\n        headers: { 'Content-Type': 'text/html' }\n      });\n    },\n\n    POST: async (request, env) => {\n      const postModel = new PostModel(env.DB);\n      const logger = new Logger({ context: 'admin' });\n      const user = await checkAuth(request, env);\n      \n      if (!user) {\n        return Response.redirect(`${new URL(request.url).origin}/login`);\n      }\n\n      try {\n        const formData = await request.formData();\n        const title = formData.get('title');\n        const content = formData.get('content');\n        const slug = formData.get('slug') || '';\n        const excerpt = formData.get('excerpt') || '';\n        // Check if checkbox is present (checkboxes only send value when checked)\n        const published = formData.has('published');\n\n        logger.info('Adding post', { \n          title, \n          contentLength: content?.length,\n          published // Log the published status\n        });\n\n        if (!title || !content) {\n          return new Response('Title and content are required', { status: 400 });\n        }\n\n        // Create post using model with all required fields\n        const newPost = await postModel.create({\n          title,\n          content,\n          slug: slug || postModel.generateSlug(title),\n          excerpt,\n          author_id: user.id,\n          published // This will be true/false\n        });\n\n        logger.info('Post created successfully', { \n          postId: newPost.id, \n          title,\n          published: newPost.published \n        });\n\n        return Response.redirect(`${new URL(request.url).origin}/`);\n      } catch (error) {\n        logger.error('Error adding post', { error: error.message });\n        \n        if (error instanceof DatabaseError) {\n          return new Response(`Database error: ${error.message}`, { status: 500 });\n        }\n        \n        return new Response('Failed to add post', { status: 500 });\n      }\n    }\n  },\n\n  '/admin/delete/:id': {\n    POST: async (request, env) => {\n      const postModel = new PostModel(env.DB);\n      const logger = new Logger({ context: 'admin' });\n      const user = await checkAuth(request, env);\n      \n      if (!user) {\n        return Response.redirect(`${new URL(request.url).origin}/login`);\n      }\n\n      try {\n        const postId = request.params.id;\n        \n        // Delete post using model\n        await postModel.delete(postId);\n\n        logger.info('Post deleted successfully', { postId });\n\n        return Response.redirect(`${new URL(request.url).origin}/`);\n      } catch (error) {\n        logger.error('Error deleting post', { postId: request.params.id, error: error.message });\n        \n        if (error instanceof DatabaseError && error.code === 'NOT_FOUND') {\n          return new Response('Post not found', { status: 404 });\n        }\n        \n        return new Response('Failed to delete post', { status: 500 });\n      }\n    }\n  },\n\n  '/admin/users': {\n    GET: async (request, env) => {\n      const userModel = new UserModel(env.DB);\n      const user = await checkAuth(request, env);\n      \n      if (!user) {\n        return Response.redirect(`${new URL(request.url).origin}/login`);\n      }\n\n      try {\n        // Get dynamic config\n        const { configService } = await import('../services/config.js');\n        const config = await configService.getConfig(env.DB);\n        \n        // Get all users (paginated in the future if needed)\n        const users = await userModel.list({ limit: 50 });\n        const totalUsers = await userModel.count();\n\n        // Use the template instead of inline HTML\n        const { renderUserManagement } = await import('../templates/admin/userManagement.js');\n        \n        return new Response(renderUserManagement(users, user, config), {\n          headers: { 'Content-Type': 'text/html' }\n        });\n      } catch (error) {\n        console.error('User management error:', error);\n        return new Response('Internal server error', { status: 500 });\n      }\n    }\n  },\n\n  '/admin/users/add': {\n    GET: async (request, env) => {\n      const user = await checkAuth(request, env);\n      if (!user) {\n        return Response.redirect(`${new URL(request.url).origin}/login`);\n      }\n\n      // Get dynamic config\n      const { configService } = await import('../services/config.js');\n      const config = await configService.getConfig(env.DB);\n\n      return new Response(renderAddUserForm(user, config), {\n        headers: { 'Content-Type': 'text/html' }\n      });\n    },\n\n    POST: async (request, env) => {\n      const userModel = new UserModel(env.DB);\n      const logger = new Logger({ context: 'admin' });\n      const user = await checkAuth(request, env);\n      \n      if (!user) {\n        return Response.redirect(`${new URL(request.url).origin}/login`);\n      }\n\n      try {\n        const formData = await request.formData();\n        const username = formData.get('username');\n        const password = formData.get('password');\n        const role = formData.get('role') || 'user';\n\n        if (!username || !password) {\n          return new Response('Username and password are required', { status: 400 });\n        }\n\n        // Create user using model\n        const newUser = await userModel.create({ username, password, role });\n\n        logger.info('User created successfully', { userId: newUser.id, username, role });\n\n        return Response.redirect(`${new URL(request.url).origin}/admin/users`);\n      } catch (error) {\n        logger.error('Error creating user', { error: error.message });\n        \n        if (error instanceof DatabaseError && error.code === 'DUPLICATE_USER') {\n          return new Response('Username already exists', { status: 400 });\n        }\n        \n        return new Response('Failed to create user', { status: 500 });\n      }\n    }\n  },\n\n  '/admin/users/delete/:id': {\n    POST: async (request, env) => {\n      const userModel = new UserModel(env.DB);\n      const logger = new Logger({ context: 'admin' });\n      const user = await checkAuth(request, env);\n      \n      if (!user) {\n        return Response.redirect(`${new URL(request.url).origin}/login`);\n      }\n\n      try {\n        const userId = parseInt(request.params.id);\n        \n        // Prevent self-deletion\n        if (userId === user.id) {\n          return new Response('Cannot delete yourself', { status: 400 });\n        }\n\n        // Delete user using model\n        await userModel.delete(userId);\n\n        logger.info('User deleted successfully', { userId });\n\n        return Response.redirect(`${new URL(request.url).origin}/admin/users`);\n      } catch (error) {\n        logger.error('Error deleting user', { userId: request.params.id, error: error.message });\n        return new Response('Failed to delete user', { status: 500 });\n      }\n    }\n  },\n\n  // Proxy Dashboard\n  '/admin/proxy': {\n    GET: async (request, env) => {\n      const user = await checkAuth(request, env);\n      if (!user) {\n        return Response.redirect(`${new URL(request.url).origin}/login`);\n      }\n\n      return await handleProxyRoutes(request, env, user);\n    }\n  },\n\n  // Proxy API Test Endpoints\n  '/admin/proxy/test-blog-api': {\n    GET: async (request, env) => {\n      const user = await checkAuth(request, env);\n      if (!user) {\n        return Response.json({ success: false, error: 'Unauthorized' }, { status: 401 });\n      }\n\n      return await handleProxyTests.testBlogApi(request, env);\n    }\n  },\n\n  '/admin/proxy/test-email-api': {\n    GET: async (request, env) => {\n      const user = await checkAuth(request, env);\n      if (!user) {\n        return Response.json({ success: false, error: 'Unauthorized' }, { status: 401 });\n      }\n\n      return await handleProxyTests.testEmailApi(request, env);\n    }\n  },\n\n  '/admin/proxy/test-federation': {\n    GET: async (request, env) => {\n      const user = await checkAuth(request, env);\n      if (!user) {\n        return Response.json({ success: false, error: 'Unauthorized' }, { status: 401 });\n      }\n\n      return await handleProxyTests.testFederation(request, env);\n    }\n  },\n\n  '/admin/proxy/send-test-email': {\n    POST: async (request, env) => {\n      const user = await checkAuth(request, env);\n      if (!user) {\n        return Response.json({ success: false, error: 'Unauthorized' }, { status: 401 });\n      }\n\n      return await handleProxyTests.sendTestEmail(request, env);\n    }\n  },\n  \n  '/admin/process-outbox': {\n      POST: async (request, env) => {\n          const user = await checkAuth(request, env);\n          if (!user) {\n              return Response.json({ success: false, error: 'Unauthorized' }, { status: 401 });\n          }\n\n          try {\n              // Import and use the OutboxService (you'll create this)\n              const { OutboxService } = await import('../services/outbox.js');\n              const outbox = new OutboxService(env);\n              const result = await outbox.processQueue();\n\n              if (result.error) {\n                  return Response.json({ \n                      success: false, \n                      error: result.error,\n                      message: `Failed to process queue: ${result.error}`\n                  });\n              }\n\n              return Response.json({ \n                  success: true, \n                  processed: result.processed || 0,\n                  queued: result.queued || 0,\n                  message: `\u2705 Processed ${result.processed || 0} operations. ${result.queued || 0} remaining in queue.`\n              });\n          } catch (error) {\n              console.error('Outbox processing error:', error);\n              return Response.json({ \n                  success: false, \n                  error: error.message,\n                  message: `Failed to process queue: ${error.message}`\n              });\n          }\n      }\n  },\n  // Add to admin.js - endpoint for receiving federated posts\n  '/federation/receive': {\n      POST: async (request, env) => {\n          const { post } = await request.json();\n          \n          // Verify sender domain, prevent spam, etc.\n          await env.DB.prepare(`\n              INSERT INTO federated_posts (source_domain, title, content, author, published_at, source_url)\n              VALUES (?, ?, ?, ?, ?, ?)\n          `).bind(post.source_domain, post.title, post.content, post.author, post.published_at, post.source_url).run();\n          \n          // Optional: Auto-approve trusted domains or require moderation\n          return Response.json({ success: true, message: 'Federated post received' });\n      }\n  },\n\n  '/admin/inject-emails': {\n    GET: async (request, env) => {\n      const user = await checkAuth(request, env);\n      if (!user || user.role !== 'admin') {\n        return Response.redirect(`${new URL(request.url).origin}/login`);\n      }\n\n      const content = `\n        <h1>Inject Emails</h1>\n        <p>This will inject mock email data into the posts table for testing purposes.</p>\n        <form action=\"/admin/inject-emails\" method=\"POST\">\n          <button type=\"submit\">Inject Mock Emails</button>\n        </form>\n        <div class=\"admin-actions\">\n          <a href=\"/admin\" class=\"button secondary\">Back to Dashboard</a>\n          <a href=\"/inbox\" class=\"button\">View Inbox</a>\n        </div>\n      `;\n\n      return new Response(renderTemplate('Inject Emails', content, user), {\n        headers: { 'Content-Type': 'text/html' }\n      });\n    },\n\n    POST: async (request, env) => {\n      const logger = new Logger({ context: 'admin' });\n      const user = await checkAuth(request, env);\n      if (!user || user.role !== 'admin') {\n        return Response.redirect(`${new URL(request.url).origin}/login`);\n      }\n\n      try {\n        // Mock email data to inject (replace with real data source later if needed)\n        const mockEmails = [\n          {\n            subject: \"Your account is live - join millions of businesses on Google\",\n            body: \"thatch, welcome to Google\\n\\nNow you can start growing your business.\\n\\nComplete your profile  \\n<https://business.google.com/create?hl=en&gmbsrc=US-en-et-em-z-gmb-z-l~wlcemnewv%7Ccreate&mcsubid=ww-ww-xs-mc-simedm-1-simometest!o3&trk=https%3A%2F%2Fc.gle%2FANiao5o-_gstjXfaH2vfT_kVzzSgMwbu_1X48UquUw0U6Zg1mL4h9fJvctaO5ZJBjaNHYTlIkvKGEO_YHYziseGVtWfCGQ5fZyLL60gkNNhfvIy9IkLOkgX0mej2jq0l6fkuRfcsmF7ZAlQ>\\n\\nCongratulations \u2013 your account is live and ready for action. You now have access to a range of tools that can help your business reach more people.\\n\\n...\",\n            from: \"Google Community Team <googlecommunityteam-noreply@google.com>\",\n            to: \"deadlight.boo@gmail.com\",\n            date: \"Sat, 02 Aug 2025 07:21:59 -0700\",\n            message_id: \"a1d91498095de4b1b3de613c0fe9cd1471d1f0d1-20166281-111702100@google.com\"\n          },\n          {\n            subject: \"Test Email for Deadlight Comm\",\n            body: \"Hello,\\n\\nThis is a test email to check if the inbox rendering works correctly in Deadlight Comm.\\n\\nBest regards,\\nTest User\",\n            from: \"Test User <test@example.com>\",\n            to: \"deadlight.boo@gmail.com\",\n            date: \"Sun, 03 Aug 2025 10:00:00 -0700\",\n            message_id: \"test-1234567890@example.com\"\n          }\n        ];\n\n        let insertedCount = 0;\n        for (const email of mockEmails) {\n          try {\n            const metadata = JSON.stringify({\n              from: email.from,\n              to: email.to,\n              message_id: email.message_id,\n              date: email.date\n            });\n            // Simplify duplicate check by extracting a short unique part of message_id\n            // Use first 20 chars or so to avoid complex LIKE patterns\n            const shortMsgId = email.message_id.length > 20 ? email.message_id.substring(0, 20) : email.message_id;\n            const checkQuery = 'SELECT id FROM posts WHERE is_email = 1 AND email_metadata LIKE ? LIMIT 1';\n            const existing = await env.DB.prepare(checkQuery).bind(`%${shortMsgId}%`).first();\n            if (!existing) {\n              const insertQuery = `\n                INSERT INTO posts (title, content, slug, author_id, created_at, updated_at, published, is_email, email_metadata)\n                VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)\n              `;\n              await env.DB.prepare(insertQuery).bind(\n                email.subject,\n                email.body,\n                `email-${Date.now()}-${Math.random().toString(36).substring(2, 7)}`, // Unique slug\n                user.id, // Use logged-in user's ID\n                email.date || new Date().toISOString(),\n                new Date().toISOString(),\n                0, // Not published (private)\n                1, // is_email flag\n                metadata\n              ).run();\n              insertedCount++;\n              logger.info(`Injected email: ${email.subject}`, { userId: user.id });\n            } else {\n              logger.info(`Skipped existing email: ${email.subject}`, { userId: user.id });\n            }\n          } catch (err) {\n            logger.error(`Error injecting email ${email.subject}:`, { error: err.message, userId: user.id });\n          }\n        }\n\n        const content = `\n          <h2>Injection Complete</h2>\n          <p>Inserted ${insertedCount} email(s) into the database.</p>\n          <div class=\"admin-actions\">\n            <a href=\"/inbox\" class=\"button\">View Inbox</a>\n            <a href=\"/admin\" class=\"button secondary\">Back to Dashboard</a>\n          </div>\n        `;\n        return new Response(renderTemplate('Injection Complete', content, user), {\n          headers: { 'Content-Type': 'text/html' }\n        });\n      } catch (error) {\n        logger.error('Error injecting emails', { error: error.message, userId: user.id });\n        return new Response(renderTemplate('Error', `<p>Failed to inject emails: ${error.message}</p>`, user), {\n          headers: { 'Content-Type': 'text/html' },\n          status: 500\n        });\n      }\n    }\n  },\n\n  '/admin/fetch-emails': {\n    POST: async (request, env) => {\n      const logger = new Logger({ context: 'admin' });\n      const user = await checkAuth(request, env);\n      if (!user || user.role !== 'admin') {\n        // Also allow API key authentication for automation\n        const apiKey = request.headers.get('X-API-Key');\n        const expectedKey = env.API_KEY || 'YOUR_API_KEY'; // Set in wrangler.toml or as secret\n        if (apiKey !== expectedKey) {\n          logger.warn('Unauthorized fetch-emails attempt', { ip: request.headers.get('CF-Connecting-IP') || 'unknown' });\n          return new Response(JSON.stringify({ error: 'Unauthorized' }), {\n            headers: { 'Content-Type': 'application/json' },\n            status: 403\n          });\n        }\n      }\n\n      try {\n        const payload = await request.json();\n        let insertedCount = 0;\n        if (Array.isArray(payload.emails)) {\n          for (const email of payload.emails) {\n            try {\n              const metadata = JSON.stringify({\n                from: email.from || 'Unknown Sender',\n                to: email.to || 'Unknown Recipient',\n                message_id: email.message_id || `msg-${Date.now()}-${Math.random().toString(36).substring(2, 7)}`,\n                date: email.date || new Date().toISOString()\n              });\n              // Check for duplicates by message_id (simplified)\n              const checkQuery = 'SELECT id FROM posts WHERE is_email = 1 AND title = ? LIMIT 1';\n              const existing = await env.DB.prepare(checkQuery).bind(email.subject || 'Untitled Email').first();\n              if (!existing) {\n                const insertQuery = `\n                  INSERT INTO posts (title, content, slug, author_id, created_at, updated_at, published, is_email, email_metadata)\n                  VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)\n                `;\n                await env.DB.prepare(insertQuery).bind(\n                  email.subject || 'Untitled Email',\n                  email.body || 'No content',\n                  `email-${Date.now()}-${Math.random().toString(36).substring(2, 7)}`, // Unique slug\n                  user?.id || 2, // Use logged-in user's ID or default admin ID\n                  email.date || new Date().toISOString(),\n                  new Date().toISOString(),\n                  0, // Not published (private)\n                  1, // is_email flag\n                  metadata\n                ).run();\n                insertedCount++;\n                logger.info(`Fetched and inserted email: ${email.subject || 'Untitled Email'}`, { userId: user?.id || 'API' });\n              } else {\n                logger.info(`Skipped existing email: ${email.subject || 'Untitled Email'}`, { userId: user?.id || 'API' });\n              }\n            } catch (err) {\n              logger.error(`Error inserting email ${email.subject || 'Untitled Email'}:`, { error: err.message, userId: user?.id || 'API' });\n            }\n          }\n        }\n        return new Response(JSON.stringify({ success: true, inserted: insertedCount }), {\n          headers: { 'Content-Type': 'application/json' }\n        });\n      } catch (error) {\n        logger.error('Error fetching emails via API', { error: error.message, userId: user?.id || 'API' });\n        return new Response(JSON.stringify({ error: 'Failed to fetch emails', details: error.message }), {\n          headers: { 'Content-Type': 'application/json' },\n          status: 500\n        });\n      }\n    }\n  },\n\n  '/admin/pending-replies': {\n    GET: async (request, env) => {\n      const logger = new Logger({ context: 'admin' });\n      const user = await checkAuth(request, env);\n      const apiKey = request.headers.get('X-API-Key');\n      const expectedKey = env.X_API_KEY || 'YOUR_API_KEY';\n      \n      // Debug logging (remove in production)\n      console.log('Debugging API Key - Received:', apiKey ? apiKey.substring(0, 5) + '...' : 'none');\n      console.log('Debugging API Key - Expected:', expectedKey ? expectedKey.substring(0, 5) + '...' : 'none');\n      \n      // Fix authentication logic: Allow access if user is admin OR API key matches\n      const isAuthenticated = (user && user.role === 'admin') || (apiKey === expectedKey);\n      if (!isAuthenticated) {\n        logger.warn('Unauthorized pending-replies attempt', { \n          ip: request.headers.get('CF-Connecting-IP') || 'unknown',\n          keyProvided: !!apiKey,\n          userPresent: !!user,\n          userRole: user ? user.role : 'none'\n        });\n        return new Response(JSON.stringify({ error: 'Unauthorized' }), {\n          headers: { 'Content-Type': 'application/json' },\n          status: 403\n        });\n      }\n      \n      try {\n        const query = 'SELECT * FROM posts WHERE is_reply_draft = 1 AND email_metadata LIKE \\'%sent\":false%\\'';\n        const repliesResult = await env.DB.prepare(query).all();\n        const pendingReplies = repliesResult.results.map(reply => {\n          const metadata = reply.email_metadata ? JSON.parse(reply.email_metadata) : {};\n          return {\n            id: reply.id,\n            to: metadata.to || 'Unknown',\n            from: metadata.from || 'deadlight.boo@gmail.com',\n            subject: reply.title,\n            body: reply.content,\n            original_id: metadata.original_id || null,\n            queued_at: metadata.date_queued || reply.created_at\n          };\n        });\n        \n        return new Response(JSON.stringify({ success: true, replies: pendingReplies }), {\n          headers: { 'Content-Type': 'application/json' }\n        });\n      } catch (error) {\n        logger.error('Error fetching pending replies', { error: error.message, userId: user?.id || 'API' });\n        return new Response(JSON.stringify({ error: 'Failed to fetch pending replies', details: error.message }), {\n          headers: { 'Content-Type': 'application/json' },\n          status: 500\n        });\n      }\n    },\n\n    POST: async (request, env) => {\n      const logger = new Logger({ context: 'admin' });\n      const user = await checkAuth(request, env);\n      const apiKey = request.headers.get('X-API-Key');\n      const expectedKey = env.X_API_KEY || 'YOUR_API_KEY';\n      \n      // Fix authentication logic: Allow access if user is admin OR API key matches\n      const isAuthenticated = (user && user.role === 'admin') || (apiKey === expectedKey);\n      if (!isAuthenticated) {\n        logger.warn('Unauthorized mark-sent attempt', { \n          ip: request.headers.get('CF-Connecting-IP') || 'unknown',\n          keyProvided: !!apiKey,\n          userPresent: !!user,\n          userRole: user ? user.role : 'none'\n        });\n        return new Response(JSON.stringify({ error: 'Unauthorized' }), {\n          headers: { 'Content-Type': 'application/json' },\n          status: 403\n        });\n      }\n      \n      try {\n        const payload = await request.json();\n        const replyId = payload.id;\n        if (!replyId) {\n          return new Response(JSON.stringify({ error: 'Reply ID required' }), {\n            headers: { 'Content-Type': 'application/json' },\n            status: 400\n          });\n        }\n        \n        const query = 'SELECT * FROM posts WHERE id = ? AND is_reply_draft = 1';\n        const replyResult = await env.DB.prepare(query).bind(replyId).first();\n        if (!replyResult) {\n          return new Response(JSON.stringify({ error: 'Reply not found' }), {\n            headers: { 'Content-Type': 'application/json' },\n            status: 404\n          });\n        }\n        \n        const metadata = replyResult.email_metadata ? JSON.parse(replyResult.email_metadata) : {};\n        metadata.sent = true;\n        metadata.date_sent = new Date().toISOString();\n        const updateQuery = 'UPDATE posts SET email_metadata = ?, updated_at = ? WHERE id = ?';\n        await env.DB.prepare(updateQuery).bind(\n          JSON.stringify(metadata),\n          new Date().toISOString(),\n          replyId\n        ).run();\n        \n        logger.info(`Marked reply ${replyId} as sent`, { userId: user?.id || 'API' });\n        return new Response(JSON.stringify({ success: true, id: replyId }), {\n          headers: { 'Content-Type': 'application/json' }\n        });\n      } catch (error) {\n        logger.error('Error marking reply as sent', { error: error.message, userId: user?.id || 'API' });\n        return new Response(JSON.stringify({ error: 'Failed to mark reply as sent', details: error.message }), {\n          headers: { 'Content-Type': 'application/json' },\n          status: 500\n        });\n      }\n    }\n  }\n};", "// src/templates/admin/index.js\nexport { renderAddPostForm } from './addPost.js';\nexport { renderEditPostForm } from './editPost.js';\nexport { renderAddUserForm } from './addUser.js';\nexport { renderDeleteConfirmation } from './deletePost.js';\nexport { renderAdminDashboard } from './dashboard.js';\nexport { renderUserManagement } from './userManagement.js';\nexport { renderSettings } from './settings.js'; ", "// src/templates/admin/addPost.js\nimport { renderTemplate } from '../base.js';\n\nexport function renderAddPostForm(user, config = null) {\n  const content = `\n    <div class=\"admin-form-container\">\n      <h1>Add New Post</h1>\n      <form method=\"POST\" action=\"/admin/add\" class=\"post-form\">\n        <div class=\"form-group\">\n          <label for=\"title\">Title</label>\n          <input type=\"text\" id=\"title\" name=\"title\" required autofocus>\n        </div>\n        \n        <div class=\"form-group\">\n          <label for=\"slug\">Slug (URL path)</label>\n          <input type=\"text\" id=\"slug\" name=\"slug\" \n                 pattern=\"[a-z0-9-]+\" title=\"Only lowercase letters, numbers, and hyphens allowed\">\n          <small>Leave blank to auto-generate from title</small>\n        </div>\n        \n        <div class=\"form-group\">\n          <label for=\"content\">Content (Markdown supported)</label>\n          <textarea id=\"content\" name=\"content\" rows=\"20\" required \n                    placeholder=\"Write your post content here...\n\nUse **bold** and *italic* text, add [links](https://example.com), and more!\n\n## Headings\n### Subheadings\n\n- List items\n- Another item\n\n\\`\\`\\`javascript\n// Code blocks work too!\nconsole.log('Hello world!');\n\\`\\`\\`\n\nAdd <!--more--> to create a custom excerpt break point.\"></textarea>\n        </div>\n        \n        <div class=\"form-group checkbox-group\">\n          <label class=\"checkbox-label\">\n            <input type=\"checkbox\" name=\"published\" value=\"true\" checked>\n            <span>Publish immediately</span>\n          </label>\n        </div>\n        \n        <div class=\"form-actions\">\n          <button type=\"submit\" class=\"button primary\">Create Post</button>\n          <a href=\"/admin\" class=\"button\">Cancel</a>\n        </div>\n      </form>\n    </div>\n  `;\n\n  return renderTemplate('Add New Post', content, user, config);\n}", "// src/templates/admin/editPost.js\nimport { renderTemplate } from '../base.js';\n\nexport function renderEditPostForm(post, user, config = null) {\n  const content = `\n    <div class=\"admin-form-container\">\n      <h1>Edit Post</h1>\n      <div class=\"post-meta\">\n        <p>Created: ${new Date(post.created_at).toLocaleString()}</p>\n        <p>Last Updated: ${new Date(post.updated_at).toLocaleString()}</p>\n        <p>URL: <a href=\"/post/${post.slug}\" target=\"_blank\">/post/${post.slug}</a></p>\n      </div>\n      \n      <form method=\"POST\" action=\"/admin/edit/${post.id}\" class=\"post-form\">\n        <div class=\"form-group\">\n          <label for=\"title\">Title</label>\n          <input type=\"text\" id=\"title\" name=\"title\" value=\"${post.title}\" required>\n        </div>\n        \n        <div class=\"form-group\">\n          <label for=\"slug\">Slug (URL path)</label>\n          <input type=\"text\" id=\"slug\" name=\"slug\" value=\"${post.slug}\" \n                 pattern=\"[a-z0-9-]+\" title=\"Only lowercase letters, numbers, and hyphens allowed\">\n          <small>Leave blank to auto-generate from title</small>\n        </div>\n        \n        <div class=\"form-group\">\n          <label for=\"content\">Content (Markdown supported)</label>\n          <textarea id=\"content\" name=\"content\" rows=\"20\" required>${post.content}</textarea>\n        </div>\n        \n        <div class=\"form-group checkbox-group\">\n          <label class=\"checkbox-label\">\n            <input type=\"checkbox\" name=\"published\" value=\"true\" ${post.published ? 'checked' : ''}>\n            <span>${post.published ? 'Published' : 'Draft'} - uncheck to unpublish</span>\n          </label>\n        </div>\n        \n        <div class=\"form-actions\">\n          <button type=\"submit\" class=\"button primary\">Update Post</button>\n          <a href=\"/admin\" class=\"button\">Cancel</a>\n          <a href=\"/post/${post.slug}\" class=\"button\" target=\"_blank\">View Post</a>\n        </div>\n      </form>\n    </div>\n  `;\n\n  return renderTemplate('Edit Post', content, user, config);\n}", "// src/templates/admin/addUser.js\nimport { renderTemplate } from '../base.js';\n\nexport function renderAddUserForm(user = null, config = null) {\n  const content = `\n    <div class=\"auth-container\">\n      <h2>Add New User</h2>\n      <form method=\"POST\">\n        <input \n          type=\"text\" \n          name=\"username\" \n          placeholder=\"Username\" \n          required\n        />\n        <input \n          type=\"password\" \n          name=\"password\" \n          placeholder=\"Password\" \n          required\n          minlength=\"8\"\n        />\n        <select name=\"role\" required>\n          <option value=\"user\">User</option>\n          <option value=\"editor\">Editor</option>\n          <option value=\"admin\">Admin</option>\n        </select>\n        <button type=\"submit\">Create User</button>\n        <a href=\"/admin/users\" style=\"display: block; text-align: center; margin-top: 1rem;\">Cancel</a>\n      </form>\n    </div>\n  `;\n\n  return renderTemplate('Add User', content, user, config);\n}", "// src/templates/admin/deletePost.js\nimport { renderTemplate } from '../base.js';\n\nexport function renderDeleteConfirmation(post, user = null, config = null) {\n  const content = `\n    <div class=\"delete-confirmation\">\n      <h1>Delete Post</h1>\n      <p>Are you sure you want to delete \"${post.title}\"?</p>\n      <div class=\"post-preview\">\n        <strong>Title:</strong> ${post.title}<br>\n        <strong>Created:</strong> ${new Date(post.created_at).toLocaleDateString()}<br>\n        <strong>Status:</strong> ${post.published ? 'Published' : 'Draft'}\n      </div>\n      <form action=\"/admin/delete/${post.id}\" method=\"POST\">\n        <button type=\"submit\" class=\"button delete-button\">Delete Post</button>\n        <a href=\"/admin\" class=\"button cancel-button\">Cancel</a>\n      </form>\n    </div>\n  `;\n\n  return renderTemplate('Delete Post', content, user, config);\n}", "// src/routes/proxy.js - Updated for deadlight blog integration with queue count\r\nimport { ProxyService } from '../services/proxy.js';\r\nimport { proxyDashboardTemplate } from '../templates/admin/proxyDashboard.js';\r\n\r\n// Helper function to get queued operations count\r\nasync function getQueuedCount(db) {\r\n    try {\r\n        const replies = await db.prepare(\r\n            'SELECT COUNT(*) as count FROM posts WHERE is_reply_draft = 1 AND email_metadata LIKE \\'%\"sent\":false%\\''\r\n        ).first();\r\n        \r\n        // Future: Add other queue types (federation posts, scheduled emails, etc.)\r\n        const federatedPosts = await db.prepare(\r\n            'SELECT COUNT(*) as count FROM posts WHERE federation_pending = 1'\r\n        ).first().catch(() => ({ count: 0 })); // Handle if column doesn't exist yet\r\n        \r\n        return (replies?.count || 0) + (federatedPosts?.count || 0);\r\n    } catch (error) {\r\n        console.error('Error getting queue count:', error);\r\n        return 0;\r\n    }\r\n}\r\n\r\nexport async function handleProxyRoutes(request, env, user) {\r\n    try {\r\n        // Get dynamic config\r\n        const { configService } = await import('../services/config.js');\r\n        const config = await configService.getConfig(env.DB);\r\n\r\n        // Initialize proxy service with config\r\n        const proxyUrl = env.PROXY_URL || config.proxyUrl || 'http://localhost:8080';\r\n        const proxyService = new ProxyService({ PROXY_URL: proxyUrl });\r\n\r\n        // Get queue count for outbox\r\n        const queueCount = await getQueuedCount(env.DB);\r\n\r\n        // Fetch proxy status data\r\n        const [blogStatus, emailStatus, healthCheck] = await Promise.allSettled([\r\n            proxyService.getBlogStatus(),\r\n            proxyService.getEmailStatus(),\r\n            proxyService.healthCheck()\r\n        ]);\r\n\r\n        const proxyData = {\r\n            status: healthCheck.status === 'fulfilled' ? healthCheck.value : { proxy_connected: false, error: healthCheck.reason?.message },\r\n            blogApi: blogStatus.status === 'fulfilled' ? blogStatus.value : { error: blogStatus.reason?.message },\r\n            emailApi: emailStatus.status === 'fulfilled' ? emailStatus.value : { error: emailStatus.reason?.message },\r\n            config: {\r\n                proxyUrl,\r\n                enabled: true\r\n            }\r\n        };\r\n\r\n        return new Response(proxyDashboardTemplate(proxyData, user, config, queueCount), {\r\n            headers: { 'Content-Type': 'text/html' }\r\n        });\r\n\r\n    } catch (error) {\r\n        console.error('Proxy dashboard error:', error);\r\n        const errorData = { \r\n            error: error.message,\r\n            status: { proxy_connected: false }\r\n        };\r\n        \r\n        // Get config for fallback\r\n        const { configService } = await import('../services/config.js');\r\n        const config = await configService.getConfig(env.DB);\r\n        \r\n        return new Response(proxyDashboardTemplate(errorData, user, config, 0), {\r\n            headers: { 'Content-Type': 'text/html' }\r\n        });\r\n    }\r\n}\r\n\r\n// Proxy test handlers remain the same\r\nexport const handleProxyTests = {\r\n    async testBlogApi(request, env) {\r\n        try {\r\n            const proxyUrl = env.PROXY_URL || 'http://localhost:8080';\r\n            const proxyService = new ProxyService({ PROXY_URL: proxyUrl });\r\n            const result = await proxyService.getBlogStatus();\r\n            return Response.json({ success: true, data: result });\r\n        } catch (error) {\r\n            console.error('Blog API test error:', error);\r\n            return Response.json({ success: false, error: error.message });\r\n        }\r\n    },\r\n\r\n    async testEmailApi(request, env) {\r\n        try {\r\n            const proxyUrl = env.PROXY_URL || 'http://localhost:8080';\r\n            const proxyService = new ProxyService({ PROXY_URL: proxyUrl });\r\n            const result = await proxyService.getEmailStatus();\r\n            return Response.json({ success: true, data: result });\r\n        } catch (error) {\r\n            console.error('Email API test error:', error);\r\n            return Response.json({ success: false, error: error.message });\r\n        }\r\n    },\r\n\r\n    async testFederation(request, env) {\r\n        try {\r\n            const proxyUrl = env.PROXY_URL || 'http://localhost:8080';\r\n            const proxyService = new ProxyService({ PROXY_URL: proxyUrl });\r\n            const testData = { \r\n                message: 'Test federation message from Cloudflare Worker',\r\n                timestamp: new Date().toISOString(),\r\n                source: 'deadlight-blog'\r\n            };\r\n            const result = await proxyService.sendFederatedPost(testData);\r\n            return Response.json({ success: true, data: result });\r\n        } catch (error) {\r\n            console.error('Federation test error:', error);\r\n            return Response.json({ success: false, error: error.message });\r\n        }\r\n    },\r\n\r\n    async sendTestEmail(request, env) {\r\n        try {\r\n            const { email } = await request.json();\r\n            const proxyUrl = env.PROXY_URL || 'http://localhost:8080';\r\n            const proxyService = new ProxyService({ PROXY_URL: proxyUrl });\r\n            \r\n            const emailData = {\r\n                to: email,\r\n                from: 'noreply@deadlight.boo',\r\n                subject: 'Test Email from Deadlight Proxy',\r\n                body: `Hello!\\n\\nThis is a test email sent through the Deadlight Proxy system.\\n\\nTimestamp: ${new Date().toISOString()}\\n\\nBest regards,\\nDeadlight System`\r\n            };\r\n            \r\n            const result = await proxyService.sendEmail(emailData);\r\n            return Response.json({ success: true, data: result });\r\n        } catch (error) {\r\n            console.error('Test email error:', error);\r\n            return Response.json({ success: false, error: error.message });\r\n        }\r\n    }\r\n};", "// src/templates/admin/proxyDashboard.js - Clean version using existing styles\nimport { renderTemplate } from '../base.js';\n\nexport function proxyDashboardTemplate(proxyData, user, config, queuedCount = 0) {\n    const { status, blogApi, emailApi, error } = proxyData;\n    const proxyConnected = status?.proxy_connected || false;\n\n    // Queue status section\n    const queueStatus = `\n        <div class=\"queue-status\">\n            <h3>Outbox Queue</h3>\n            <p>${queuedCount} operations pending</p>\n            ${proxyConnected ? `\n                <button onclick=\"processQueue()\" class=\"button\">Process Queue Now</button>\n            ` : `\n                <p class=\"queue-waiting\">Waiting for proxy connection...</p>\n            `}\n        </div>\n    `;\n    \n    const content = `\n        <div class=\"proxy-dashboard\">\n            <div class=\"dashboard-header\">\n                <h2>Proxy Server Management</h2>\n                <div class=\"status-indicator ${proxyConnected ? 'connected' : 'disconnected'}\">\n                    ${proxyConnected ? '\uD83D\uDFE2 Connected to Proxy' : '\uD83D\uDD34 Proxy Disconnected'}\n                </div>\n            </div>\n\n            ${error ? `\n                <div class=\"error-banner\">\n                    <h3>Connection Error</h3>\n                    <p>${error}</p>\n                    <p><strong>Proxy URL:</strong> ${proxyData.config?.proxyUrl || 'Not configured'}</p>\n                    <button onclick=\"window.location.reload()\" class=\"button\">Retry Connection</button>\n                </div>\n            ` : ''}\n\n            ${queueStatus}\n\n            <div class=\"proxy-services-grid\">\n                <!-- Blog API Status -->\n                <div class=\"service-card\">\n                    <h3>Blog API</h3>\n                    <div class=\"service-status ${blogApi?.status === 'running' ? 'healthy' : 'error'}\">\n                        Status: ${blogApi?.status || 'Unknown'}\n                    </div>\n                    ${blogApi?.version ? `<p><strong>Version:</strong> ${blogApi.version}</p>` : ''}\n                    ${blogApi?.error ? `<p class=\"error-text\">Error: ${blogApi.error}</p>` : ''}\n                    <button onclick=\"testBlogApi()\" class=\"button small-button\">Test Blog API</button>\n                </div>\n\n                <!-- Email API Status -->  \n                <div class=\"service-card\">\n                    <h3>Email API</h3>\n                    <div class=\"service-status ${emailApi?.status === 'running' ? 'healthy' : 'error'}\">\n                        Status: ${emailApi?.status || 'Unknown'}\n                    </div>\n                    ${emailApi?.queue_size !== undefined ? `<p><strong>Queue Size:</strong> ${emailApi.queue_size}</p>` : ''}\n                    ${emailApi?.last_processed ? `<p><strong>Last Processed:</strong> ${emailApi.last_processed}</p>` : ''}\n                    ${emailApi?.error ? `<p class=\"error-text\">Error: ${emailApi.error}</p>` : ''}\n                    <button onclick=\"testEmailApi()\" class=\"button small-button\">Test Email API</button>\n                </div>\n\n                <!-- Federation Status -->\n                <div class=\"service-card\">\n                    <h3>Email-based Federation</h3>\n                    <div class=\"service-status healthy\">\n                        Decentralized Social Media\n                    </div>\n                    <p><strong>Protocol:</strong> Email Bridge</p>\n                    <p><strong>Purpose:</strong> Instance-to-instance communication</p>\n                    <button onclick=\"testFederation()\" class=\"button small-button\">Test Federation</button>\n                </div>\n\n                <!-- Proxy Configuration -->\n                <div class=\"service-card\">\n                    <h3>Configuration</h3>\n                    <p><strong>Proxy URL:</strong> ${proxyData.config?.proxyUrl || 'Not configured'}</p>\n                    <p><strong>Connection:</strong> ${proxyConnected ? 'Active' : 'Inactive'}</p>\n                    ${status?.timestamp ? `<p><strong>Last Check:</strong> ${new Date(status.timestamp).toLocaleString()}</p>` : ''}\n                    <button onclick=\"window.location.reload()\" class=\"button\">Refresh Status</button>\n                </div>\n            </div>\n\n            <!-- Quick Actions -->\n            <div class=\"proxy-actions\">\n                <h3>Quick Actions</h3>\n                <div class=\"action-buttons\">\n                    <button onclick=\"sendTestEmail()\" class=\"button\">Send Test Email</button>\n                    <button onclick=\"publishTestPost()\" class=\"button\">Publish Test Post</button>\n                    <button onclick=\"federateTestMessage()\" class=\"button\">Test Federation</button>\n                    <button onclick=\"refreshAllStatus()\" class=\"button\">Refresh All Status</button>\n                </div>\n            </div>\n\n            <!-- Integration Guide -->\n            <div class=\"integration-guide\">\n                <h3>Integration Guide</h3>\n                <div class=\"guide-section\">\n                    <h4>Email Integration</h4>\n                    <p>Your proxy server bridges SMTP protocol to HTTP API calls, enabling your Cloudflare Worker to handle email seamlessly.</p>\n                    \n                    <h4>Federation Features</h4>\n                    <p>Enable decentralized social media by allowing blog instances to communicate via email protocols, avoiding ActivityPub complexity.</p>\n                    \n                    <h4>SOCKS5 Privacy</h4>\n                    <p>Your proxy also provides SOCKS5 capabilities for privacy and bypassing restrictions.</p>\n                </div>\n            </div>\n        </div>\n\n        <script>\n            async function processQueue() {\n                try {\n                    showLoading('Processing queue...');\n                    const response = await fetch('/admin/process-outbox', { method: 'POST' });\n                    const result = await response.json();\n                    hideLoading();\n                    alert(result.success ? '\u2705 ' + result.message : '\u274C ' + (result.error || 'Failed to process queue'));\n                    if (result.success) {\n                        location.reload(); // Refresh to show updated queue count\n                    }\n                } catch (error) {\n                    hideLoading();\n                    alert('Failed to process queue: ' + error.message);\n                }\n            }\n\n            async function testBlogApi() {\n                try {\n                    showLoading('Testing Blog API...');\n                    const response = await fetch('/admin/proxy/test-blog-api');\n                    const result = await response.json();\n                    hideLoading();\n                    alert('Blog API Test: ' + (result.success ? 'Success!' : 'Failed - ' + result.error));\n                } catch (error) {\n                    hideLoading();\n                    alert('Test failed: ' + error.message);\n                }\n            }\n\n            async function testEmailApi() {\n                try {\n                    showLoading('Testing Email API...');\n                    const response = await fetch('/admin/proxy/test-email-api');\n                    const result = await response.json();\n                    hideLoading();\n                    alert('Email API Test: ' + (result.success ? 'Success!' : 'Failed - ' + result.error));\n                } catch (error) {\n                    hideLoading();\n                    alert('Test failed: ' + error.message);\n                }\n            }\n\n            async function testFederation() {\n                try {\n                    showLoading('Testing Federation...');\n                    const response = await fetch('/admin/proxy/test-federation');\n                    const result = await response.json();\n                    hideLoading();\n                    alert('Federation Test: ' + (result.success ? 'Success!' :  Failed - ' + result.error));\n                } catch (error) {\n                    hideLoading();\n                    alert('Test failed: ' + error.message);\n                }\n            }\n\n            async function sendTestEmail() {\n                const email = prompt('Enter test email address:');\n                if (email) {\n                    try {\n                        showLoading('Sending test email...');\n                        const response = await fetch('/admin/proxy/send-test-email', {\n                            method: 'POST',\n                            headers: { 'Content-Type': 'application/json' },\n                            body: JSON.stringify({ email })\n                        });\n                        const result = await response.json();\n                        hideLoading();\n                        alert('Test email: ' + (result.success ? 'Sent successfully!' : 'Failed - ' + result.error));\n                    } catch (error) {\n                        hideLoading();\n                        alert('Failed: ' + error.message);\n                    }\n                }\n            }\n\n            async function publishTestPost() {\n                try {\n                    showLoading('Testing post functionality...');\n                    // Future: integrate with actual post creation\n                    alert('Test post functionality - ready for integration');\n                    hideLoading();\n                } catch (error) {\n                    hideLoading();\n                    alert('Failed: ' + error.message);\n                }\n            }\n\n            async function federateTestMessage() {\n                const domain = prompt('Enter target domain for federation test (e.g., otherblog.com):');\n                if (domain) {\n                    try {\n                        showLoading('Testing federation...');\n                        const response = await fetch('/admin/proxy/test-federation', {\n                            method: 'POST',\n                            headers: { 'Content-Type': 'application/json' },\n                            body: JSON.stringify({ target_domain: domain })\n                        });\n                        const result = await response.json();\n                        hideLoading();\n                        alert('Federation test: ' + (result.success ? 'Success!' : 'Failed - ' + result.error));\n                    } catch (error) {\n                        hideLoading();\n                        alert('Federation failed: ' + error.message);\n                    }\n                }\n            }\n\n            function refreshAllStatus() {\n                showLoading('Refreshing proxy status...');\n                window.location.reload();\n            }\n\n            function showLoading(message) {\n                let loading = document.getElementById('loading-indicator');\n                if (!loading) {\n                    loading = document.createElement('div');\n                    loading.id = 'loading-indicator';\n                    loading.className = 'loading-indicator';\n                    document.body.appendChild(loading);\n                }\n                loading.textContent = message;\n                loading.style.display = 'block';\n            }\n\n            function hideLoading() {\n                const loading = document.getElementById('loading-indicator');\n                if (loading) {\n                    loading.style.display = 'none';\n                }\n            }\n        </script>\n    `;\n\n    return renderTemplate('Proxy Server Management', content, user, config);\n}", "// src/routes/blog.js\nimport { renderPostList } from '../templates/blog/list.js';\nimport { renderSinglePost } from '../templates/blog/single.js';\nimport { checkAuth } from '../utils/auth.js';\n\nexport const blogRoutes = {\n  '/': {\n    GET: async (request, env) => {\n      try {\n        // Check authentication\n        const user = await checkAuth(request, env);\n        console.log('Auth check result:', { isAuthenticated: !!user, user });\n        \n        // Get dynamic config with error handling\n        const { configService } = await import('../services/config.js');\n        const config = await configService.getConfig(env.DB);\n        console.log('Config loaded:', config); // Debug log\n        \n        // Ensure postsPerPage is a valid number\n        const postsPerPage = parseInt(config.postsPerPage) || 10;\n        \n        // Get page number from query params\n        const url = new URL(request.url);\n        const page = parseInt(url.searchParams.get('page') || '1');\n        const offset = (page - 1) * postsPerPage;\n        \n        // Get total count for pagination (only published posts, exclude emails)\n        const countResult = await env.DB.prepare(\n          'SELECT COUNT(*) as total FROM posts WHERE published = 1 AND (is_email = 0 OR is_email IS NULL)'\n        ).first();\n        const totalPosts = countResult.total;\n        const totalPages = Math.ceil(totalPosts / postsPerPage);\n        \n        // Get posts for current page\n        const result = await env.DB.prepare(`\n          SELECT \n            posts.*, \n            users.username as author_username \n          FROM posts \n          JOIN users ON posts.author_id = users.id \n          WHERE posts.published = 1 AND (posts.is_email = 0 OR posts.is_email IS NULL)\n          ORDER BY posts.created_at DESC\n          LIMIT ? OFFSET ?\n        `).bind(postsPerPage, offset).all();\n\n        const paginationData = {\n          currentPage: page,\n          totalPages: totalPages,\n          totalPosts: totalPosts,\n          postsPerPage: postsPerPage,\n          hasPrevious: page > 1,\n          hasNext: page < totalPages,\n          previousPage: page - 1,\n          nextPage: page + 1\n        };\n\n        return new Response(\n          renderPostList(result.results, user, paginationData, config), \n          {\n            headers: { 'Content-Type': 'text/html' }\n          }\n        );\n      } catch (error) {\n        console.error('Blog route error:', error);\n        return new Response('Internal server error', { status: 500 });\n      }\n    }\n  },\n  \n  '/post/:id': {\n    GET: async (request, env) => {\n      try {\n        const postId = request.params.id;\n        const user = await checkAuth(request, env);\n        \n        // Get dynamic config\n        const { configService } = await import('../services/config.js');\n        const config = await configService.getConfig(env.DB);\n        \n        // First try to find by slug\n        let post = await env.DB.prepare(`\n          SELECT \n            posts.*,\n            users.username as author_username\n          FROM posts \n          LEFT JOIN users ON posts.author_id = users.id\n          WHERE posts.slug = ? AND posts.published = 1 AND (posts.is_email = 0 OR posts.is_email IS NULL)\n        `).bind(postId).first();\n        \n        // If not found by slug, try by ID\n        if (!post) {\n          post = await env.DB.prepare(`\n            SELECT \n              posts.*,\n              users.username as author_username\n            FROM posts \n            LEFT JOIN users ON posts.author_id = users.id\n            WHERE posts.id = ? AND posts.published = 1 AND (posts.is_email = 0 OR posts.is_email IS NULL)\n          `).bind(postId).first();\n        }\n\n        if (!post) {\n          return new Response('Post not found', { status: 404 });\n        }\n\n        // Get navigation (previous/next posts)\n        let navigation = null;\n        try {\n          // Get previous post (older)\n          const prevPost = await env.DB.prepare(`\n            SELECT id, title, slug\n            FROM posts \n            WHERE created_at < ? AND published = 1 AND (is_email = 0 OR is_email IS NULL)\n            ORDER BY created_at DESC \n            LIMIT 1\n          `).bind(post.created_at).first();\n\n          // Get next post (newer)\n          const nextPost = await env.DB.prepare(`\n            SELECT id, title, slug\n            FROM posts \n            WHERE created_at > ? AND published = 1 AND (is_email = 0 OR is_email IS NULL)\n            ORDER BY created_at ASC \n            LIMIT 1\n          `).bind(post.created_at).first();\n\n          if (prevPost || nextPost) {\n            navigation = {\n              prev_id: prevPost ? (prevPost.slug || prevPost.id) : null,\n              prev_title: prevPost ? prevPost.title : null,\n              next_id: nextPost ? (nextPost.slug || nextPost.id) : null,\n              next_title: nextPost ? nextPost.title : null\n            };\n          }\n        } catch (navError) {\n          console.error('Navigation query error:', navError);\n          // Continue without navigation if it fails\n        }\n\n        // Pass config as the 4th parameter to match your updated template\n        return new Response(renderSinglePost(post, user, navigation, config), {\n          headers: { 'Content-Type': 'text/html' }\n        });\n      } catch (error) {\n        console.error('Post page error:', error);\n        return new Response('Internal server error', { status: 500 });\n      }\n    }\n  }\n};", "// src/templates/blog/list.js \nimport { renderTemplate } from '../base.js';\nimport { renderMarkdown } from '../../../../../lib.deadlight/core/src/markdown/processor.js';\nimport { PostList, Pagination } from '../../../../../lib.deadlight/core/src/components/posts/index.js';\nimport { defaultProcessor } from '../../../../../lib.deadlight/core/src/markdown/processor.js';\n\nconst postList = new PostList({\n  showActions: true,\n  showAuthor: true,\n  showDate: true\n});\n\nconst pagination = new Pagination({\n  baseUrl: '/'\n});\n\nfunction createExcerpt(content, maxLength = 300) {\n  // Check for manual excerpt marker\n  const moreIndex = content.indexOf('<!--more-->');\n  if (moreIndex !== -1) {\n    // Process the excerpt portion through markdown, then return\n    const excerptContent = content.substring(0, moreIndex).trim();\n    return defaultProcessor.render(excerptContent);\n  }\n  \n  // For automatic excerpts, we need to be more careful\n  // First, let's extract the excerpt text, then process it\n  const plainText = content\n    .replace(/#{1,6}\\s/g, '') // Remove headers\n    .replace(/\\*\\*(.+?)\\*\\*/g, '$1') // Remove bold\n    .replace(/\\*(.+?)\\*/g, '$1') // Remove italic\n    .replace(/$$([^$$]+)\\]$[^)]+$/g, '$1') // Remove links (fixed regex)\n    .replace(/```[\\s\\S]*?```/g, '') // Remove code blocks\n    .replace(/`(.+?)`/g, '$1') // Remove inline code\n    .replace(/\\n{2,}/g, ' ') // Replace multiple newlines with space\n    .replace(/\\n/g, ' ') // Replace single newlines with space\n    .trim();\n  \n  let excerptText;\n  if (plainText.length <= maxLength) {\n    excerptText = plainText;\n  } else {\n    // Cut at last complete word\n    const excerpt = plainText.substring(0, maxLength);\n    const lastSpace = excerpt.lastIndexOf(' ');\n    excerptText = excerpt.substring(0, lastSpace) + '...';\n  }\n  \n  // Now process the excerpt through markdown (this handles things like lists, emphasis, etc.)\n  return defaultProcessor.render(excerptText);\n}\n\n// Alternative approach - create a proper markdown excerpt function\nfunction createMarkdownExcerpt(content, maxLength = 300) {\n  // Check for manual excerpt marker\n  const moreIndex = content.indexOf('<!--more-->');\n  if (moreIndex !== -1) {\n    const excerptContent = content.substring(0, moreIndex).trim();\n    return defaultProcessor.render(excerptContent);\n  }\n  \n  // For automatic excerpts, we need to render first, then truncate\n  const fullHtml = defaultProcessor.render(content);\n  \n  // Convert HTML back to text for length checking\n  const textContent = fullHtml\n    .replace(/<[^>]*>/g, '') // Strip HTML tags\n    .replace(/&[^;]+;/g, ' ') // Replace HTML entities with space\n    .trim();\n  \n  if (textContent.length <= maxLength) {\n    return fullHtml;\n  }\n  \n  // If too long, we need to truncate the markdown before processing\n  // This is trickier, so let's find a good breaking point in the original content\n  let truncateAt = maxLength;\n  \n  // Try to find a paragraph break near our target length\n  const paragraphs = content.split('\\n\\n');\n  let currentLength = 0;\n  let excerptParagraphs = [];\n  \n  for (const paragraph of paragraphs) {\n    if (currentLength + paragraph.length > maxLength && excerptParagraphs.length > 0) {\n      break;\n    }\n    excerptParagraphs.push(paragraph);\n    currentLength += paragraph.length;\n  }\n  \n  const excerptContent = excerptParagraphs.join('\\n\\n') + '...';\n  return defaultProcessor.render(excerptContent);\n}\n\nexport function renderPostList(posts = [], user = null, paginationData = null, config = null) {\n  // Process posts to add rendered excerpts\n  const postsWithExcerpts = posts.map(post => ({\n    ...post,\n    excerpt: createMarkdownExcerpt(post.content || '', 300)\n  }));\n  \n  const postsHtml = postList.render(postsWithExcerpts, { user });\n  const paginationHtml = pagination.render(paginationData);\n\n  return renderTemplate(\n    'Blog Posts',\n    `<div class=\"container\">\n      ${postsHtml}\n      ${paginationHtml}\n    </div>`,\n    user,\n    config\n  );\n}\n\nfunction renderPagination(pagination) {\n  if (!pagination || pagination.totalPages <= 1) {\n    return '';\n  }\n\n  const { currentPage, totalPages, hasPrevious, hasNext, previousPage, nextPage } = pagination;\n  \n  // Generate page numbers\n  const pageNumbers = [];\n  const maxPagesToShow = 5;\n  let startPage = Math.max(1, currentPage - Math.floor(maxPagesToShow / 2));\n  let endPage = Math.min(totalPages, startPage + maxPagesToShow - 1);\n  \n  if (endPage - startPage < maxPagesToShow - 1) {\n    startPage = Math.max(1, endPage - maxPagesToShow + 1);\n  }\n  \n  for (let i = startPage; i <= endPage; i++) {\n    pageNumbers.push(i);\n  }\n\n  return `\n    <nav class=\"pagination\" aria-label=\"Pagination Navigation\">\n      ${hasPrevious ? `\n        <a href=\"/?page=1\" class=\"pagination-link pagination-first\" aria-label=\"First page\">\u226A</a>\n        <a href=\"/?page=${previousPage}\" class=\"pagination-link pagination-prev\" aria-label=\"Previous page\">\u2039</a>\n      ` : `\n        <span class=\"pagination-link pagination-disabled\">\u226A</span>\n        <span class=\"pagination-link pagination-disabled\">\u2039</span>\n      `}\n      \n      ${startPage > 1 ? '<span class=\"pagination-ellipsis\">...</span>' : ''}\n      \n      ${pageNumbers.map(num => \n        num === currentPage \n          ? `<span class=\"pagination-link pagination-current\" aria-current=\"page\">${num}</span>`\n          : `<a href=\"/?page=${num}\" class=\"pagination-link\">${num}</a>`\n      ).join('')}\n      \n      ${endPage < totalPages ? '<span class=\"pagination-ellipsis\">...</span>' : ''}\n      \n      ${hasNext ? `\n        <a href=\"/?page=${nextPage}\" class=\"pagination-link pagination-next\" aria-label=\"Next page\">\u203A</a>\n        <a href=\"/?page=${totalPages}\" class=\"pagination-link pagination-last\" aria-label=\"Last page\">\u226B</a>\n      ` : `\n        <span class=\"pagination-link pagination-disabled\">\u203A</span>\n        <span class=\"pagination-link pagination-disabled\">\u226B</span>\n      `}\n      \n      <div class=\"pagination-info\">Page ${currentPage} of ${totalPages}</div>\n    </nav>\n  `;\n}", "// lib.deadlight/core/src/components/posts/index.js\nexport { PostList } from './list.js';\nexport { Pagination } from './pagination.js';\n", "// lib.deadlight/core/src/components/posts/list.js\nimport { MarkdownProcessor } from '../../markdown/index.js';\n\nexport class PostList {\n  constructor(options = {}) {\n    this.markdown = options.markdown || new MarkdownProcessor();\n    this.showActions = options.showActions !== false;\n    this.showAuthor = options.showAuthor !== false;\n    this.showDate = options.showDate !== false;\n    this.excerptLength = options.excerptLength || 300;\n  }\n\n  render(posts = [], options = {}) {\n    const { user = null, baseUrl = '' } = options;\n    \n    if (posts.length === 0) {\n      return '<p>No posts yet.</p>';\n    }\n    \n    return posts.map(post => this.renderPost(post, user, baseUrl)).join('\\n');\n  }\n\n  renderPost(post, user, baseUrl = '') {\n    const excerpt = this.markdown.extractExcerpt(post.content, this.excerptLength);\n    const hasMore = this.markdown.hasMore(post.content, this.excerptLength);\n    \n    return `\n      <article class=\"post-preview\">\n        <h2><a href=\"${baseUrl}/post/${post.id}\">${post.title}</a></h2>\n        ${this.renderMeta(post)}\n        <div class=\"post-excerpt\">\n          ${this.markdown.render(excerpt)}\n        </div>\n        <div class=\"post-footer\">\n          ${hasMore ? `<a href=\"${baseUrl}/post/${post.id}\" class=\"read-more\">Read more \u2192</a>` : ''}\n          ${user && this.showActions ? this.renderActions(post, baseUrl) : ''}\n        </div>\n      </article>\n    `;\n  }\n\n  renderMeta(post) {\n    const parts = [];\n    \n    if (this.showAuthor && post.author_username) {\n      parts.push(`By ${post.author_username}`);\n    }\n    \n    if (this.showDate && post.created_at) {\n      parts.push(new Date(post.created_at).toLocaleDateString());\n    }\n    \n    return parts.length > 0 \n      ? `<div class=\"post-meta\">${parts.join(' | ')}</div>`\n      : '';\n  }\n\n  renderActions(post, baseUrl = '') {\n    return `\n      <div class=\"post-actions\">\n        <a href=\"${baseUrl}/admin/edit/${post.id}\" class=\"button edit-button\">Edit</a>\n        <form class=\"delete-link\" action=\"${baseUrl}/admin/delete/${post.id}\" method=\"POST\" style=\"display: inline;\">\n          <button type=\"submit\" class=\"button delete-button\">Delete</button>\n        </form>\n      </div>\n    `;\n  }\n}\n", "// lib.deadlight/core/src/markdown/index.js\nexport { MarkdownProcessor, renderMarkdown } from './processor.js';\n", "// lib.deadlight/core/src/components/posts/pagination.js\nexport class Pagination {\n  constructor(options = {}) {\n    this.maxPagesToShow = options.maxPagesToShow || 5;\n    this.baseUrl = options.baseUrl || '/';\n  }\n\n  render(pagination) {\n    if (!pagination || pagination.totalPages <= 1) {\n      return '';\n    }\n\n    const { currentPage, totalPages, hasPrevious, hasNext, previousPage, nextPage } = pagination;\n    \n    const pageNumbers = this.getPageNumbers(currentPage, totalPages);\n\n    return `\n      <nav class=\"pagination\" aria-label=\"Pagination Navigation\">\n        ${this.renderNavButtons(hasPrevious, hasNext, previousPage, nextPage, totalPages)}\n        ${this.renderPageNumbers(pageNumbers, currentPage, totalPages)}\n        <div class=\"pagination-info\">Page ${currentPage} of ${totalPages}</div>\n      </nav>\n    `;\n  }\n\n  getPageNumbers(currentPage, totalPages) {\n    const pageNumbers = [];\n    let startPage = Math.max(1, currentPage - Math.floor(this.maxPagesToShow / 2));\n    let endPage = Math.min(totalPages, startPage + this.maxPagesToShow - 1);\n    \n    if (endPage - startPage < this.maxPagesToShow - 1) {\n      startPage = Math.max(1, endPage - this.maxPagesToShow + 1);\n    }\n    \n    for (let i = startPage; i <= endPage; i++) {\n      pageNumbers.push(i);\n    }\n    \n    return { pageNumbers, startPage, endPage };\n  }\n\n  renderNavButtons(hasPrevious, hasNext, previousPage, nextPage, totalPages) {\n    return `\n      ${hasPrevious ? `\n        <a href=\"${this.baseUrl}?page=1\" class=\"pagination-link pagination-first\" aria-label=\"First page\">\u226A</a>\n        <a href=\"${this.baseUrl}?page=${previousPage}\" class=\"pagination-link pagination-prev\" aria-label=\"Previous page\">\u2039</a>\n      ` : `\n        <span class=\"pagination-link pagination-disabled\">\u226A</span>\n        <span class=\"pagination-link pagination-disabled\">\u2039</span>\n      `}\n      \n      ${hasNext ? `\n        <a href=\"${this.baseUrl}?page=${nextPage}\" class=\"pagination-link pagination-next\" aria-label=\"Next page\">\u203A</a>\n        <a href=\"${this.baseUrl}?page=${totalPages}\" class=\"pagination-link pagination-last\" aria-label=\"Last page\">\u226B</a>\n      ` : `\n        <span class=\"pagination-link pagination-disabled\">\u203A</span>\n        <span class=\"pagination-link pagination-disabled\">\u226B</span>\n      `}\n    `;\n  }\n\n  renderPageNumbers({ pageNumbers, startPage, endPage }, currentPage, totalPages) {\n    return `\n      ${startPage > 1 ? '<span class=\"pagination-ellipsis\">...</span>' : ''}\n      \n      ${pageNumbers.map(num => \n        num === currentPage \n          ? `<span class=\"pagination-link pagination-current\" aria-current=\"page\">${num}</span>`\n          : `<a href=\"${this.baseUrl}?page=${num}\" class=\"pagination-link\">${num}</a>`\n      ).join('')}\n      \n      ${endPage < totalPages ? '<span class=\"pagination-ellipsis\">...</span>' : ''}\n    `;\n  }\n}\n", "// src/templates/blog/single.js\nimport { renderTemplate } from '../base.js';\nimport { renderMarkdown } from '../../../../../lib.deadlight/core/src/markdown/processor.js';\nimport { renderAuthorLink } from '../../utils/templates.js';\n\nexport function renderSinglePost(post, user = null, navigation = null, config = null) {\n  const postDate = new Date(post.created_at).toLocaleDateString('en-US', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  });\n  \n  // Remove the <!--more--> marker from full post display\n  const fullContent = post.content.replace('<!--more-->', '');\n  \n  const content = `\n    <article class=\"single-post\">\n      <header class=\"post-header\">\n        <h1>${post.title}</h1>\n        <div class=\"post-meta\">\n          <span>By ${renderAuthorLink(post.author_username)}</span>\n          <span class=\"separator\">\u2022</span>\n          <time datetime=\"${post.created_at}\">${postDate}</time>\n          ${post.updated_at && post.updated_at !== post.created_at ? `\n            <span class=\"separator\">\u2022</span>\n            <span class=\"updated\">Updated ${new Date(post.updated_at).toLocaleDateString()}</span>\n          ` : ''}\n        </div>\n      </header>\n      \n      <div class=\"post-content\">\n        ${renderMarkdown(fullContent)}\n      </div>\n      \n      ${user ? `\n        <div class=\"post-actions\">\n          <a href=\"/admin/edit/${post.id}\" class=\"button edit-button\">Edit Post</a>\n          <form class=\"delete-form\" action=\"/admin/delete/${post.id}\" method=\"POST\" \n                onsubmit=\"return confirm('Are you sure you want to delete this post?');\">\n            <button type=\"submit\" class=\"button delete-button\">Delete Post</button>\n          </form>\n        </div>\n      ` : ''}\n      \n      ${navigation ? `\n        <nav class=\"post-navigation\">\n          ${navigation.prev_id ? `\n            <a href=\"/post/${navigation.prev_id}\" class=\"nav-prev\">\n              <span class=\"nav-label\">\u2190 Previous</span>\n              <span class=\"nav-title\">${navigation.prev_title}</span>\n            </a>\n          ` : '<div></div>'}\n          \n          ${navigation.next_id ? `\n            <a href=\"/post/${navigation.next_id}\" class=\"nav-next\">\n              <span class=\"nav-label\">Next \u2192</span>\n              <span class=\"nav-title\">${navigation.next_title}</span>\n            </a>\n          ` : '<div></div>'}\n        </nav>\n      ` : ''}\n    </article>\n  `;\n  \n  // Pass config to renderTemplate for dynamic site title\n  return renderTemplate(post.title, content, user, config);\n}", "// src/utils/templates.js\r\nexport function renderAuthorLink(username) {\r\n  return `<a href=\"/user/${username}\" class=\"author-link\">${username}</a>`;\r\n}", "\r\n// src/routes/inbox.js\r\nimport { renderTemplate } from '../templates/base.js';\r\nimport { MarkdownProcessor } from '../../../../lib.deadlight/core/src/markdown/processor.js';\r\nimport { checkAuth } from '../utils/auth.js';\r\nimport { configService } from '../services/config.js'; // Add this import\r\n\r\nexport const inboxRoutes = {\r\n  '/inbox': {\r\n    GET: async (request, env) => {\r\n      const user = await checkAuth(request, env);\r\n      if (!user) {\r\n        return Response.redirect(`${new URL(request.url).origin}/login`);\r\n      }\r\n      \r\n      // Get dynamic config\r\n      const config = await configService.getConfig(env.DB);\r\n      \r\n      const page = parseInt(request.query?.page || '1');\r\n      const limit = config.postsPerPage || 10; // Use dynamic posts per page\r\n      \r\n      // Fetch emails (posts with is_email = 1)\r\n      const offset = (page - 1) * limit;\r\n      const query = 'SELECT * FROM posts WHERE is_email = 1 ORDER BY created_at DESC LIMIT ? OFFSET ?';\r\n      const countQuery = 'SELECT COUNT(*) as total FROM posts WHERE is_email = 1';\r\n      const emailsResult = await env.DB.prepare(query).bind(limit, offset).all();\r\n      const countResult = await env.DB.prepare(countQuery).first();\r\n      const totalEmails = countResult.total;\r\n      const totalPages = Math.ceil(totalEmails / limit);\r\n      \r\n      // Format emails for rendering with Markdown\r\n      const processor = new MarkdownProcessor();\r\n      const emails = emailsResult.results.map(email => {\r\n        const metadata = email.email_metadata ? JSON.parse(email.email_metadata) : {};\r\n        const excerpt = email.content.length > 200 ? email.content.substring(0, 200) + '...' : email.content;\r\n        return {\r\n          ...email,\r\n          from: metadata.from || 'Unknown Sender',\r\n          date: metadata.date || email.created_at,\r\n          content: excerpt, // Show excerpt in list view\r\n          full_content: processor.render(email.content) // Render full content for single view\r\n        };\r\n      });\r\n      \r\n      const emailList = emails.length > 0 \r\n        ? emails.map(email => `\r\n            <article class=\"email-preview\">\r\n              <h2><a href=\"/email/${email.id}\">${escapeHtml(email.title)}</a></h2>\r\n              <div class=\"email-meta\">\r\n                <strong>From:</strong> ${escapeHtml(email.from)} | <strong>Date:</strong> ${new Date(email.date).toLocaleString()}\r\n              </div>\r\n              <div class=\"email-excerpt\">\r\n                ${processor.render(email.content)}\r\n              </div>\r\n              <div class=\"email-footer\">\r\n                <a href=\"/email/${email.id}\" class=\"read-more\">Read Full Email \u2192</a>\r\n                ${user ? `\r\n                  <div class=\"email-actions\">\r\n                    <a href=\"/inbox/reply/${email.id}\" class=\"button reply-button\">Reply</a>\r\n                  </div>\r\n                ` : ''}\r\n              </div>\r\n            </article>\r\n          `).join('\\n')\r\n        : '<p>No emails in inbox.</p>';\r\n      \r\n      const pagination = {\r\n        currentPage: page,\r\n        totalPages,\r\n        hasPrevious: page > 1,\r\n        hasNext: page < totalPages,\r\n        previousPage: page - 1,\r\n        nextPage: page + 1,\r\n        totalEmails\r\n      };\r\n      \r\n      const paginationHtml = renderPagination(pagination, '/inbox');\r\n      \r\n      return new Response(\r\n        renderTemplate(\r\n          'Email Inbox',\r\n          `<div class=\"container\">\r\n            <h1>Email Inbox</h1>\r\n            ${emailList}\r\n            ${paginationHtml}\r\n          </div>`,\r\n          user,\r\n          config // Pass config here\r\n        ),\r\n        { headers: { 'Content-Type': 'text/html' } }\r\n      );\r\n    }\r\n  },\r\n  '/email/:id': {\r\n    GET: async (request, env) => {\r\n      const user = await checkAuth(request, env);\r\n      if (!user) {\r\n        return Response.redirect(`${new URL(request.url).origin}/login`);\r\n      }\r\n      \r\n      // Get dynamic config\r\n      const config = await configService.getConfig(env.DB);\r\n      \r\n      const emailId = request.params.id;\r\n      const query = 'SELECT * FROM posts WHERE id = ? AND is_email = 1';\r\n      const emailResult = await env.DB.prepare(query).bind(emailId).first();\r\n      \r\n      if (!emailResult) {\r\n        return new Response(\r\n          renderTemplate('Email Not Found', '<p>Email not found or access denied.</p>', user, config),\r\n          { headers: { 'Content-Type': 'text/html' }, status: 404 }\r\n        );\r\n      }\r\n      \r\n      const metadata = emailResult.email_metadata ? JSON.parse(emailResult.email_metadata) : {};\r\n      const processor = new MarkdownProcessor();\r\n      const email = {\r\n        ...emailResult,\r\n        from: metadata.from || 'Unknown Sender',\r\n        date: metadata.date || emailResult.created_at,\r\n        content: processor.render(emailResult.content)\r\n      };\r\n      \r\n      const emailDate = new Date(email.date).toLocaleString('en-US', {\r\n        year: 'numeric',\r\n        month: 'long',\r\n        day: 'numeric',\r\n        hour: '2-digit',\r\n        minute: '2-digit'\r\n      });\r\n      \r\n      const content = `\r\n        <article class=\"single-email\">\r\n          <header class=\"email-header\">\r\n            <h1>${escapeHtml(email.title)}</h1>\r\n            <div class=\"email-meta\">\r\n              <span><strong>From:</strong> ${escapeHtml(email.from)}</span>\r\n              <span class=\"separator\">\u2022</span>\r\n              <time datetime=\"${email.date}\">${emailDate}</time>\r\n            </div>\r\n          </header>\r\n          <div class=\"email-content\">\r\n            ${email.content}\r\n          </div>\r\n          ${user ? `\r\n            <div class=\"email-actions\">\r\n              <a href=\"/inbox/reply/${email.id}\" class=\"button reply-button\">Reply</a>\r\n              <form class=\"delete-form\" action=\"/inbox/delete/${email.id}\" method=\"POST\" \r\n                    onsubmit=\"return confirm('Are you sure you want to delete this email?');\">\r\n                <button type=\"submit\" class=\"button delete-button\">Delete</button>\r\n              </form>\r\n            </div>\r\n          ` : ''}\r\n          <nav class=\"email-navigation\">\r\n            <a href=\"/inbox\" class=\"nav-back\">\u2190 Back to Inbox</a>\r\n          </nav>\r\n        </article>\r\n      `;\r\n      \r\n      return new Response(\r\n        renderTemplate(email.title, `<div class=\"container\">${content}</div>`, user, config),\r\n        { headers: { 'Content-Type': 'text/html' } }\r\n      );\r\n    }\r\n  },\r\n  '/inbox/reply/:id': {\r\n    GET: async (request, env) => {\r\n        const user = await checkAuth(request, env);\r\n        if (!user) {\r\n          return Response.redirect(`${new URL(request.url).origin}/login`);\r\n        }\r\n        \r\n        // Get dynamic config\r\n        const config = await configService.getConfig(env.DB);\r\n        \r\n        const emailId = request.params.id;\r\n        const query = 'SELECT * FROM posts WHERE id = ? AND is_email = 1';\r\n        const emailResult = await env.DB.prepare(query).bind(emailId).first();\r\n        \r\n        if (!emailResult) {\r\n          return new Response(\r\n            renderTemplate('Email Not Found', '<p>Email not found or access denied.</p>', user, config),\r\n            { headers: { 'Content-Type': 'text/html' }, status: 404 }\r\n          );\r\n        }\r\n        \r\n        const metadata = emailResult.email_metadata ? JSON.parse(emailResult.email_metadata) : {};\r\n        const originalFrom = metadata.from || 'Unknown Sender';\r\n        const originalSubject = emailResult.title || 'No Subject';\r\n        const replyTo = originalFrom;\r\n        const replySubject = originalSubject.startsWith('Re:') ? originalSubject : `Re: ${originalSubject}`;\r\n        const quotedBody = `On ${new Date(metadata.date || emailResult.created_at).toLocaleString()}, ${originalFrom} wrote:\\n> ${emailResult.content.split('\\n').join('\\n> ')}`;\r\n        \r\n        const content = `\r\n        <div class=\"reply-form-container\">\r\n            <h1>Reply to ${escapeHtml(originalFrom)}</h1>\r\n            <form action=\"/inbox/reply/${emailId}\" method=\"POST\" class=\"reply-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"to\">To:</label>\r\n                <input type=\"text\" id=\"to\" name=\"to\" value=\"${escapeHtml(replyTo)}\" readonly class=\"form-input readonly\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"subject\">Subject:</label>\r\n                <input type=\"text\" id=\"subject\" name=\"subject\" value=\"${escapeHtml(replySubject)}\" class=\"form-input\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"body\">Your Reply:</label>\r\n                <textarea id=\"body\" name=\"body\" rows=\"10\" class=\"form-textarea\" placeholder=\"Write your reply here...\">\\n\\n${quotedBody}</textarea>\r\n            </div>\r\n            <div class=\"form-actions\">\r\n                <button type=\"submit\" class=\"button send-button\">Send Reply</button>\r\n                <a href=\"/email/${emailId}\" class=\"button cancel-button secondary\">Cancel</a>\r\n            </div>\r\n            </form>\r\n        </div>\r\n        `;\r\n        \r\n        return new Response(\r\n          renderTemplate('Compose Reply', `<div class=\"container\">${content}</div>`, user, config),\r\n          { headers: { 'Content-Type': 'text/html' } }\r\n        );\r\n    },\r\n    POST: async (request, env) => {\r\n        const user = await checkAuth(request, env);\r\n        if (!user) {\r\n          return Response.redirect(`${new URL(request.url).origin}/login`);\r\n        }\r\n        \r\n        // Get dynamic config\r\n        const config = await configService.getConfig(env.DB);\r\n        \r\n        const emailId = request.params.id;\r\n        const query = 'SELECT * FROM posts WHERE id = ? AND is_email = 1';\r\n        const emailResult = await env.DB.prepare(query).bind(emailId).first();\r\n        \r\n        if (!emailResult) {\r\n          return new Response(\r\n            renderTemplate('Email Not Found', '<p>Email not found or access denied.</p>', user, config),\r\n            { headers: { 'Content-Type': 'text/html' }, status: 404 }\r\n          );\r\n        }\r\n        \r\n        const formData = await request.formData();\r\n        const to = formData.get('to') || '';\r\n        const subject = formData.get('subject') || 'Re: No Subject';\r\n        const body = formData.get('body') || '';\r\n        \r\n        if (!to || !body) {\r\n          return new Response(\r\n            renderTemplate('Invalid Input', '<p>Recipient and reply body are required.</p><a href=\"/inbox/reply/' + emailId + '\" class=\"button\">Try Again</a>', user, config),\r\n            { headers: { 'Content-Type': 'text/html' }, status: 400 }\r\n          );\r\n        }\r\n        \r\n        try {\r\n          // Store the reply as a draft in the posts table with is_reply_draft = 1\r\n          const replyMetadata = JSON.stringify({\r\n            to: to,\r\n            from: 'deadlight.boo@gmail.com', // Or user's email if available\r\n            original_id: emailId,\r\n            date_queued: new Date().toISOString(),\r\n            sent: false\r\n          });\r\n          const insertQuery = `\r\n            INSERT INTO posts (title, content, slug, author_id, created_at, updated_at, published, is_email, email_metadata, is_reply_draft)\r\n            VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\r\n          `;\r\n          await env.DB.prepare(insertQuery).bind(\r\n            subject,\r\n            body,\r\n            `reply-draft-${Date.now()}-${Math.random().toString(36).substring(2, 7)}`, // Unique slug\r\n            user.id,\r\n            new Date().toISOString(),\r\n            new Date().toISOString(),\r\n            0, // Not published\r\n            0, // Not an incoming email\r\n            replyMetadata,\r\n            1  // Flag as reply draft\r\n          ).run();\r\n          \r\n          const successMessage = `<p>Reply queued for sending to ${escapeHtml(to)}! It will be sent shortly.</p><a href=\"/email/${emailId}\" class=\"button\">Back to Email</a><a href=\"/inbox\" class=\"button secondary\">Back to Inbox</a>`;\r\n          return new Response(\r\n            renderTemplate('Reply Queued', successMessage, user, config),\r\n            { headers: { 'Content-Type': 'text/html' } }\r\n          );\r\n        } catch (error) {\r\n          console.error(`Failed to queue reply: ${error.message}`);\r\n          const errorMessage = `<p>Failed to queue reply: ${escapeHtml(error.message)}</p><a href=\"/inbox/reply/${emailId}\" class=\"button\">Try Again</a>`;\r\n          return new Response(\r\n            renderTemplate('Queue Failed', errorMessage, user, config),\r\n            { headers: { 'Content-Type': 'text/html' }, status: 500 }\r\n          );\r\n        }\r\n    }\r\n  }\r\n};\r\n\r\nfunction renderPagination(pagination, basePath = '/inbox') {\r\n  if (!pagination || pagination.totalPages <= 1) {\r\n    return '';\r\n  }\r\n\r\n  const { currentPage, totalPages, hasPrevious, hasNext, previousPage, nextPage } = pagination;\r\n  \r\n  // Generate page numbers\r\n  const pageNumbers = [];\r\n  const maxPagesToShow = 5;\r\n  let startPage = Math.max(1, currentPage - Math.floor(maxPagesToShow / 2));\r\n  let endPage = Math.min(totalPages, startPage + maxPagesToShow - 1);\r\n  \r\n  if (endPage - startPage < maxPagesToShow - 1) {\r\n    startPage = Math.max(1, endPage - maxPagesToShow + 1);\r\n  }\r\n  \r\n  for (let i = startPage; i <= endPage; i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  return `\r\n    <nav class=\"pagination\" aria-label=\"Pagination Navigation\">\r\n      ${hasPrevious ? `\r\n        <a href=\"${basePath}?page=1\" class=\"pagination-link pagination-first\" aria-label=\"First page\">\u226A</a>\r\n        <a href=\"${basePath}?page=${previousPage}\" class=\"pagination-link pagination-prev\" aria-label=\"Previous page\">\u2039</a>\r\n      ` : `\r\n        <span class=\"pagination-link pagination-disabled\">\u226A</span>\r\n        <span class=\"pagination-link pagination-disabled\">\u2039</span>\r\n      `}\r\n      \r\n      ${startPage > 1 ? '<span class=\"pagination-ellipsis\">...</span>' : ''}\r\n      \r\n      ${pageNumbers.map(num => \r\n        num === currentPage \r\n          ? `<span class=\"pagination-link pagination-current\" aria-current=\"page\">${num}</span>`\r\n          : `<a href=\"${basePath}?page=${num}\" class=\"pagination-link\">${num}</a>`\r\n      ).join('')}\r\n      \r\n      ${endPage < totalPages ? '<span class=\"pagination-ellipsis\">...</span>' : ''}\r\n      \r\n      ${hasNext ? `\r\n        <a href=\"${basePath}?page=${nextPage}\" class=\"pagination-link pagination-next\" aria-label=\"Next page\">\u203A</a>\r\n        <a href=\"${basePath}?page=${totalPages}\" class=\"pagination-link pagination-last\" aria-label=\"Last page\">\u226B</a>\r\n      ` : `\r\n        <span class=\"pagination-link pagination-disabled\">\u203A</span>\r\n        <span class=\"pagination-link pagination-disabled\">\u226B</span>\r\n      `}\r\n      \r\n      <div class=\"pagination-info\">Page ${currentPage} of ${totalPages}</div>\r\n    </nav>\r\n  `;\r\n}\r\n\r\nfunction escapeHtml(text) {\r\n  return text\r\n    .replace(/&/g, '&amp;')\r\n    .replace(/</g, '&lt;')\r\n    .replace(/>/g, '&gt;')\r\n    .replace(/\"/g, '&quot;')\r\n    .replace(/'/g, '&#039;');\r\n}", "// src/routes/user.js\nimport { checkAuth } from '../utils/auth.js';\n\n// Username validation (reusing your slug pattern)\nfunction validateUsername(username) {\n  const RESERVED_SUBDOMAINS = [\n    'www', 'api', 'blog', 'proxy', 'comm', 'email', 'lib', 'admin', 'root',\n    'help', 'support', 'popular', 'trending', 'feed', 'deadlight', 'official',\n    'staff', 'team', 'system', 'config', 'manage', 'test', 'demo'\n  ];\n  \n  const errors = [];\n  \n  if (username.length < 3) errors.push('Too short (min 3 chars)');\n  if (username.length > 20) errors.push('Too long (max 20 chars)');\n  \n  if (RESERVED_SUBDOMAINS.includes(username.toLowerCase())) {\n    errors.push('Username not available');\n  }\n  \n  // Same pattern as your slugs: [a-z0-9-]+, but can't start/end with hyphen\n  if (!/^[a-z0-9][a-z0-9-]*[a-z0-9]$/.test(username.toLowerCase()) && username.length > 1) {\n    errors.push('Invalid format (letters, numbers, hyphens only; no leading/trailing hyphens)');\n  }\n  \n  return {\n    valid: errors.length === 0,\n    errors\n  };\n}\n\nexport const userRoutes = {\n  '/user/:username': {\n    GET: async (request, env) => {\n      try {\n        const username = request.params.username.toLowerCase();\n        const currentUser = await checkAuth(request, env);\n        \n        // Get dynamic config\n        const { configService } = await import('../services/config.js');\n        const config = await configService.getConfig(env.DB);\n        \n        // Find user by subdomain (which should match username)\n        const user = await env.DB.prepare(`\n          SELECT u.*, \n                 COUNT(p.id) as post_count,\n                 MAX(p.created_at) as last_post_date\n          FROM users u\n          LEFT JOIN posts p ON u.id = p.author_id \n            AND p.published = 1 \n            AND (p.is_email = 0 OR p.is_email IS NULL)\n          WHERE LOWER(u.subdomain) = ? OR LOWER(u.username) = ?\n          GROUP BY u.id\n        `).bind(username, username).first();\n        \n        if (!user) {\n          return new Response('User not found', { status: 404 });\n        }\n        \n        // Get user's recent posts (paginated)\n        const url = new URL(request.url);\n        const page = parseInt(url.searchParams.get('page') || '1');\n        const postsPerPage = 10;\n        const offset = (page - 1) * postsPerPage;\n        \n        const posts = await env.DB.prepare(`\n          SELECT id, title, slug, content, excerpt, created_at, updated_at, published\n          FROM posts \n          WHERE author_id = ? \n            AND published = 1 \n            AND (is_email = 0 OR is_email IS NULL)\n          ORDER BY created_at DESC\n          LIMIT ? OFFSET ?\n        `).bind(user.id, postsPerPage, offset).all();\n        \n        // Get total post count for pagination\n        const totalResult = await env.DB.prepare(`\n          SELECT COUNT(*) as total \n          FROM posts \n          WHERE author_id = ? \n            AND published = 1 \n            AND (is_email = 0 OR is_email IS NULL)\n        `).bind(user.id).first();\n        \n        const totalPosts = totalResult.total;\n        const totalPages = Math.ceil(totalPosts / postsPerPage);\n        \n        const pagination = {\n          currentPage: page,\n          totalPages,\n          totalPosts,\n          hasNext: page < totalPages,\n          hasPrevious: page > 1,\n          nextPage: page + 1,\n          previousPage: page - 1\n        };\n        \n        // Create user profile template\n        const { renderUserProfile } = await import('../templates/user/profile.js');\n        return new Response(renderUserProfile(user, posts.results, currentUser, config, pagination), {\n          headers: { 'Content-Type': 'text/html' }\n        });\n        \n      } catch (error) {\n        console.error('User profile error:', error);\n        return new Response('Internal server error', { status: 500 });\n      }\n    }\n  }\n};\n", "// src/middleware/error.js\nexport const errorMiddleware = async (request, env, next) => {\n  try {\n    const response = await next();\n    return response;\n  } catch (error) {\n    console.error('Application error:', {\n      message: error.message,\n      stack: error.stack,\n      url: request.url,\n      method: request.method\n    });\n    \n    const errorMap = {\n      'Unauthorized': { status: 401, message: 'Unauthorized access' },\n      'Not Found': { status: 404, message: 'Resource not found' },\n      'Invalid request data': { status: 400, message: 'Invalid request data' },\n      'default': { status: 500, message: 'Internal server error' }\n    };\n\n    const errorResponse = errorMap[error.message] || errorMap.default;\n    \n    // Check for development mode\n    const isDevelopment = env.ENVIRONMENT !== 'production';\n    const responseBody = isDevelopment \n      ? `Error: ${error.message}\\n\\nStack: ${error.stack}`\n      : errorResponse.message;\n\n    return new Response(responseBody, { \n      status: errorResponse.status,\n      headers: { 'Content-Type': 'text/plain' }\n    });\n  }\n};", "// src/middleware/logging.js\n\n// Utility to extract client IP from request\nfunction getClientIP(request) {\n  return request.headers.get('cf-connecting-ip') || \n         request.headers.get('x-real-ip') || \n         request.headers.get('x-forwarded-for') || \n         'unknown';\n}\n\n// Create the logs table if it doesn't exist\nconst initLogsTable = async (db) => {\n  await db.prepare(`\n    CREATE TABLE IF NOT EXISTS request_logs (\n      id INTEGER PRIMARY KEY AUTOINCREMENT,\n      timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,\n      path TEXT NOT NULL,\n      method TEXT NOT NULL,\n      duration INTEGER NOT NULL,\n      status_code INTEGER,\n      user_agent TEXT,\n      ip TEXT,\n      referer TEXT,\n      country TEXT,\n      error TEXT\n    )\n  `).run();\n};\n\n// Separate function to log the completed request\nexport const logRequest = async (request, response, env) => {\n  try {\n    const duration = Date.now() - request.timing.startTime;\n    const analytics = request.analytics || {};\n    \n    await env.DB.prepare(`\n      INSERT INTO request_logs (\n        path,\n        method,\n        duration,\n        status_code,\n        user_agent,\n        ip,\n        referer,\n        country,\n        error\n      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)\n    `).bind(\n      analytics.path,\n      analytics.method,\n      duration,\n      response.status,\n      analytics.userAgent,\n      analytics.ip,\n      analytics.referer,\n      analytics.country,\n      response.ok ? null : response.statusText\n    ).run();\n\n  } catch (error) {\n    console.error('Error logging request:', error);\n  }\n};\n\nexport const loggingMiddleware = async (request, env, next) => {\n  const startTime = Date.now();\n  const url = new URL(request.url);\n  \n  try {\n    // Initialize logs table if needed\n    await initLogsTable(env.DB);\n    \n    // Collect request data\n    const requestData = {\n      path: url.pathname,\n      method: request.method,\n      userAgent: request.headers.get('user-agent'),\n      ip: getClientIP(request),\n      referer: request.headers.get('referer') || '',\n      country: request.headers.get('cf-ipcountry') || 'unknown'\n    };\n    \n    // Add analytics data to request\n    request.analytics = requestData;\n    request.timing = { startTime };\n    \n    // Call the next middleware/handler\n    const response = await next();\n    \n    // Log the completed request\n    const duration = Date.now() - startTime;\n    \n    // Don't await this - log asynchronously to not slow down response\n    env.DB.prepare(`\n      INSERT INTO request_logs (\n        path, method, duration, status_code, \n        user_agent, ip, referer, country, error\n      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)\n    `).bind(\n      requestData.path,\n      requestData.method,\n      duration,\n      response.status,\n      requestData.userAgent,\n      requestData.ip,\n      requestData.referer,\n      requestData.country,\n      response.ok ? null : response.statusText\n    ).run().catch(err => console.error('Failed to log request:', err));\n    \n    return response;\n    \n  } catch (error) {\n    console.error('Logging middleware error:', error);\n    // If logging fails, still continue with the request\n    return await next();\n  }\n};", "// lib.deadlight/core/src/security/middleware.js\nimport { authLimiter, apiLimiter } from './ratelimit.js';\nimport { securityHeaders } from './headers.js';\n\nexport async function rateLimitMiddleware(request, env, ctx, next) {\n  const url = new URL(request.url);\n  \n  // Choose limiter based on path\n  let limiter = apiLimiter;\n  if (url.pathname.startsWith('/login') || url.pathname.startsWith('/register')) {\n    limiter = authLimiter;\n  }\n  \n  const result = await limiter.isAllowed(request, env);\n  \n  if (!result.allowed) {\n    return new Response('Too Many Requests', {\n      status: 429,\n      headers: {\n        'Retry-After': Math.ceil((result.resetAt - Date.now()) / 1000),\n        'X-RateLimit-Limit': limiter.maxRequests,\n        'X-RateLimit-Remaining': '0',\n        'X-RateLimit-Reset': result.resetAt.toISOString()\n      }\n    });\n  }\n  \n  // Call next middleware and add rate limit headers\n  const response = await next();\n  response.headers.set('X-RateLimit-Limit', limiter.maxRequests);\n  response.headers.set('X-RateLimit-Remaining', result.remaining);\n  response.headers.set('X-RateLimit-Reset', result.resetAt.toISOString());\n  \n  return response;\n}\n\nexport async function securityHeadersMiddleware(request, env, ctx, next) {\n  const response = await next();\n  return securityHeaders(response);\n}", "// lib.deadlight/core/src/security/headers.js\nexport function securityHeaders(response) {\n  const headers = new Headers(response.headers);\n  \n  // Prevent clickjacking\n  headers.set('X-Frame-Options', 'DENY');\n  \n  // Prevent MIME type sniffing\n  headers.set('X-Content-Type-Options', 'nosniff');\n  \n  // Enable browser XSS protection\n  headers.set('X-XSS-Protection', '1; mode=block');\n  \n  // Content Security Policy\n  headers.set('Content-Security-Policy', \n    \"default-src 'self'; \" +\n    \"script-src 'self' 'unsafe-inline'; \" +\n    \"style-src 'self' 'unsafe-inline'; \" +\n    \"img-src 'self' data: https:; \" +\n    \"font-src 'self'; \" +\n    \"connect-src 'self'; \" +\n    \"frame-ancestors 'none';\"\n  );\n  \n  // Referrer Policy\n  headers.set('Referrer-Policy', 'strict-origin-when-cross-origin');\n  \n  // Permissions Policy\n  headers.set('Permissions-Policy', \n    'accelerometer=(), camera=(), geolocation=(), ' +\n    'gyroscope=(), magnetometer=(), microphone=(), ' +\n    'payment=(), usb=()'\n  );\n  \n  return new Response(response.body, {\n    status: response.status,\n    statusText: response.statusText,\n    headers\n  });\n}\n\nexport function securityHeadersMiddleware(request, env, ctx, next) {\n  return next().then(response => securityHeaders(response));\n}", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n"],
  "mappings": "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",
  "names": ["checkAuth", "b", "_", "config", "init_base", "config", "d", "init_base", "config", "init_base", "init_base", "config", "pagination", "init_settings", "init_settings", "init_config", "config", "_getDefaults", "changeDefaults", "newDefaults", "_defaults", "edit", "regex", "opt", "source", "obj", "name", "val", "valSource", "other", "escape", "html", "encode", "getEscapeReplacement", "cleanUrl", "href", "splitCells", "tableRow", "count", "row", "match", "offset", "str", "escaped", "curr", "cells", "i", "rtrim", "c", "invert", "l", "suffLen", "currChar", "findClosingBracket", "b", "level", "outputLink", "cap", "link", "raw", "lexer", "rules", "title", "text", "token", "indentCodeCompensation", "matchIndentToCode", "indentToCode", "node", "matchIndentInNode", "indentInNode", "marked", "src", "markedInstance", "noopTest", "newline", "blockCode", "fences", "hr", "heading", "bullet", "lheadingCore", "lheading", "lheadingGfm", "_paragraph", "blockText", "_blockLabel", "def", "list", "_tag", "_comment", "paragraph", "blockquote", "blockNormal", "gfmTable", "blockGfm", "blockPedantic", "inlineCode", "br", "inlineText", "_punctuation", "_punctuationOrSpace", "_notPunctuationOrSpace", "punctuation", "_punctuationGfmStrongEm", "_punctuationOrSpaceGfmStrongEm", "_notPunctuationOrSpaceGfmStrongEm", "blockSkip", "emStrongLDelimCore", "emStrongLDelim", "emStrongLDelimGfm", "emStrongRDelimAstCore", "emStrongRDelimAst", "emStrongRDelimAstGfm", "emStrongRDelimUnd", "anyPunctuation", "autolink", "_inlineComment", "tag", "_inlineLabel", "reflink", "nolink", "reflinkSearch", "inlineNormal", "inlinePedantic", "inlineGfm", "inlineBreaks", "block", "inline", "escapeReplacements", "_Tokenizer", "_Lexer", "_Renderer", "_TextRenderer", "_Parser", "_Hooks", "Marked", "options", "setOptions", "use", "walkTokens", "parseInline", "parser", "bull", "indent", "ch", "trimmed", "lines", "tokens", "inBlockquote", "currentLines", "currentRaw", "currentText", "top", "lastToken", "oldToken", "newText", "newToken", "isordered", "itemRegex", "endsWithBlankLine", "endEarly", "itemContents", "line", "t", "nextLine", "blankLine", "nextBulletRegex", "hrRegex", "fencesBeginRegex", "headingBeginRegex", "htmlBeginRegex", "rawLine", "nextLineWithoutTabs", "istask", "ischecked", "lastItem", "spacers", "hasMultipleLineBreaks", "headers", "aligns", "rows", "item", "align", "cell", "trimmedUrl", "rtrimSlash", "lastParenIndex", "linkLen", "links", "linkString", "maskedSrc", "prevChar", "lLength", "rDelim", "rLength", "delimTotal", "midDelimTotal", "endReg", "lastCharLength", "hasNonSpaceChars", "hasSpaceCharsOnBothEnds", "prevCapZero", "__Lexer", "next", "lastParagraphClipped", "extTokenizer", "cutSrc", "startIndex", "tempSrc", "tempStart", "getStartIndex", "errMsg", "keepPrevChar", "lang", "langString", "code", "depth", "ordered", "start", "body", "j", "type", "startAttr", "itemBody", "checkbox", "checked", "header", "k", "content", "cleanHref", "out", "__Parser", "anyToken", "genericToken", "ret", "textToken", "renderer", "markdown", "args", "callback", "values", "tableToken", "listToken", "childTokens", "extensions", "pack", "opts", "ext", "prevRenderer", "extLevel", "prop", "rendererProp", "rendererFunc", "tokenizer", "tokenizerProp", "tokenizerFunc", "prevTokenizer", "hooks", "hooksProp", "hooksFunc", "prevHook", "arg", "packWalktokens", "blockType", "origOpt", "throwError", "e", "silent", "async", "msg", "j", "_", "j", "_", "require_util", "j", "require_default", "_", "escapeHtml", "str", "j", "require_parser", "_", "escapeHtml", "v", "j", "_", "escapeHtml", "html", "ret", "require_lib", "filterXSS", "j", "config", "pagination", "content", "init_base", "_", "handler", "env", "verifyJWT", "verifyJWT", "re", "headers", "hashPassword", "init_base", "config", "init_base", "config", "init_base", "config", "init_base", "init_base", "config", "configService", "config", "init_base", "configService", "config", "renderAdminDashboard", "SettingsModel", "renderSettings", "renderUserManagement", "OutboxService", "init_base", "pagination", "excerptContent", "config", "init_base", "config", "configService", "config", "init_base", "init_config", "config", "pagination", "configService", "config", "pagination", "renderUserProfile"]
}
